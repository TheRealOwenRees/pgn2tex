{"version":3,"file":"index.js","mappings":"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","sources":["webpack://pgn2tex/./node_modules/@mliebelt/pgn-parser/lib/index.umd.js","webpack://pgn2tex/webpack/bootstrap","webpack://pgn2tex/webpack/runtime/compat get default export","webpack://pgn2tex/webpack/runtime/define property getters","webpack://pgn2tex/webpack/runtime/global","webpack://pgn2tex/webpack/runtime/hasOwnProperty shorthand","webpack://pgn2tex/./src/index.ts"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.PgnParser = {}));\n})(this, (function (exports) { 'use strict';\n\n\tvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\tvar _pgnParser = {exports: {}};\n\n\t(function (module) {\n\t\t// @ts-nocheck\n\t\t// Generated by Peggy 2.0.1.\n\t\t//\n\t\t// https://peggyjs.org/\n\t\t(function (root, factory) {\n\t\t    if (module.exports) {\n\t\t        module.exports = factory();\n\t\t    }\n\t\t})(commonjsGlobal, function () {\n\t\t    function peg$subclass(child, parent) {\n\t\t        function C() { this.constructor = child; }\n\t\t        C.prototype = parent.prototype;\n\t\t        child.prototype = new C();\n\t\t    }\n\t\t    function peg$SyntaxError(message, expected, found, location) {\n\t\t        var self = Error.call(this, message);\n\t\t        // istanbul ignore next Check is a necessary evil to support older environments\n\t\t        if (Object.setPrototypeOf) {\n\t\t            Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n\t\t        }\n\t\t        self.expected = expected;\n\t\t        self.found = found;\n\t\t        self.location = location;\n\t\t        self.name = \"SyntaxError\";\n\t\t        return self;\n\t\t    }\n\t\t    peg$subclass(peg$SyntaxError, Error);\n\t\t    function peg$padEnd(str, targetLength, padString) {\n\t\t        padString = padString || \" \";\n\t\t        if (str.length > targetLength) {\n\t\t            return str;\n\t\t        }\n\t\t        targetLength -= str.length;\n\t\t        padString += padString.repeat(targetLength);\n\t\t        return str + padString.slice(0, targetLength);\n\t\t    }\n\t\t    peg$SyntaxError.prototype.format = function (sources) {\n\t\t        var str = \"Error: \" + this.message;\n\t\t        if (this.location) {\n\t\t            var src = null;\n\t\t            var k;\n\t\t            for (k = 0; k < sources.length; k++) {\n\t\t                if (sources[k].source === this.location.source) {\n\t\t                    src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n\t\t                    break;\n\t\t                }\n\t\t            }\n\t\t            var s = this.location.start;\n\t\t            var loc = this.location.source + \":\" + s.line + \":\" + s.column;\n\t\t            if (src) {\n\t\t                var e = this.location.end;\n\t\t                var filler = peg$padEnd(\"\", s.line.toString().length, ' ');\n\t\t                var line = src[s.line - 1];\n\t\t                var last = s.line === e.line ? e.column : line.length + 1;\n\t\t                var hatLen = (last - s.column) || 1;\n\t\t                str += \"\\n --> \" + loc + \"\\n\"\n\t\t                    + filler + \" |\\n\"\n\t\t                    + s.line + \" | \" + line + \"\\n\"\n\t\t                    + filler + \" | \" + peg$padEnd(\"\", s.column - 1, ' ')\n\t\t                    + peg$padEnd(\"\", hatLen, \"^\");\n\t\t            }\n\t\t            else {\n\t\t                str += \"\\n at \" + loc;\n\t\t            }\n\t\t        }\n\t\t        return str;\n\t\t    };\n\t\t    peg$SyntaxError.buildMessage = function (expected, found) {\n\t\t        var DESCRIBE_EXPECTATION_FNS = {\n\t\t            literal: function (expectation) {\n\t\t                return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n\t\t            },\n\t\t            class: function (expectation) {\n\t\t                var escapedParts = expectation.parts.map(function (part) {\n\t\t                    return Array.isArray(part)\n\t\t                        ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n\t\t                        : classEscape(part);\n\t\t                });\n\t\t                return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts.join(\"\") + \"]\";\n\t\t            },\n\t\t            any: function () {\n\t\t                return \"any character\";\n\t\t            },\n\t\t            end: function () {\n\t\t                return \"end of input\";\n\t\t            },\n\t\t            other: function (expectation) {\n\t\t                return expectation.description;\n\t\t            }\n\t\t        };\n\t\t        function hex(ch) {\n\t\t            return ch.charCodeAt(0).toString(16).toUpperCase();\n\t\t        }\n\t\t        function literalEscape(s) {\n\t\t            return s\n\t\t                .replace(/\\\\/g, \"\\\\\\\\\")\n\t\t                .replace(/\"/g, \"\\\\\\\"\")\n\t\t                .replace(/\\0/g, \"\\\\0\")\n\t\t                .replace(/\\t/g, \"\\\\t\")\n\t\t                .replace(/\\n/g, \"\\\\n\")\n\t\t                .replace(/\\r/g, \"\\\\r\")\n\t\t                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n\t\t                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n\t\t        }\n\t\t        function classEscape(s) {\n\t\t            return s\n\t\t                .replace(/\\\\/g, \"\\\\\\\\\")\n\t\t                .replace(/\\]/g, \"\\\\]\")\n\t\t                .replace(/\\^/g, \"\\\\^\")\n\t\t                .replace(/-/g, \"\\\\-\")\n\t\t                .replace(/\\0/g, \"\\\\0\")\n\t\t                .replace(/\\t/g, \"\\\\t\")\n\t\t                .replace(/\\n/g, \"\\\\n\")\n\t\t                .replace(/\\r/g, \"\\\\r\")\n\t\t                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n\t\t                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n\t\t        }\n\t\t        function describeExpectation(expectation) {\n\t\t            return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n\t\t        }\n\t\t        function describeExpected(expected) {\n\t\t            var descriptions = expected.map(describeExpectation);\n\t\t            var i, j;\n\t\t            descriptions.sort();\n\t\t            if (descriptions.length > 0) {\n\t\t                for (i = 1, j = 1; i < descriptions.length; i++) {\n\t\t                    if (descriptions[i - 1] !== descriptions[i]) {\n\t\t                        descriptions[j] = descriptions[i];\n\t\t                        j++;\n\t\t                    }\n\t\t                }\n\t\t                descriptions.length = j;\n\t\t            }\n\t\t            switch (descriptions.length) {\n\t\t                case 1:\n\t\t                    return descriptions[0];\n\t\t                case 2:\n\t\t                    return descriptions[0] + \" or \" + descriptions[1];\n\t\t                default:\n\t\t                    return descriptions.slice(0, -1).join(\", \")\n\t\t                        + \", or \"\n\t\t                        + descriptions[descriptions.length - 1];\n\t\t            }\n\t\t        }\n\t\t        function describeFound(found) {\n\t\t            return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n\t\t        }\n\t\t        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n\t\t    };\n\t\t    function peg$parse(input, options) {\n\t\t        options = options !== undefined ? options : {};\n\t\t        var peg$FAILED = {};\n\t\t        var peg$source = options.grammarSource;\n\t\t        var peg$startRuleFunctions = { pgn: peg$parsepgn, tags: peg$parsetags, game: peg$parsegame, games: peg$parsegames };\n\t\t        var peg$startRuleFunction = peg$parsepgn;\n\t\t        var peg$c0 = \"Event\";\n\t\t        var peg$c1 = \"event\";\n\t\t        var peg$c2 = \"Site\";\n\t\t        var peg$c3 = \"site\";\n\t\t        var peg$c4 = \"Date\";\n\t\t        var peg$c5 = \"date\";\n\t\t        var peg$c6 = \"Round\";\n\t\t        var peg$c7 = \"round\";\n\t\t        var peg$c8 = \"White\";\n\t\t        var peg$c9 = \"white\";\n\t\t        var peg$c10 = \"Black\";\n\t\t        var peg$c11 = \"black\";\n\t\t        var peg$c12 = \"Result\";\n\t\t        var peg$c13 = \"result\";\n\t\t        var peg$c14 = \"WhiteTitle\";\n\t\t        var peg$c15 = \"Whitetitle\";\n\t\t        var peg$c16 = \"whitetitle\";\n\t\t        var peg$c17 = \"whiteTitle\";\n\t\t        var peg$c18 = \"BlackTitle\";\n\t\t        var peg$c19 = \"Blacktitle\";\n\t\t        var peg$c20 = \"blacktitle\";\n\t\t        var peg$c21 = \"blackTitle\";\n\t\t        var peg$c22 = \"WhiteELO\";\n\t\t        var peg$c23 = \"WhiteElo\";\n\t\t        var peg$c24 = \"Whiteelo\";\n\t\t        var peg$c25 = \"whiteelo\";\n\t\t        var peg$c26 = \"whiteElo\";\n\t\t        var peg$c27 = \"BlackELO\";\n\t\t        var peg$c28 = \"BlackElo\";\n\t\t        var peg$c29 = \"Blackelo\";\n\t\t        var peg$c30 = \"blackelo\";\n\t\t        var peg$c31 = \"blackElo\";\n\t\t        var peg$c32 = \"WhiteUSCF\";\n\t\t        var peg$c33 = \"WhiteUscf\";\n\t\t        var peg$c34 = \"Whiteuscf\";\n\t\t        var peg$c35 = \"whiteuscf\";\n\t\t        var peg$c36 = \"whiteUscf\";\n\t\t        var peg$c37 = \"BlackUSCF\";\n\t\t        var peg$c38 = \"BlackUscf\";\n\t\t        var peg$c39 = \"Blackuscf\";\n\t\t        var peg$c40 = \"blackuscf\";\n\t\t        var peg$c41 = \"blackUscf\";\n\t\t        var peg$c42 = \"WhiteNA\";\n\t\t        var peg$c43 = \"WhiteNa\";\n\t\t        var peg$c44 = \"Whitena\";\n\t\t        var peg$c45 = \"whitena\";\n\t\t        var peg$c46 = \"whiteNa\";\n\t\t        var peg$c47 = \"whiteNA\";\n\t\t        var peg$c48 = \"BlackNA\";\n\t\t        var peg$c49 = \"BlackNa\";\n\t\t        var peg$c50 = \"Blackna\";\n\t\t        var peg$c51 = \"blackna\";\n\t\t        var peg$c52 = \"blackNA\";\n\t\t        var peg$c53 = \"blackNa\";\n\t\t        var peg$c54 = \"WhiteType\";\n\t\t        var peg$c55 = \"Whitetype\";\n\t\t        var peg$c56 = \"whitetype\";\n\t\t        var peg$c57 = \"whiteType\";\n\t\t        var peg$c58 = \"BlackType\";\n\t\t        var peg$c59 = \"Blacktype\";\n\t\t        var peg$c60 = \"blacktype\";\n\t\t        var peg$c61 = \"blackType\";\n\t\t        var peg$c62 = \"EventDate\";\n\t\t        var peg$c63 = \"Eventdate\";\n\t\t        var peg$c64 = \"eventdate\";\n\t\t        var peg$c65 = \"eventDate\";\n\t\t        var peg$c66 = \"EventSponsor\";\n\t\t        var peg$c67 = \"Eventsponsor\";\n\t\t        var peg$c68 = \"eventsponsor\";\n\t\t        var peg$c69 = \"eventSponsor\";\n\t\t        var peg$c70 = \"Section\";\n\t\t        var peg$c71 = \"section\";\n\t\t        var peg$c72 = \"Stage\";\n\t\t        var peg$c73 = \"stage\";\n\t\t        var peg$c74 = \"Board\";\n\t\t        var peg$c75 = \"board\";\n\t\t        var peg$c76 = \"Opening\";\n\t\t        var peg$c77 = \"opening\";\n\t\t        var peg$c78 = \"Variation\";\n\t\t        var peg$c79 = \"variation\";\n\t\t        var peg$c80 = \"SubVariation\";\n\t\t        var peg$c81 = \"Subvariation\";\n\t\t        var peg$c82 = \"subvariation\";\n\t\t        var peg$c83 = \"subVariation\";\n\t\t        var peg$c84 = \"ECO\";\n\t\t        var peg$c85 = \"Eco\";\n\t\t        var peg$c86 = \"eco\";\n\t\t        var peg$c87 = \"NIC\";\n\t\t        var peg$c88 = \"Nic\";\n\t\t        var peg$c89 = \"nic\";\n\t\t        var peg$c90 = \"Time\";\n\t\t        var peg$c91 = \"time\";\n\t\t        var peg$c92 = \"UTCTime\";\n\t\t        var peg$c93 = \"UTCtime\";\n\t\t        var peg$c94 = \"UtcTime\";\n\t\t        var peg$c95 = \"Utctime\";\n\t\t        var peg$c96 = \"utctime\";\n\t\t        var peg$c97 = \"utcTime\";\n\t\t        var peg$c98 = \"UTCDate\";\n\t\t        var peg$c99 = \"UTCdate\";\n\t\t        var peg$c100 = \"UtcDate\";\n\t\t        var peg$c101 = \"Utcdate\";\n\t\t        var peg$c102 = \"utcdate\";\n\t\t        var peg$c103 = \"utcDate\";\n\t\t        var peg$c104 = \"TimeControl\";\n\t\t        var peg$c105 = \"Timecontrol\";\n\t\t        var peg$c106 = \"timecontrol\";\n\t\t        var peg$c107 = \"timeControl\";\n\t\t        var peg$c108 = \"SetUp\";\n\t\t        var peg$c109 = \"Setup\";\n\t\t        var peg$c110 = \"setup\";\n\t\t        var peg$c111 = \"setUp\";\n\t\t        var peg$c112 = \"FEN\";\n\t\t        var peg$c113 = \"Fen\";\n\t\t        var peg$c114 = \"fen\";\n\t\t        var peg$c115 = \"Termination\";\n\t\t        var peg$c116 = \"termination\";\n\t\t        var peg$c117 = \"Annotator\";\n\t\t        var peg$c118 = \"annotator\";\n\t\t        var peg$c119 = \"Mode\";\n\t\t        var peg$c120 = \"mode\";\n\t\t        var peg$c121 = \"PlyCount\";\n\t\t        var peg$c122 = \"Plycount\";\n\t\t        var peg$c123 = \"plycount\";\n\t\t        var peg$c124 = \"plyCount\";\n\t\t        var peg$c125 = \"Variant\";\n\t\t        var peg$c126 = \"variant\";\n\t\t        var peg$c127 = \"WhiteRatingDiff\";\n\t\t        var peg$c128 = \"BlackRatingDiff\";\n\t\t        var peg$c129 = \"WhiteFideId\";\n\t\t        var peg$c130 = \"BlackFideId\";\n\t\t        var peg$c131 = \"WhiteTeam\";\n\t\t        var peg$c132 = \"BlackTeam\";\n\t\t        var peg$c133 = \"Clock\";\n\t\t        var peg$c134 = \"WhiteClock\";\n\t\t        var peg$c135 = \"BlackClock\";\n\t\t        var peg$c137 = \"\\\"\";\n\t\t        var peg$c138 = \"\\\\\";\n\t\t        var peg$c139 = \".\";\n\t\t        var peg$c140 = \":\";\n\t\t        var peg$c141 = \"/\";\n\t\t        var peg$c142 = \"B\";\n\t\t        var peg$c143 = \"W\";\n\t\t        var peg$c144 = \"N\";\n\t\t        var peg$c145 = \"?\";\n\t\t        var peg$c146 = \"-\";\n\t\t        var peg$c147 = \"+\";\n\t\t        var peg$c148 = \"*\";\n\t\t        var peg$c149 = \"1-0\";\n\t\t        var peg$c150 = \"0-1\";\n\t\t        var peg$c151 = \"1/2-1/2\";\n\t\t        var peg$c152 = \"=\";\n\t\t        var peg$c153 = \"%csl\";\n\t\t        var peg$c154 = \"%cal\";\n\t\t        var peg$c155 = \"%\";\n\t\t        var peg$c156 = \"%eval\";\n\t\t        var peg$c157 = \"[%\";\n\t\t        var peg$c158 = \"}\";\n\t\t        var peg$c159 = \",\";\n\t\t        var peg$c160 = \"Y\";\n\t\t        var peg$c161 = \"G\";\n\t\t        var peg$c162 = \"R\";\n\t\t        var peg$c163 = \"{\";\n\t\t        var peg$c164 = \"[\";\n\t\t        var peg$c165 = \"]\";\n\t\t        var peg$c166 = \";\";\n\t\t        var peg$c167 = \"clk\";\n\t\t        var peg$c168 = \"egt\";\n\t\t        var peg$c169 = \"emt\";\n\t\t        var peg$c170 = \"mct\";\n\t\t        var peg$c171 = \"(\";\n\t\t        var peg$c172 = \")\";\n\t\t        var peg$c173 = \" \";\n\t\t        var peg$c174 = \"e.p.\";\n\t\t        var peg$c175 = \"O-O-O\";\n\t\t        var peg$c176 = \"O-O\";\n\t\t        var peg$c177 = \"@\";\n\t\t        var peg$c178 = \"+-\";\n\t\t        var peg$c179 = \"$$$\";\n\t\t        var peg$c180 = \"#\";\n\t\t        var peg$c181 = \"$\";\n\t\t        var peg$c182 = \"!!\";\n\t\t        var peg$c183 = \"??\";\n\t\t        var peg$c184 = \"!?\";\n\t\t        var peg$c185 = \"?!\";\n\t\t        var peg$c186 = \"!\";\n\t\t        var peg$c187 = \"\\u203C\";\n\t\t        var peg$c188 = \"\\u2047\";\n\t\t        var peg$c189 = \"\\u2049\";\n\t\t        var peg$c190 = \"\\u2048\";\n\t\t        var peg$c191 = \"\\u25A1\";\n\t\t        var peg$c192 = \"\\u221E\";\n\t\t        var peg$c193 = \"\\u2A72\";\n\t\t        var peg$c194 = \"\\u2A71\";\n\t\t        var peg$c195 = \"\\xB1\";\n\t\t        var peg$c196 = \"\\u2213\";\n\t\t        var peg$c197 = \"-+\";\n\t\t        var peg$c198 = \"\\u2A00\";\n\t\t        var peg$c199 = \"\\u27F3\";\n\t\t        var peg$c200 = \"\\u2192\";\n\t\t        var peg$c201 = \"\\u2191\";\n\t\t        var peg$c202 = \"\\u21C6\";\n\t\t        var peg$c203 = \"D\";\n\t\t        var peg$c204 = \"x\";\n\t\t        var peg$r0 = /^[ \\t\\n\\r]/;\n\t\t        var peg$r1 = /^[\\n\\r]/;\n\t\t        var peg$r2 = /^[\\-a-zA-Z0-9.]/;\n\t\t        var peg$r3 = /^[^\"\\\\\\r\\n]/;\n\t\t        var peg$r4 = /^[0-9?]/;\n\t\t        var peg$r5 = /^[0-9]/;\n\t\t        var peg$r6 = /^[^\\n\\r]/;\n\t\t        var peg$r7 = /^[RNBQKP]/;\n\t\t        var peg$r8 = /^[RNBQ]/;\n\t\t        var peg$r9 = /^[a-h]/;\n\t\t        var peg$r10 = /^[1-8]/;\n\t\t        var peg$e0 = peg$literalExpectation(\"Event\", false);\n\t\t        var peg$e1 = peg$literalExpectation(\"event\", false);\n\t\t        var peg$e2 = peg$literalExpectation(\"Site\", false);\n\t\t        var peg$e3 = peg$literalExpectation(\"site\", false);\n\t\t        var peg$e4 = peg$literalExpectation(\"Date\", false);\n\t\t        var peg$e5 = peg$literalExpectation(\"date\", false);\n\t\t        var peg$e6 = peg$literalExpectation(\"Round\", false);\n\t\t        var peg$e7 = peg$literalExpectation(\"round\", false);\n\t\t        var peg$e8 = peg$literalExpectation(\"White\", false);\n\t\t        var peg$e9 = peg$literalExpectation(\"white\", false);\n\t\t        var peg$e10 = peg$literalExpectation(\"Black\", false);\n\t\t        var peg$e11 = peg$literalExpectation(\"black\", false);\n\t\t        var peg$e12 = peg$literalExpectation(\"Result\", false);\n\t\t        var peg$e13 = peg$literalExpectation(\"result\", false);\n\t\t        var peg$e14 = peg$literalExpectation(\"WhiteTitle\", false);\n\t\t        var peg$e15 = peg$literalExpectation(\"Whitetitle\", false);\n\t\t        var peg$e16 = peg$literalExpectation(\"whitetitle\", false);\n\t\t        var peg$e17 = peg$literalExpectation(\"whiteTitle\", false);\n\t\t        var peg$e18 = peg$literalExpectation(\"BlackTitle\", false);\n\t\t        var peg$e19 = peg$literalExpectation(\"Blacktitle\", false);\n\t\t        var peg$e20 = peg$literalExpectation(\"blacktitle\", false);\n\t\t        var peg$e21 = peg$literalExpectation(\"blackTitle\", false);\n\t\t        var peg$e22 = peg$literalExpectation(\"WhiteELO\", false);\n\t\t        var peg$e23 = peg$literalExpectation(\"WhiteElo\", false);\n\t\t        var peg$e24 = peg$literalExpectation(\"Whiteelo\", false);\n\t\t        var peg$e25 = peg$literalExpectation(\"whiteelo\", false);\n\t\t        var peg$e26 = peg$literalExpectation(\"whiteElo\", false);\n\t\t        var peg$e27 = peg$literalExpectation(\"BlackELO\", false);\n\t\t        var peg$e28 = peg$literalExpectation(\"BlackElo\", false);\n\t\t        var peg$e29 = peg$literalExpectation(\"Blackelo\", false);\n\t\t        var peg$e30 = peg$literalExpectation(\"blackelo\", false);\n\t\t        var peg$e31 = peg$literalExpectation(\"blackElo\", false);\n\t\t        var peg$e32 = peg$literalExpectation(\"WhiteUSCF\", false);\n\t\t        var peg$e33 = peg$literalExpectation(\"WhiteUscf\", false);\n\t\t        var peg$e34 = peg$literalExpectation(\"Whiteuscf\", false);\n\t\t        var peg$e35 = peg$literalExpectation(\"whiteuscf\", false);\n\t\t        var peg$e36 = peg$literalExpectation(\"whiteUscf\", false);\n\t\t        var peg$e37 = peg$literalExpectation(\"BlackUSCF\", false);\n\t\t        var peg$e38 = peg$literalExpectation(\"BlackUscf\", false);\n\t\t        var peg$e39 = peg$literalExpectation(\"Blackuscf\", false);\n\t\t        var peg$e40 = peg$literalExpectation(\"blackuscf\", false);\n\t\t        var peg$e41 = peg$literalExpectation(\"blackUscf\", false);\n\t\t        var peg$e42 = peg$literalExpectation(\"WhiteNA\", false);\n\t\t        var peg$e43 = peg$literalExpectation(\"WhiteNa\", false);\n\t\t        var peg$e44 = peg$literalExpectation(\"Whitena\", false);\n\t\t        var peg$e45 = peg$literalExpectation(\"whitena\", false);\n\t\t        var peg$e46 = peg$literalExpectation(\"whiteNa\", false);\n\t\t        var peg$e47 = peg$literalExpectation(\"whiteNA\", false);\n\t\t        var peg$e48 = peg$literalExpectation(\"BlackNA\", false);\n\t\t        var peg$e49 = peg$literalExpectation(\"BlackNa\", false);\n\t\t        var peg$e50 = peg$literalExpectation(\"Blackna\", false);\n\t\t        var peg$e51 = peg$literalExpectation(\"blackna\", false);\n\t\t        var peg$e52 = peg$literalExpectation(\"blackNA\", false);\n\t\t        var peg$e53 = peg$literalExpectation(\"blackNa\", false);\n\t\t        var peg$e54 = peg$literalExpectation(\"WhiteType\", false);\n\t\t        var peg$e55 = peg$literalExpectation(\"Whitetype\", false);\n\t\t        var peg$e56 = peg$literalExpectation(\"whitetype\", false);\n\t\t        var peg$e57 = peg$literalExpectation(\"whiteType\", false);\n\t\t        var peg$e58 = peg$literalExpectation(\"BlackType\", false);\n\t\t        var peg$e59 = peg$literalExpectation(\"Blacktype\", false);\n\t\t        var peg$e60 = peg$literalExpectation(\"blacktype\", false);\n\t\t        var peg$e61 = peg$literalExpectation(\"blackType\", false);\n\t\t        var peg$e62 = peg$literalExpectation(\"EventDate\", false);\n\t\t        var peg$e63 = peg$literalExpectation(\"Eventdate\", false);\n\t\t        var peg$e64 = peg$literalExpectation(\"eventdate\", false);\n\t\t        var peg$e65 = peg$literalExpectation(\"eventDate\", false);\n\t\t        var peg$e66 = peg$literalExpectation(\"EventSponsor\", false);\n\t\t        var peg$e67 = peg$literalExpectation(\"Eventsponsor\", false);\n\t\t        var peg$e68 = peg$literalExpectation(\"eventsponsor\", false);\n\t\t        var peg$e69 = peg$literalExpectation(\"eventSponsor\", false);\n\t\t        var peg$e70 = peg$literalExpectation(\"Section\", false);\n\t\t        var peg$e71 = peg$literalExpectation(\"section\", false);\n\t\t        var peg$e72 = peg$literalExpectation(\"Stage\", false);\n\t\t        var peg$e73 = peg$literalExpectation(\"stage\", false);\n\t\t        var peg$e74 = peg$literalExpectation(\"Board\", false);\n\t\t        var peg$e75 = peg$literalExpectation(\"board\", false);\n\t\t        var peg$e76 = peg$literalExpectation(\"Opening\", false);\n\t\t        var peg$e77 = peg$literalExpectation(\"opening\", false);\n\t\t        var peg$e78 = peg$literalExpectation(\"Variation\", false);\n\t\t        var peg$e79 = peg$literalExpectation(\"variation\", false);\n\t\t        var peg$e80 = peg$literalExpectation(\"SubVariation\", false);\n\t\t        var peg$e81 = peg$literalExpectation(\"Subvariation\", false);\n\t\t        var peg$e82 = peg$literalExpectation(\"subvariation\", false);\n\t\t        var peg$e83 = peg$literalExpectation(\"subVariation\", false);\n\t\t        var peg$e84 = peg$literalExpectation(\"ECO\", false);\n\t\t        var peg$e85 = peg$literalExpectation(\"Eco\", false);\n\t\t        var peg$e86 = peg$literalExpectation(\"eco\", false);\n\t\t        var peg$e87 = peg$literalExpectation(\"NIC\", false);\n\t\t        var peg$e88 = peg$literalExpectation(\"Nic\", false);\n\t\t        var peg$e89 = peg$literalExpectation(\"nic\", false);\n\t\t        var peg$e90 = peg$literalExpectation(\"Time\", false);\n\t\t        var peg$e91 = peg$literalExpectation(\"time\", false);\n\t\t        var peg$e92 = peg$literalExpectation(\"UTCTime\", false);\n\t\t        var peg$e93 = peg$literalExpectation(\"UTCtime\", false);\n\t\t        var peg$e94 = peg$literalExpectation(\"UtcTime\", false);\n\t\t        var peg$e95 = peg$literalExpectation(\"Utctime\", false);\n\t\t        var peg$e96 = peg$literalExpectation(\"utctime\", false);\n\t\t        var peg$e97 = peg$literalExpectation(\"utcTime\", false);\n\t\t        var peg$e98 = peg$literalExpectation(\"UTCDate\", false);\n\t\t        var peg$e99 = peg$literalExpectation(\"UTCdate\", false);\n\t\t        var peg$e100 = peg$literalExpectation(\"UtcDate\", false);\n\t\t        var peg$e101 = peg$literalExpectation(\"Utcdate\", false);\n\t\t        var peg$e102 = peg$literalExpectation(\"utcdate\", false);\n\t\t        var peg$e103 = peg$literalExpectation(\"utcDate\", false);\n\t\t        var peg$e104 = peg$literalExpectation(\"TimeControl\", false);\n\t\t        var peg$e105 = peg$literalExpectation(\"Timecontrol\", false);\n\t\t        var peg$e106 = peg$literalExpectation(\"timecontrol\", false);\n\t\t        var peg$e107 = peg$literalExpectation(\"timeControl\", false);\n\t\t        var peg$e108 = peg$literalExpectation(\"SetUp\", false);\n\t\t        var peg$e109 = peg$literalExpectation(\"Setup\", false);\n\t\t        var peg$e110 = peg$literalExpectation(\"setup\", false);\n\t\t        var peg$e111 = peg$literalExpectation(\"setUp\", false);\n\t\t        var peg$e112 = peg$literalExpectation(\"FEN\", false);\n\t\t        var peg$e113 = peg$literalExpectation(\"Fen\", false);\n\t\t        var peg$e114 = peg$literalExpectation(\"fen\", false);\n\t\t        var peg$e115 = peg$literalExpectation(\"Termination\", false);\n\t\t        var peg$e116 = peg$literalExpectation(\"termination\", false);\n\t\t        var peg$e117 = peg$literalExpectation(\"Annotator\", false);\n\t\t        var peg$e118 = peg$literalExpectation(\"annotator\", false);\n\t\t        var peg$e119 = peg$literalExpectation(\"Mode\", false);\n\t\t        var peg$e120 = peg$literalExpectation(\"mode\", false);\n\t\t        var peg$e121 = peg$literalExpectation(\"PlyCount\", false);\n\t\t        var peg$e122 = peg$literalExpectation(\"Plycount\", false);\n\t\t        var peg$e123 = peg$literalExpectation(\"plycount\", false);\n\t\t        var peg$e124 = peg$literalExpectation(\"plyCount\", false);\n\t\t        var peg$e125 = peg$literalExpectation(\"Variant\", false);\n\t\t        var peg$e126 = peg$literalExpectation(\"variant\", false);\n\t\t        var peg$e127 = peg$literalExpectation(\"WhiteRatingDiff\", false);\n\t\t        var peg$e128 = peg$literalExpectation(\"BlackRatingDiff\", false);\n\t\t        var peg$e129 = peg$literalExpectation(\"WhiteFideId\", false);\n\t\t        var peg$e130 = peg$literalExpectation(\"BlackFideId\", false);\n\t\t        var peg$e131 = peg$literalExpectation(\"WhiteTeam\", false);\n\t\t        var peg$e132 = peg$literalExpectation(\"BlackTeam\", false);\n\t\t        var peg$e133 = peg$literalExpectation(\"Clock\", false);\n\t\t        var peg$e134 = peg$literalExpectation(\"WhiteClock\", false);\n\t\t        var peg$e135 = peg$literalExpectation(\"BlackClock\", false);\n\t\t        var peg$e136 = peg$otherExpectation(\"whitespace\");\n\t\t        var peg$e137 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false);\n\t\t        var peg$e138 = peg$classExpectation([\"\\n\", \"\\r\"], false, false);\n\t\t        var peg$e140 = peg$classExpectation([\"-\", [\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \".\"], false, false);\n\t\t        var peg$e141 = peg$literalExpectation(\"\\\"\", false);\n\t\t        var peg$e142 = peg$classExpectation([\"\\\"\", \"\\\\\", \"\\r\", \"\\n\"], true, false);\n\t\t        var peg$e143 = peg$literalExpectation(\"\\\\\", false);\n\t\t        var peg$e144 = peg$classExpectation([[\"0\", \"9\"], \"?\"], false, false);\n\t\t        var peg$e145 = peg$literalExpectation(\".\", false);\n\t\t        var peg$e146 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n\t\t        var peg$e147 = peg$literalExpectation(\":\", false);\n\t\t        var peg$e148 = peg$literalExpectation(\"/\", false);\n\t\t        var peg$e149 = peg$literalExpectation(\"B\", false);\n\t\t        var peg$e150 = peg$literalExpectation(\"W\", false);\n\t\t        var peg$e151 = peg$literalExpectation(\"N\", false);\n\t\t        var peg$e152 = peg$literalExpectation(\"?\", false);\n\t\t        var peg$e153 = peg$literalExpectation(\"-\", false);\n\t\t        var peg$e154 = peg$literalExpectation(\"+\", false);\n\t\t        var peg$e155 = peg$literalExpectation(\"*\", false);\n\t\t        var peg$e156 = peg$literalExpectation(\"1-0\", false);\n\t\t        var peg$e157 = peg$literalExpectation(\"0-1\", false);\n\t\t        var peg$e158 = peg$literalExpectation(\"1/2-1/2\", false);\n\t\t        var peg$e159 = peg$literalExpectation(\"=\", false);\n\t\t        var peg$e160 = peg$literalExpectation(\"%csl\", false);\n\t\t        var peg$e161 = peg$literalExpectation(\"%cal\", false);\n\t\t        var peg$e162 = peg$literalExpectation(\"%\", false);\n\t\t        var peg$e163 = peg$literalExpectation(\"%eval\", false);\n\t\t        var peg$e164 = peg$literalExpectation(\"[%\", false);\n\t\t        var peg$e165 = peg$literalExpectation(\"}\", false);\n\t\t        var peg$e166 = peg$anyExpectation();\n\t\t        var peg$e167 = peg$classExpectation([\"\\n\", \"\\r\"], true, false);\n\t\t        var peg$e168 = peg$literalExpectation(\",\", false);\n\t\t        var peg$e169 = peg$literalExpectation(\"Y\", false);\n\t\t        var peg$e170 = peg$literalExpectation(\"G\", false);\n\t\t        var peg$e171 = peg$literalExpectation(\"R\", false);\n\t\t        var peg$e172 = peg$literalExpectation(\"{\", false);\n\t\t        var peg$e173 = peg$literalExpectation(\"[\", false);\n\t\t        var peg$e174 = peg$literalExpectation(\"]\", false);\n\t\t        var peg$e175 = peg$literalExpectation(\";\", false);\n\t\t        var peg$e176 = peg$literalExpectation(\"clk\", false);\n\t\t        var peg$e177 = peg$literalExpectation(\"egt\", false);\n\t\t        var peg$e178 = peg$literalExpectation(\"emt\", false);\n\t\t        var peg$e179 = peg$literalExpectation(\"mct\", false);\n\t\t        var peg$e180 = peg$literalExpectation(\"(\", false);\n\t\t        var peg$e181 = peg$literalExpectation(\")\", false);\n\t\t        var peg$e182 = peg$otherExpectation(\"integer\");\n\t\t        var peg$e183 = peg$literalExpectation(\" \", false);\n\t\t        var peg$e184 = peg$literalExpectation(\"e.p.\", false);\n\t\t        var peg$e185 = peg$literalExpectation(\"O-O-O\", false);\n\t\t        var peg$e186 = peg$literalExpectation(\"O-O\", false);\n\t\t        var peg$e187 = peg$literalExpectation(\"@\", false);\n\t\t        var peg$e188 = peg$literalExpectation(\"+-\", false);\n\t\t        var peg$e189 = peg$literalExpectation(\"$$$\", false);\n\t\t        var peg$e190 = peg$literalExpectation(\"#\", false);\n\t\t        var peg$e191 = peg$literalExpectation(\"$\", false);\n\t\t        var peg$e192 = peg$literalExpectation(\"!!\", false);\n\t\t        var peg$e193 = peg$literalExpectation(\"??\", false);\n\t\t        var peg$e194 = peg$literalExpectation(\"!?\", false);\n\t\t        var peg$e195 = peg$literalExpectation(\"?!\", false);\n\t\t        var peg$e196 = peg$literalExpectation(\"!\", false);\n\t\t        var peg$e197 = peg$literalExpectation(\"\\u203C\", false);\n\t\t        var peg$e198 = peg$literalExpectation(\"\\u2047\", false);\n\t\t        var peg$e199 = peg$literalExpectation(\"\\u2049\", false);\n\t\t        var peg$e200 = peg$literalExpectation(\"\\u2048\", false);\n\t\t        var peg$e201 = peg$literalExpectation(\"\\u25A1\", false);\n\t\t        var peg$e202 = peg$literalExpectation(\"\\u221E\", false);\n\t\t        var peg$e203 = peg$literalExpectation(\"\\u2A72\", false);\n\t\t        var peg$e204 = peg$literalExpectation(\"\\u2A71\", false);\n\t\t        var peg$e205 = peg$literalExpectation(\"\\xB1\", false);\n\t\t        var peg$e206 = peg$literalExpectation(\"\\u2213\", false);\n\t\t        var peg$e207 = peg$literalExpectation(\"-+\", false);\n\t\t        var peg$e208 = peg$literalExpectation(\"\\u2A00\", false);\n\t\t        var peg$e209 = peg$literalExpectation(\"\\u27F3\", false);\n\t\t        var peg$e210 = peg$literalExpectation(\"\\u2192\", false);\n\t\t        var peg$e211 = peg$literalExpectation(\"\\u2191\", false);\n\t\t        var peg$e212 = peg$literalExpectation(\"\\u21C6\", false);\n\t\t        var peg$e213 = peg$literalExpectation(\"D\", false);\n\t\t        var peg$e214 = peg$classExpectation([\"R\", \"N\", \"B\", \"Q\", \"K\", \"P\"], false, false);\n\t\t        var peg$e215 = peg$classExpectation([\"R\", \"N\", \"B\", \"Q\"], false, false);\n\t\t        var peg$e216 = peg$classExpectation([[\"a\", \"h\"]], false, false);\n\t\t        var peg$e217 = peg$classExpectation([[\"1\", \"8\"]], false, false);\n\t\t        var peg$e218 = peg$literalExpectation(\"x\", false);\n\t\t        var peg$f0 = function (head, m) { return m; };\n\t\t        var peg$f1 = function (head, tail) {\n\t\t            //console.log(\"Length tail: \" + tail.length);\n\t\t            return [head].concat(tail);\n\t\t        };\n\t\t        var peg$f2 = function (games) {\n\t\t            //console.log(\"Length: \" + games.length);\n\t\t            return games;\n\t\t        };\n\t\t        var peg$f3 = function (t, c, p) {\n\t\t            //console.log(\"Length pgn: \" + p.length);\n\t\t            var mess = messages;\n\t\t            messages = [];\n\t\t            return { tags: t, gameComment: c, moves: p, messages: mess };\n\t\t        };\n\t\t        var peg$f4 = function (head, m) { return m; };\n\t\t        var peg$f5 = function (head, tail) {\n\t\t            var result = {};\n\t\t            [head].concat(tail).forEach(function (element) {\n\t\t                result[element.name] = element.value;\n\t\t            });\n\t\t            return result;\n\t\t        };\n\t\t        var peg$f6 = function (members) {\n\t\t            if (members === null)\n\t\t                return {};\n\t\t            members.messages = messages;\n\t\t            return members;\n\t\t        };\n\t\t        var peg$f7 = function (tag) { return tag; };\n\t\t        var peg$f8 = function (value) { return { name: 'Event', value: value }; };\n\t\t        var peg$f9 = function (value) { return { name: 'Site', value: value }; };\n\t\t        var peg$f10 = function (value) { return { name: 'Date', value: value }; };\n\t\t        var peg$f11 = function (value) { return { name: 'Round', value: value }; };\n\t\t        var peg$f12 = function (value) { return { name: 'WhiteTitle', value: value }; };\n\t\t        var peg$f13 = function (value) { return { name: 'BlackTitle', value: value }; };\n\t\t        var peg$f14 = function (value) { return { name: 'WhiteElo', value: value }; };\n\t\t        var peg$f15 = function (value) { return { name: 'BlackElo', value: value }; };\n\t\t        var peg$f16 = function (value) { return { name: 'WhiteUSCF', value: value }; };\n\t\t        var peg$f17 = function (value) { return { name: 'BlackUSCF', value: value }; };\n\t\t        var peg$f18 = function (value) { return { name: 'WhiteNA', value: value }; };\n\t\t        var peg$f19 = function (value) { return { name: 'BlackNA', value: value }; };\n\t\t        var peg$f20 = function (value) { return { name: 'WhiteType', value: value }; };\n\t\t        var peg$f21 = function (value) { return { name: 'BlackType', value: value }; };\n\t\t        var peg$f22 = function (value) { return { name: 'White', value: value }; };\n\t\t        var peg$f23 = function (value) { return { name: 'Black', value: value }; };\n\t\t        var peg$f24 = function (value) { return { name: 'Result', value: value }; };\n\t\t        var peg$f25 = function (value) { return { name: 'EventDate', value: value }; };\n\t\t        var peg$f26 = function (value) { return { name: 'EventSponsor', value: value }; };\n\t\t        var peg$f27 = function (value) { return { name: 'Section', value: value }; };\n\t\t        var peg$f28 = function (value) { return { name: 'Stage', value: value }; };\n\t\t        var peg$f29 = function (value) { return { name: 'Board', value: value }; };\n\t\t        var peg$f30 = function (value) { return { name: 'Opening', value: value }; };\n\t\t        var peg$f31 = function (value) { return { name: 'Variation', value: value }; };\n\t\t        var peg$f32 = function (value) { return { name: 'SubVariation', value: value }; };\n\t\t        var peg$f33 = function (value) { return { name: 'ECO', value: value }; };\n\t\t        var peg$f34 = function (value) { return { name: 'NIC', value: value }; };\n\t\t        var peg$f35 = function (value) { return { name: 'Time', value: value }; };\n\t\t        var peg$f36 = function (value) { return { name: 'UTCTime', value: value }; };\n\t\t        var peg$f37 = function (value) { return { name: 'UTCDate', value: value }; };\n\t\t        var peg$f38 = function (value) { return { name: 'TimeControl', value: value }; };\n\t\t        var peg$f39 = function (value) { return { name: 'SetUp', value: value }; };\n\t\t        var peg$f40 = function (value) { return { name: 'FEN', value: value }; };\n\t\t        var peg$f41 = function (value) { return { name: 'Termination', value: value }; };\n\t\t        var peg$f42 = function (value) { return { name: 'Annotator', value: value }; };\n\t\t        var peg$f43 = function (value) { return { name: 'Mode', value: value }; };\n\t\t        var peg$f44 = function (value) { return { name: 'PlyCount', value: value }; };\n\t\t        var peg$f45 = function (value) { return { name: 'Variant', value: value }; };\n\t\t        var peg$f46 = function (value) { return { name: 'WhiteRatingDiff', value: value }; };\n\t\t        var peg$f47 = function (value) { return { name: 'BlackRatingDiff', value: value }; };\n\t\t        var peg$f48 = function (value) { return { name: 'WhiteFideId', value: value }; };\n\t\t        var peg$f49 = function (value) { return { name: 'BlackFideId', value: value }; };\n\t\t        var peg$f50 = function (value) { return { name: 'WhiteTeam', value: value }; };\n\t\t        var peg$f51 = function (value) { return { name: 'BlackTeam', value: value }; };\n\t\t        var peg$f52 = function (value) { return { name: 'Clock', value: value }; };\n\t\t        var peg$f53 = function (value) { return { name: 'WhiteClock', value: value }; };\n\t\t        var peg$f54 = function (value) { return { name: 'BlackClock', value: value }; };\n\t\t        var peg$f55 = function (a, value) {\n\t\t            addMessage({ key: a, value: value, message: `Format of tag: \"${a}\" not correct: \"${value}\"` });\n\t\t            return { name: a, value: value };\n\t\t        };\n\t\t        var peg$f56 = function (a, value) {\n\t\t            addMessage({ key: a, value: value, message: `Tag: \"${a}\" not known: \"${value}\"` });\n\t\t            return { name: a, value: value };\n\t\t        };\n\t\t        var peg$f58 = function (chars) { return chars.join(\"\"); };\n\t\t        var peg$f59 = function (stringContent) { return stringContent.map(c => c.char || c).join(''); };\n\t\t        var peg$f60 = function () { return { type: \"char\", char: \"\\\\\" }; };\n\t\t        var peg$f61 = function () { return { type: \"char\", char: '\"' }; };\n\t\t        var peg$f62 = function (sequence) { return sequence; };\n\t\t        var peg$f63 = function (year, month, day) {\n\t\t            let val = \"\" + year.join(\"\") + '.' + month.join(\"\") + '.' + day.join(\"\");\n\t\t            return { value: val, year: mi(year), month: mi(month), day: mi(day) };\n\t\t        };\n\t\t        var peg$f64 = function (hour, minute, second, millis) {\n\t\t            let val = hour.join(\"\") + ':' + minute.join(\"\") + ':' + second.join(\"\");\n\t\t            let ms = 0;\n\t\t            if (millis) {\n\t\t                val = val + '.' + millis;\n\t\t                addMessage({ message: `Unusual use of millis in time: ${val}` });\n\t\t                mi(millis);\n\t\t            }\n\t\t            return { value: val, hour: mi(hour), minute: mi(minute), second: mi(second), millis: ms };\n\t\t        };\n\t\t        var peg$f65 = function (millis) { return millis.join(\"\"); };\n\t\t        var peg$f66 = function (value) { return value; };\n\t\t        var peg$f67 = function (c, t) { return c + '/' + t; };\n\t\t        var peg$f68 = function (value) { return value; };\n\t\t        var peg$f69 = function (value) { return value; };\n\t\t        var peg$f70 = function (res) {\n\t\t            if (!res) {\n\t\t                addMessage({ message: \"Tag TimeControl has to have a value\" });\n\t\t                return \"\";\n\t\t            }\n\t\t            return res;\n\t\t        };\n\t\t        var peg$f71 = function (head, m) { return m; };\n\t\t        var peg$f72 = function (head, tail) { return [head].concat(tail); };\n\t\t        var peg$f73 = function (tcnqs) { return tcnqs; };\n\t\t        var peg$f74 = function () { return { kind: 'unknown', value: '?' }; };\n\t\t        var peg$f75 = function () { return { kind: 'unlimited', value: '-' }; };\n\t\t        var peg$f76 = function (moves, seconds, incr) { return { kind: 'movesInSecondsIncrement', moves: moves, seconds: seconds, increment: incr }; };\n\t\t        var peg$f77 = function (moves, seconds) { return { kind: 'movesInSeconds', moves: moves, seconds: seconds }; };\n\t\t        var peg$f78 = function (seconds, incr) { return { kind: 'increment', seconds: seconds, increment: incr }; };\n\t\t        var peg$f79 = function (seconds) { return { kind: 'suddenDeath', seconds: seconds }; };\n\t\t        var peg$f80 = function (seconds) { return { kind: 'hourglass', seconds: seconds }; };\n\t\t        var peg$f81 = function (res) { return res; };\n\t\t        var peg$f82 = function (res) { return res; };\n\t\t        var peg$f83 = function (res) { return res; };\n\t\t        var peg$f84 = function (res) { return res; };\n\t\t        var peg$f85 = function (res) { return res; };\n\t\t        var peg$f86 = function (v) { return v; };\n\t\t        var peg$f87 = function () { return 0; };\n\t\t        var peg$f88 = function () { addMessage({ message: 'Use \"-\" for an unknown value' }); return 0; };\n\t\t        var peg$f89 = function (digits) { return makeInteger(digits); };\n\t\t        var peg$f90 = function (cm, mn, hm, nag, dr, ca, vari, all) {\n\t\t            var arr = (all ? all : []);\n\t\t            var move = {};\n\t\t            move.moveNumber = mn;\n\t\t            move.notation = hm;\n\t\t            if (ca) {\n\t\t                move.commentAfter = ca.comment;\n\t\t            }\n\t\t            if (cm) {\n\t\t                move.commentMove = cm.comment;\n\t\t            }\n\t\t            if (dr) {\n\t\t                move.drawOffer = true;\n\t\t            }\n\t\t            move.variations = (vari ? vari : []);\n\t\t            move.nag = (nag ? nag : null);\n\t\t            arr.unshift(move);\n\t\t            move.commentDiag = ca;\n\t\t            return arr;\n\t\t        };\n\t\t        var peg$f91 = function (e) { return e; };\n\t\t        var peg$f92 = function (eg) { return [eg]; };\n\t\t        var peg$f93 = function (cf, c) { return c; };\n\t\t        var peg$f94 = function (cf, cfl) { return merge([cf].concat(cfl)); };\n\t\t        var peg$f95 = function (cm) { return cm; };\n\t\t        var peg$f96 = function (cm) { return { comment: cm }; };\n\t\t        var peg$f97 = function (cf, ic) { return ic; };\n\t\t        var peg$f98 = function (cf, tail) { return merge([{ colorFields: cf }].concat(tail[0])); };\n\t\t        var peg$f99 = function (ca, ic) { return ic; };\n\t\t        var peg$f100 = function (ca, tail) { return merge([{ colorArrows: ca }].concat(tail[0])); };\n\t\t        var peg$f101 = function (cc, cv, ic) { return ic; };\n\t\t        var peg$f102 = function (cc, cv, tail) { var ret = {}; ret[cc] = cv; return merge([ret].concat(tail[0])); };\n\t\t        var peg$f103 = function (cc, cv, ic) { return ic; };\n\t\t        var peg$f104 = function (cc, cv, tail) { var ret = {}; ret[cc] = cv; return merge([ret].concat(tail[0])); };\n\t\t        var peg$f105 = function (ev, ic) { return ic; };\n\t\t        var peg$f106 = function (ev, tail) { var ret = {}; ret[\"eval\"] = parseFloat(ev); return merge([ret].concat(tail[0])); };\n\t\t        var peg$f107 = function (ac, val, ic) { return ic; };\n\t\t        var peg$f108 = function (ac, val, tail) { var ret = {}; ret[ac] = val.join(\"\"); return merge([ret].concat(tail[0])); };\n\t\t        var peg$f109 = function (c, ic) { return ic; };\n\t\t        var peg$f110 = function (c, tail) {\n\t\t            if (tail.length > 0) {\n\t\t                return merge([{ comment: trimEnd(c.join(\"\")) }].concat(trimStart(tail[0])));\n\t\t            }\n\t\t            else {\n\t\t                return { comment: c.join(\"\") };\n\t\t            }\n\t\t        };\n\t\t        var peg$f111 = function (char) { return char; };\n\t\t        var peg$f112 = function (char) { return char; };\n\t\t        var peg$f113 = function (cm) { return cm.join(\"\"); };\n\t\t        var peg$f114 = function (cf, cfl) { var arr = []; arr.push(cf); for (var i = 0; i < cfl.length; i++) {\n\t\t            arr.push(cfl[i][2]);\n\t\t        } return arr; };\n\t\t        var peg$f115 = function (col, f) { return col + f; };\n\t\t        var peg$f116 = function (cf, cfl) { var arr = []; arr.push(cf); for (var i = 0; i < cfl.length; i++) {\n\t\t            arr.push(cfl[i][2]);\n\t\t        } return arr; };\n\t\t        var peg$f117 = function (col, ff, ft) { return col + ff + ft; };\n\t\t        var peg$f118 = function () { return \"Y\"; };\n\t\t        var peg$f119 = function () { return \"G\"; };\n\t\t        var peg$f120 = function () { return \"R\"; };\n\t\t        var peg$f121 = function () { return \"B\"; };\n\t\t        var peg$f122 = function (col, row) { return col + row; };\n\t\t        var peg$f127 = function () { return \"clk\"; };\n\t\t        var peg$f128 = function () { return \"egt\"; };\n\t\t        var peg$f129 = function () { return \"emt\"; };\n\t\t        var peg$f130 = function () { return \"mct\"; };\n\t\t        var peg$f131 = function (hm, s1, s2, millis) {\n\t\t            let ret = s1;\n\t\t            if (!hm) {\n\t\t                addMessage({ message: `Hours and minutes missing` });\n\t\t            }\n\t\t            else {\n\t\t                ret = hm + ret;\n\t\t            }\n\t\t            if (hm && ((hm.match(/:/g) || []).length == 2)) {\n\t\t                if (hm.search(':') == 2) {\n\t\t                    addMessage({ message: `Only 1 digit for hours normally used` });\n\t\t                }\n\t\t            }\n\t\t            if (!s2) {\n\t\t                addMessage({ message: `Only 2 digit for seconds normally used` });\n\t\t            }\n\t\t            else {\n\t\t                ret += s2;\n\t\t            }\n\t\t            if (millis) {\n\t\t                addMessage({ message: `Unusual use of millis in clock value` });\n\t\t                ret += '.' + millis;\n\t\t            }\n\t\t            return ret;\n\t\t        };\n\t\t        var peg$f132 = function (hm, s1, s2) {\n\t\t            let ret = s1;\n\t\t            if (!hm) {\n\t\t                addMessage({ message: `Hours and minutes missing` });\n\t\t            }\n\t\t            else {\n\t\t                ret = hm + ret;\n\t\t            }\n\t\t            if (hm && ((hm.match(/:/g) || []).length == 2)) {\n\t\t                if (hm.search(':') == 1) {\n\t\t                    addMessage({ message: `Only 2 digits for hours normally used` });\n\t\t                }\n\t\t            }\n\t\t            if (!s2) {\n\t\t                addMessage({ message: `Only 2 digit for seconds normally used` });\n\t\t            }\n\t\t            else {\n\t\t                ret += s2;\n\t\t            }\n\t\t            return ret;\n\t\t        };\n\t\t        var peg$f133 = function (hours, minutes) {\n\t\t            if (!minutes) {\n\t\t                addMessage({ message: `No hours found` });\n\t\t                return hours;\n\t\t            }\n\t\t            return hours + minutes;\n\t\t        };\n\t\t        var peg$f134 = function (h1, h2) {\n\t\t            let ret = h1;\n\t\t            if (h2) {\n\t\t                ret += h2 + \":\";\n\t\t            }\n\t\t            else {\n\t\t                ret += \":\";\n\t\t            }\n\t\t            return ret;\n\t\t        };\n\t\t        var peg$f135 = function (m1, m2) {\n\t\t            let ret = m1;\n\t\t            if (m2) {\n\t\t                ret += m2 + \":\";\n\t\t            }\n\t\t            else {\n\t\t                ret += \":\";\n\t\t                addMessage({ message: `Only 2 digits for minutes normally used` });\n\t\t            }\n\t\t            return ret;\n\t\t        };\n\t\t        var peg$f136 = function (d) { return d; };\n\t\t        var peg$f137 = function (vari, all) { var arr = (all ? all : []); arr.unshift(vari); return arr; };\n\t\t        var peg$f138 = function (num) { return num; };\n\t\t        var peg$f139 = function (digits) { return makeInteger(digits); };\n\t\t        var peg$f140 = function () { return ''; };\n\t\t        var peg$f141 = function (fig, disc, str, col, row, pr, ch) {\n\t\t            var hm = {};\n\t\t            hm.fig = (fig ? fig : null);\n\t\t            hm.disc = (disc ? disc : null);\n\t\t            hm.strike = (str ? str : null);\n\t\t            hm.col = col;\n\t\t            hm.row = row;\n\t\t            hm.check = (ch ? ch : null);\n\t\t            hm.promotion = pr;\n\t\t            hm.notation = (fig ? fig : \"\") + (disc ? disc : \"\") + (str ? str : \"\") + col + row + (pr ? pr : \"\") + (ch ? ch : \"\");\n\t\t            return hm;\n\t\t        };\n\t\t        var peg$f142 = function (fig, cols, rows, str, col, row, pr, ch) {\n\t\t            var hm = {};\n\t\t            hm.fig = (fig ? fig : null);\n\t\t            hm.strike = (str == 'x' ? str : null);\n\t\t            hm.col = col;\n\t\t            hm.row = row;\n\t\t            hm.notation = (fig && (fig !== 'P') ? fig : \"\") + cols + rows + (str == 'x' ? str : \"-\") + col + row + (pr ? pr : \"\") + (ch ? ch : \"\");\n\t\t            hm.check = (ch ? ch : null);\n\t\t            hm.promotion = pr;\n\t\t            return hm;\n\t\t        };\n\t\t        var peg$f143 = function (fig, str, col, row, pr, ch) {\n\t\t            var hm = {};\n\t\t            hm.fig = (fig ? fig : null);\n\t\t            hm.strike = (str ? str : null);\n\t\t            hm.col = col;\n\t\t            hm.row = row;\n\t\t            hm.check = (ch ? ch : null);\n\t\t            hm.promotion = pr;\n\t\t            hm.notation = (fig ? fig : \"\") + (str ? str : \"\") + col + row + (pr ? pr : \"\") + (ch ? ch : \"\");\n\t\t            return hm;\n\t\t        };\n\t\t        var peg$f144 = function (ch) { var hm = {}; hm.notation = 'O-O-O' + (ch ? ch : \"\"); hm.check = (ch ? ch : null); return hm; };\n\t\t        var peg$f145 = function (ch) { var hm = {}; hm.notation = 'O-O' + (ch ? ch : \"\"); hm.check = (ch ? ch : null); return hm; };\n\t\t        var peg$f146 = function (fig, col, row) { var hm = {}; hm.fig = fig; hm.drop = true; hm.col = col; hm.row = row; hm.notation = fig + '@' + col + row; return hm; };\n\t\t        var peg$f147 = function (ch) { return ch[1]; };\n\t\t        var peg$f148 = function (ch) { return ch[1]; };\n\t\t        var peg$f149 = function (f) { return '=' + f; };\n\t\t        var peg$f150 = function (nag, nags) { var arr = (nags ? nags : []); arr.unshift(nag); return arr; };\n\t\t        var peg$f151 = function (num) { return '$' + num; };\n\t\t        var peg$f152 = function () { return '$3'; };\n\t\t        var peg$f153 = function () { return '$4'; };\n\t\t        var peg$f154 = function () { return '$5'; };\n\t\t        var peg$f155 = function () { return '$6'; };\n\t\t        var peg$f156 = function () { return '$1'; };\n\t\t        var peg$f157 = function () { return '$2'; };\n\t\t        var peg$f158 = function () { return '$3'; };\n\t\t        var peg$f159 = function () { return '$4'; };\n\t\t        var peg$f160 = function () { return '$5'; };\n\t\t        var peg$f161 = function () { return '$6'; };\n\t\t        var peg$f162 = function () { return '$7'; };\n\t\t        var peg$f163 = function () { return '$10'; };\n\t\t        var peg$f164 = function () { return '$13'; };\n\t\t        var peg$f165 = function () { return '$14'; };\n\t\t        var peg$f166 = function () { return '$15'; };\n\t\t        var peg$f167 = function () { return '$16'; };\n\t\t        var peg$f168 = function () { return '$17'; };\n\t\t        var peg$f169 = function () { return '$18'; };\n\t\t        var peg$f170 = function () { return '$19'; };\n\t\t        var peg$f171 = function () { return '$22'; };\n\t\t        var peg$f172 = function () { return '$32'; };\n\t\t        var peg$f173 = function () { return '$36'; };\n\t\t        var peg$f174 = function () { return '$40'; };\n\t\t        var peg$f175 = function () { return '$132'; };\n\t\t        var peg$f176 = function () { return '$220'; };\n\t\t        var peg$currPos = 0;\n\t\t        var peg$savedPos = 0;\n\t\t        var peg$posDetailsCache = [{ line: 1, column: 1 }];\n\t\t        var peg$maxFailPos = 0;\n\t\t        var peg$maxFailExpected = [];\n\t\t        var peg$silentFails = 0;\n\t\t        var peg$result;\n\t\t        if (\"startRule\" in options) {\n\t\t            if (!(options.startRule in peg$startRuleFunctions)) {\n\t\t                throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n\t\t            }\n\t\t            peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n\t\t        }\n\t\t        function location() {\n\t\t            return peg$computeLocation(peg$savedPos, peg$currPos);\n\t\t        }\n\t\t        function peg$literalExpectation(text, ignoreCase) {\n\t\t            return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n\t\t        }\n\t\t        function peg$classExpectation(parts, inverted, ignoreCase) {\n\t\t            return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n\t\t        }\n\t\t        function peg$anyExpectation() {\n\t\t            return { type: \"any\" };\n\t\t        }\n\t\t        function peg$endExpectation() {\n\t\t            return { type: \"end\" };\n\t\t        }\n\t\t        function peg$otherExpectation(description) {\n\t\t            return { type: \"other\", description: description };\n\t\t        }\n\t\t        function peg$computePosDetails(pos) {\n\t\t            var details = peg$posDetailsCache[pos];\n\t\t            var p;\n\t\t            if (details) {\n\t\t                return details;\n\t\t            }\n\t\t            else {\n\t\t                p = pos - 1;\n\t\t                while (!peg$posDetailsCache[p]) {\n\t\t                    p--;\n\t\t                }\n\t\t                details = peg$posDetailsCache[p];\n\t\t                details = {\n\t\t                    line: details.line,\n\t\t                    column: details.column\n\t\t                };\n\t\t                while (p < pos) {\n\t\t                    if (input.charCodeAt(p) === 10) {\n\t\t                        details.line++;\n\t\t                        details.column = 1;\n\t\t                    }\n\t\t                    else {\n\t\t                        details.column++;\n\t\t                    }\n\t\t                    p++;\n\t\t                }\n\t\t                peg$posDetailsCache[pos] = details;\n\t\t                return details;\n\t\t            }\n\t\t        }\n\t\t        function peg$computeLocation(startPos, endPos) {\n\t\t            var startPosDetails = peg$computePosDetails(startPos);\n\t\t            var endPosDetails = peg$computePosDetails(endPos);\n\t\t            return {\n\t\t                source: peg$source,\n\t\t                start: {\n\t\t                    offset: startPos,\n\t\t                    line: startPosDetails.line,\n\t\t                    column: startPosDetails.column\n\t\t                },\n\t\t                end: {\n\t\t                    offset: endPos,\n\t\t                    line: endPosDetails.line,\n\t\t                    column: endPosDetails.column\n\t\t                }\n\t\t            };\n\t\t        }\n\t\t        function peg$fail(expected) {\n\t\t            if (peg$currPos < peg$maxFailPos) {\n\t\t                return;\n\t\t            }\n\t\t            if (peg$currPos > peg$maxFailPos) {\n\t\t                peg$maxFailPos = peg$currPos;\n\t\t                peg$maxFailExpected = [];\n\t\t            }\n\t\t            peg$maxFailExpected.push(expected);\n\t\t        }\n\t\t        function peg$buildStructuredError(expected, found, location) {\n\t\t            return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);\n\t\t        }\n\t\t        function peg$parsegames() {\n\t\t            var s0, s2, s3, s4, s5, s7;\n\t\t            s0 = peg$currPos;\n\t\t            peg$parsews();\n\t\t            s2 = peg$currPos;\n\t\t            s3 = peg$parsegame();\n\t\t            if (s3 !== peg$FAILED) {\n\t\t                s4 = [];\n\t\t                s5 = peg$currPos;\n\t\t                peg$parsews();\n\t\t                s7 = peg$parsegame();\n\t\t                if (s7 !== peg$FAILED) {\n\t\t                    peg$savedPos = s5;\n\t\t                    s5 = peg$f0(s3, s7);\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s5;\n\t\t                    s5 = peg$FAILED;\n\t\t                }\n\t\t                while (s5 !== peg$FAILED) {\n\t\t                    s4.push(s5);\n\t\t                    s5 = peg$currPos;\n\t\t                    peg$parsews();\n\t\t                    s7 = peg$parsegame();\n\t\t                    if (s7 !== peg$FAILED) {\n\t\t                        peg$savedPos = s5;\n\t\t                        s5 = peg$f0(s3, s7);\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s5;\n\t\t                        s5 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                peg$savedPos = s2;\n\t\t                s2 = peg$f1(s3, s4);\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s2;\n\t\t                s2 = peg$FAILED;\n\t\t            }\n\t\t            if (s2 === peg$FAILED) {\n\t\t                s2 = null;\n\t\t            }\n\t\t            peg$savedPos = s0;\n\t\t            s0 = peg$f2(s2);\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsegame() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsetags();\n\t\t            s2 = peg$parsecomments();\n\t\t            if (s2 === peg$FAILED) {\n\t\t                s2 = null;\n\t\t            }\n\t\t            s3 = peg$parsepgn();\n\t\t            if (s3 !== peg$FAILED) {\n\t\t                peg$savedPos = s0;\n\t\t                s0 = peg$f3(s1, s2, s3);\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsetags() {\n\t\t            var s0, s2, s3, s4, s5, s7;\n\t\t            s0 = peg$currPos;\n\t\t            peg$parsews();\n\t\t            s2 = peg$currPos;\n\t\t            s3 = peg$parsetag();\n\t\t            if (s3 !== peg$FAILED) {\n\t\t                s4 = [];\n\t\t                s5 = peg$currPos;\n\t\t                peg$parsews();\n\t\t                s7 = peg$parsetag();\n\t\t                if (s7 !== peg$FAILED) {\n\t\t                    peg$savedPos = s5;\n\t\t                    s5 = peg$f4(s3, s7);\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s5;\n\t\t                    s5 = peg$FAILED;\n\t\t                }\n\t\t                while (s5 !== peg$FAILED) {\n\t\t                    s4.push(s5);\n\t\t                    s5 = peg$currPos;\n\t\t                    peg$parsews();\n\t\t                    s7 = peg$parsetag();\n\t\t                    if (s7 !== peg$FAILED) {\n\t\t                        peg$savedPos = s5;\n\t\t                        s5 = peg$f4(s3, s7);\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s5;\n\t\t                        s5 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                peg$savedPos = s2;\n\t\t                s2 = peg$f5(s3, s4);\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s2;\n\t\t                s2 = peg$FAILED;\n\t\t            }\n\t\t            if (s2 === peg$FAILED) {\n\t\t                s2 = null;\n\t\t            }\n\t\t            s3 = peg$parsews();\n\t\t            peg$savedPos = s0;\n\t\t            s0 = peg$f6(s2);\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsetag() {\n\t\t            var s0, s1, s3, s5;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsebl();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$parsews();\n\t\t                s3 = peg$parsetagKeyValue();\n\t\t                if (s3 !== peg$FAILED) {\n\t\t                    peg$parsews();\n\t\t                    s5 = peg$parsebr();\n\t\t                    if (s5 !== peg$FAILED) {\n\t\t                        peg$savedPos = s0;\n\t\t                        s0 = peg$f7(s3);\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsetagKeyValue() {\n\t\t            var s0, s1, s2, s3, s4;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parseeventKey();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$parsews();\n\t\t                s3 = peg$parsestring();\n\t\t                if (s3 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s0 = peg$f8(s3);\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                s0 = peg$currPos;\n\t\t                s1 = peg$parsesiteKey();\n\t\t                if (s1 !== peg$FAILED) {\n\t\t                    s2 = peg$parsews();\n\t\t                    s3 = peg$parsestring();\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        peg$savedPos = s0;\n\t\t                        s0 = peg$f9(s3);\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    s0 = peg$currPos;\n\t\t                    s1 = peg$parsedateKey();\n\t\t                    if (s1 !== peg$FAILED) {\n\t\t                        s2 = peg$parsews();\n\t\t                        s3 = peg$parsedateString();\n\t\t                        if (s3 !== peg$FAILED) {\n\t\t                            peg$savedPos = s0;\n\t\t                            s0 = peg$f10(s3);\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s0;\n\t\t                            s0 = peg$FAILED;\n\t\t                        }\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        s0 = peg$currPos;\n\t\t                        s1 = peg$parseroundKey();\n\t\t                        if (s1 !== peg$FAILED) {\n\t\t                            s2 = peg$parsews();\n\t\t                            s3 = peg$parsestring();\n\t\t                            if (s3 !== peg$FAILED) {\n\t\t                                peg$savedPos = s0;\n\t\t                                s0 = peg$f11(s3);\n\t\t                            }\n\t\t                            else {\n\t\t                                peg$currPos = s0;\n\t\t                                s0 = peg$FAILED;\n\t\t                            }\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s0;\n\t\t                            s0 = peg$FAILED;\n\t\t                        }\n\t\t                        if (s0 === peg$FAILED) {\n\t\t                            s0 = peg$currPos;\n\t\t                            s1 = peg$parsewhiteTitleKey();\n\t\t                            if (s1 !== peg$FAILED) {\n\t\t                                s2 = peg$parsews();\n\t\t                                s3 = peg$parsestring();\n\t\t                                if (s3 !== peg$FAILED) {\n\t\t                                    peg$savedPos = s0;\n\t\t                                    s0 = peg$f12(s3);\n\t\t                                }\n\t\t                                else {\n\t\t                                    peg$currPos = s0;\n\t\t                                    s0 = peg$FAILED;\n\t\t                                }\n\t\t                            }\n\t\t                            else {\n\t\t                                peg$currPos = s0;\n\t\t                                s0 = peg$FAILED;\n\t\t                            }\n\t\t                            if (s0 === peg$FAILED) {\n\t\t                                s0 = peg$currPos;\n\t\t                                s1 = peg$parseblackTitleKey();\n\t\t                                if (s1 !== peg$FAILED) {\n\t\t                                    s2 = peg$parsews();\n\t\t                                    s3 = peg$parsestring();\n\t\t                                    if (s3 !== peg$FAILED) {\n\t\t                                        peg$savedPos = s0;\n\t\t                                        s0 = peg$f13(s3);\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        peg$currPos = s0;\n\t\t                                        s0 = peg$FAILED;\n\t\t                                    }\n\t\t                                }\n\t\t                                else {\n\t\t                                    peg$currPos = s0;\n\t\t                                    s0 = peg$FAILED;\n\t\t                                }\n\t\t                                if (s0 === peg$FAILED) {\n\t\t                                    s0 = peg$currPos;\n\t\t                                    s1 = peg$parsewhiteEloKey();\n\t\t                                    if (s1 !== peg$FAILED) {\n\t\t                                        s2 = peg$parsews();\n\t\t                                        s3 = peg$parseintegerOrDashString();\n\t\t                                        if (s3 !== peg$FAILED) {\n\t\t                                            peg$savedPos = s0;\n\t\t                                            s0 = peg$f14(s3);\n\t\t                                        }\n\t\t                                        else {\n\t\t                                            peg$currPos = s0;\n\t\t                                            s0 = peg$FAILED;\n\t\t                                        }\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        peg$currPos = s0;\n\t\t                                        s0 = peg$FAILED;\n\t\t                                    }\n\t\t                                    if (s0 === peg$FAILED) {\n\t\t                                        s0 = peg$currPos;\n\t\t                                        s1 = peg$parseblackEloKey();\n\t\t                                        if (s1 !== peg$FAILED) {\n\t\t                                            s2 = peg$parsews();\n\t\t                                            s3 = peg$parseintegerOrDashString();\n\t\t                                            if (s3 !== peg$FAILED) {\n\t\t                                                peg$savedPos = s0;\n\t\t                                                s0 = peg$f15(s3);\n\t\t                                            }\n\t\t                                            else {\n\t\t                                                peg$currPos = s0;\n\t\t                                                s0 = peg$FAILED;\n\t\t                                            }\n\t\t                                        }\n\t\t                                        else {\n\t\t                                            peg$currPos = s0;\n\t\t                                            s0 = peg$FAILED;\n\t\t                                        }\n\t\t                                        if (s0 === peg$FAILED) {\n\t\t                                            s0 = peg$currPos;\n\t\t                                            s1 = peg$parsewhiteUSCFKey();\n\t\t                                            if (s1 !== peg$FAILED) {\n\t\t                                                s2 = peg$parsews();\n\t\t                                                s3 = peg$parseintegerString();\n\t\t                                                if (s3 !== peg$FAILED) {\n\t\t                                                    peg$savedPos = s0;\n\t\t                                                    s0 = peg$f16(s3);\n\t\t                                                }\n\t\t                                                else {\n\t\t                                                    peg$currPos = s0;\n\t\t                                                    s0 = peg$FAILED;\n\t\t                                                }\n\t\t                                            }\n\t\t                                            else {\n\t\t                                                peg$currPos = s0;\n\t\t                                                s0 = peg$FAILED;\n\t\t                                            }\n\t\t                                            if (s0 === peg$FAILED) {\n\t\t                                                s0 = peg$currPos;\n\t\t                                                s1 = peg$parseblackUSCFKey();\n\t\t                                                if (s1 !== peg$FAILED) {\n\t\t                                                    s2 = peg$parsews();\n\t\t                                                    s3 = peg$parseintegerString();\n\t\t                                                    if (s3 !== peg$FAILED) {\n\t\t                                                        peg$savedPos = s0;\n\t\t                                                        s0 = peg$f17(s3);\n\t\t                                                    }\n\t\t                                                    else {\n\t\t                                                        peg$currPos = s0;\n\t\t                                                        s0 = peg$FAILED;\n\t\t                                                    }\n\t\t                                                }\n\t\t                                                else {\n\t\t                                                    peg$currPos = s0;\n\t\t                                                    s0 = peg$FAILED;\n\t\t                                                }\n\t\t                                                if (s0 === peg$FAILED) {\n\t\t                                                    s0 = peg$currPos;\n\t\t                                                    s1 = peg$parsewhiteNAKey();\n\t\t                                                    if (s1 !== peg$FAILED) {\n\t\t                                                        s2 = peg$parsews();\n\t\t                                                        s3 = peg$parsestring();\n\t\t                                                        if (s3 !== peg$FAILED) {\n\t\t                                                            peg$savedPos = s0;\n\t\t                                                            s0 = peg$f18(s3);\n\t\t                                                        }\n\t\t                                                        else {\n\t\t                                                            peg$currPos = s0;\n\t\t                                                            s0 = peg$FAILED;\n\t\t                                                        }\n\t\t                                                    }\n\t\t                                                    else {\n\t\t                                                        peg$currPos = s0;\n\t\t                                                        s0 = peg$FAILED;\n\t\t                                                    }\n\t\t                                                    if (s0 === peg$FAILED) {\n\t\t                                                        s0 = peg$currPos;\n\t\t                                                        s1 = peg$parseblackNAKey();\n\t\t                                                        if (s1 !== peg$FAILED) {\n\t\t                                                            s2 = peg$parsews();\n\t\t                                                            s3 = peg$parsestring();\n\t\t                                                            if (s3 !== peg$FAILED) {\n\t\t                                                                peg$savedPos = s0;\n\t\t                                                                s0 = peg$f19(s3);\n\t\t                                                            }\n\t\t                                                            else {\n\t\t                                                                peg$currPos = s0;\n\t\t                                                                s0 = peg$FAILED;\n\t\t                                                            }\n\t\t                                                        }\n\t\t                                                        else {\n\t\t                                                            peg$currPos = s0;\n\t\t                                                            s0 = peg$FAILED;\n\t\t                                                        }\n\t\t                                                        if (s0 === peg$FAILED) {\n\t\t                                                            s0 = peg$currPos;\n\t\t                                                            s1 = peg$parsewhiteTypeKey();\n\t\t                                                            if (s1 !== peg$FAILED) {\n\t\t                                                                s2 = peg$parsews();\n\t\t                                                                s3 = peg$parsestring();\n\t\t                                                                if (s3 !== peg$FAILED) {\n\t\t                                                                    peg$savedPos = s0;\n\t\t                                                                    s0 = peg$f20(s3);\n\t\t                                                                }\n\t\t                                                                else {\n\t\t                                                                    peg$currPos = s0;\n\t\t                                                                    s0 = peg$FAILED;\n\t\t                                                                }\n\t\t                                                            }\n\t\t                                                            else {\n\t\t                                                                peg$currPos = s0;\n\t\t                                                                s0 = peg$FAILED;\n\t\t                                                            }\n\t\t                                                            if (s0 === peg$FAILED) {\n\t\t                                                                s0 = peg$currPos;\n\t\t                                                                s1 = peg$parseblackTypeKey();\n\t\t                                                                if (s1 !== peg$FAILED) {\n\t\t                                                                    s2 = peg$parsews();\n\t\t                                                                    s3 = peg$parsestring();\n\t\t                                                                    if (s3 !== peg$FAILED) {\n\t\t                                                                        peg$savedPos = s0;\n\t\t                                                                        s0 = peg$f21(s3);\n\t\t                                                                    }\n\t\t                                                                    else {\n\t\t                                                                        peg$currPos = s0;\n\t\t                                                                        s0 = peg$FAILED;\n\t\t                                                                    }\n\t\t                                                                }\n\t\t                                                                else {\n\t\t                                                                    peg$currPos = s0;\n\t\t                                                                    s0 = peg$FAILED;\n\t\t                                                                }\n\t\t                                                                if (s0 === peg$FAILED) {\n\t\t                                                                    s0 = peg$currPos;\n\t\t                                                                    s1 = peg$parsewhiteKey();\n\t\t                                                                    if (s1 !== peg$FAILED) {\n\t\t                                                                        s2 = peg$parsews();\n\t\t                                                                        s3 = peg$parsestring();\n\t\t                                                                        if (s3 !== peg$FAILED) {\n\t\t                                                                            peg$savedPos = s0;\n\t\t                                                                            s0 = peg$f22(s3);\n\t\t                                                                        }\n\t\t                                                                        else {\n\t\t                                                                            peg$currPos = s0;\n\t\t                                                                            s0 = peg$FAILED;\n\t\t                                                                        }\n\t\t                                                                    }\n\t\t                                                                    else {\n\t\t                                                                        peg$currPos = s0;\n\t\t                                                                        s0 = peg$FAILED;\n\t\t                                                                    }\n\t\t                                                                    if (s0 === peg$FAILED) {\n\t\t                                                                        s0 = peg$currPos;\n\t\t                                                                        s1 = peg$parseblackKey();\n\t\t                                                                        if (s1 !== peg$FAILED) {\n\t\t                                                                            s2 = peg$parsews();\n\t\t                                                                            s3 = peg$parsestring();\n\t\t                                                                            if (s3 !== peg$FAILED) {\n\t\t                                                                                peg$savedPos = s0;\n\t\t                                                                                s0 = peg$f23(s3);\n\t\t                                                                            }\n\t\t                                                                            else {\n\t\t                                                                                peg$currPos = s0;\n\t\t                                                                                s0 = peg$FAILED;\n\t\t                                                                            }\n\t\t                                                                        }\n\t\t                                                                        else {\n\t\t                                                                            peg$currPos = s0;\n\t\t                                                                            s0 = peg$FAILED;\n\t\t                                                                        }\n\t\t                                                                        if (s0 === peg$FAILED) {\n\t\t                                                                            s0 = peg$currPos;\n\t\t                                                                            s1 = peg$parseresultKey();\n\t\t                                                                            if (s1 !== peg$FAILED) {\n\t\t                                                                                s2 = peg$parsews();\n\t\t                                                                                s3 = peg$parseresult();\n\t\t                                                                                if (s3 !== peg$FAILED) {\n\t\t                                                                                    peg$savedPos = s0;\n\t\t                                                                                    s0 = peg$f24(s3);\n\t\t                                                                                }\n\t\t                                                                                else {\n\t\t                                                                                    peg$currPos = s0;\n\t\t                                                                                    s0 = peg$FAILED;\n\t\t                                                                                }\n\t\t                                                                            }\n\t\t                                                                            else {\n\t\t                                                                                peg$currPos = s0;\n\t\t                                                                                s0 = peg$FAILED;\n\t\t                                                                            }\n\t\t                                                                            if (s0 === peg$FAILED) {\n\t\t                                                                                s0 = peg$currPos;\n\t\t                                                                                s1 = peg$parseeventDateKey();\n\t\t                                                                                if (s1 !== peg$FAILED) {\n\t\t                                                                                    s2 = peg$parsews();\n\t\t                                                                                    s3 = peg$parsedateString();\n\t\t                                                                                    if (s3 !== peg$FAILED) {\n\t\t                                                                                        peg$savedPos = s0;\n\t\t                                                                                        s0 = peg$f25(s3);\n\t\t                                                                                    }\n\t\t                                                                                    else {\n\t\t                                                                                        peg$currPos = s0;\n\t\t                                                                                        s0 = peg$FAILED;\n\t\t                                                                                    }\n\t\t                                                                                }\n\t\t                                                                                else {\n\t\t                                                                                    peg$currPos = s0;\n\t\t                                                                                    s0 = peg$FAILED;\n\t\t                                                                                }\n\t\t                                                                                if (s0 === peg$FAILED) {\n\t\t                                                                                    s0 = peg$currPos;\n\t\t                                                                                    s1 = peg$parseeventSponsorKey();\n\t\t                                                                                    if (s1 !== peg$FAILED) {\n\t\t                                                                                        s2 = peg$parsews();\n\t\t                                                                                        s3 = peg$parsestring();\n\t\t                                                                                        if (s3 !== peg$FAILED) {\n\t\t                                                                                            peg$savedPos = s0;\n\t\t                                                                                            s0 = peg$f26(s3);\n\t\t                                                                                        }\n\t\t                                                                                        else {\n\t\t                                                                                            peg$currPos = s0;\n\t\t                                                                                            s0 = peg$FAILED;\n\t\t                                                                                        }\n\t\t                                                                                    }\n\t\t                                                                                    else {\n\t\t                                                                                        peg$currPos = s0;\n\t\t                                                                                        s0 = peg$FAILED;\n\t\t                                                                                    }\n\t\t                                                                                    if (s0 === peg$FAILED) {\n\t\t                                                                                        s0 = peg$currPos;\n\t\t                                                                                        s1 = peg$parsesectionKey();\n\t\t                                                                                        if (s1 !== peg$FAILED) {\n\t\t                                                                                            s2 = peg$parsews();\n\t\t                                                                                            s3 = peg$parsestring();\n\t\t                                                                                            if (s3 !== peg$FAILED) {\n\t\t                                                                                                peg$savedPos = s0;\n\t\t                                                                                                s0 = peg$f27(s3);\n\t\t                                                                                            }\n\t\t                                                                                            else {\n\t\t                                                                                                peg$currPos = s0;\n\t\t                                                                                                s0 = peg$FAILED;\n\t\t                                                                                            }\n\t\t                                                                                        }\n\t\t                                                                                        else {\n\t\t                                                                                            peg$currPos = s0;\n\t\t                                                                                            s0 = peg$FAILED;\n\t\t                                                                                        }\n\t\t                                                                                        if (s0 === peg$FAILED) {\n\t\t                                                                                            s0 = peg$currPos;\n\t\t                                                                                            s1 = peg$parsestageKey();\n\t\t                                                                                            if (s1 !== peg$FAILED) {\n\t\t                                                                                                s2 = peg$parsews();\n\t\t                                                                                                s3 = peg$parsestring();\n\t\t                                                                                                if (s3 !== peg$FAILED) {\n\t\t                                                                                                    peg$savedPos = s0;\n\t\t                                                                                                    s0 = peg$f28(s3);\n\t\t                                                                                                }\n\t\t                                                                                                else {\n\t\t                                                                                                    peg$currPos = s0;\n\t\t                                                                                                    s0 = peg$FAILED;\n\t\t                                                                                                }\n\t\t                                                                                            }\n\t\t                                                                                            else {\n\t\t                                                                                                peg$currPos = s0;\n\t\t                                                                                                s0 = peg$FAILED;\n\t\t                                                                                            }\n\t\t                                                                                            if (s0 === peg$FAILED) {\n\t\t                                                                                                s0 = peg$currPos;\n\t\t                                                                                                s1 = peg$parseboardKey();\n\t\t                                                                                                if (s1 !== peg$FAILED) {\n\t\t                                                                                                    s2 = peg$parsews();\n\t\t                                                                                                    s3 = peg$parseintegerString();\n\t\t                                                                                                    if (s3 !== peg$FAILED) {\n\t\t                                                                                                        peg$savedPos = s0;\n\t\t                                                                                                        s0 = peg$f29(s3);\n\t\t                                                                                                    }\n\t\t                                                                                                    else {\n\t\t                                                                                                        peg$currPos = s0;\n\t\t                                                                                                        s0 = peg$FAILED;\n\t\t                                                                                                    }\n\t\t                                                                                                }\n\t\t                                                                                                else {\n\t\t                                                                                                    peg$currPos = s0;\n\t\t                                                                                                    s0 = peg$FAILED;\n\t\t                                                                                                }\n\t\t                                                                                                if (s0 === peg$FAILED) {\n\t\t                                                                                                    s0 = peg$currPos;\n\t\t                                                                                                    s1 = peg$parseopeningKey();\n\t\t                                                                                                    if (s1 !== peg$FAILED) {\n\t\t                                                                                                        s2 = peg$parsews();\n\t\t                                                                                                        s3 = peg$parsestring();\n\t\t                                                                                                        if (s3 !== peg$FAILED) {\n\t\t                                                                                                            peg$savedPos = s0;\n\t\t                                                                                                            s0 = peg$f30(s3);\n\t\t                                                                                                        }\n\t\t                                                                                                        else {\n\t\t                                                                                                            peg$currPos = s0;\n\t\t                                                                                                            s0 = peg$FAILED;\n\t\t                                                                                                        }\n\t\t                                                                                                    }\n\t\t                                                                                                    else {\n\t\t                                                                                                        peg$currPos = s0;\n\t\t                                                                                                        s0 = peg$FAILED;\n\t\t                                                                                                    }\n\t\t                                                                                                    if (s0 === peg$FAILED) {\n\t\t                                                                                                        s0 = peg$currPos;\n\t\t                                                                                                        s1 = peg$parsevariationKey();\n\t\t                                                                                                        if (s1 !== peg$FAILED) {\n\t\t                                                                                                            s2 = peg$parsews();\n\t\t                                                                                                            s3 = peg$parsestring();\n\t\t                                                                                                            if (s3 !== peg$FAILED) {\n\t\t                                                                                                                peg$savedPos = s0;\n\t\t                                                                                                                s0 = peg$f31(s3);\n\t\t                                                                                                            }\n\t\t                                                                                                            else {\n\t\t                                                                                                                peg$currPos = s0;\n\t\t                                                                                                                s0 = peg$FAILED;\n\t\t                                                                                                            }\n\t\t                                                                                                        }\n\t\t                                                                                                        else {\n\t\t                                                                                                            peg$currPos = s0;\n\t\t                                                                                                            s0 = peg$FAILED;\n\t\t                                                                                                        }\n\t\t                                                                                                        if (s0 === peg$FAILED) {\n\t\t                                                                                                            s0 = peg$currPos;\n\t\t                                                                                                            s1 = peg$parsesubVariationKey();\n\t\t                                                                                                            if (s1 !== peg$FAILED) {\n\t\t                                                                                                                s2 = peg$parsews();\n\t\t                                                                                                                s3 = peg$parsestring();\n\t\t                                                                                                                if (s3 !== peg$FAILED) {\n\t\t                                                                                                                    peg$savedPos = s0;\n\t\t                                                                                                                    s0 = peg$f32(s3);\n\t\t                                                                                                                }\n\t\t                                                                                                                else {\n\t\t                                                                                                                    peg$currPos = s0;\n\t\t                                                                                                                    s0 = peg$FAILED;\n\t\t                                                                                                                }\n\t\t                                                                                                            }\n\t\t                                                                                                            else {\n\t\t                                                                                                                peg$currPos = s0;\n\t\t                                                                                                                s0 = peg$FAILED;\n\t\t                                                                                                            }\n\t\t                                                                                                            if (s0 === peg$FAILED) {\n\t\t                                                                                                                s0 = peg$currPos;\n\t\t                                                                                                                s1 = peg$parseecoKey();\n\t\t                                                                                                                if (s1 !== peg$FAILED) {\n\t\t                                                                                                                    s2 = peg$parsews();\n\t\t                                                                                                                    s3 = peg$parsestring();\n\t\t                                                                                                                    if (s3 !== peg$FAILED) {\n\t\t                                                                                                                        peg$savedPos = s0;\n\t\t                                                                                                                        s0 = peg$f33(s3);\n\t\t                                                                                                                    }\n\t\t                                                                                                                    else {\n\t\t                                                                                                                        peg$currPos = s0;\n\t\t                                                                                                                        s0 = peg$FAILED;\n\t\t                                                                                                                    }\n\t\t                                                                                                                }\n\t\t                                                                                                                else {\n\t\t                                                                                                                    peg$currPos = s0;\n\t\t                                                                                                                    s0 = peg$FAILED;\n\t\t                                                                                                                }\n\t\t                                                                                                                if (s0 === peg$FAILED) {\n\t\t                                                                                                                    s0 = peg$currPos;\n\t\t                                                                                                                    s1 = peg$parsenicKey();\n\t\t                                                                                                                    if (s1 !== peg$FAILED) {\n\t\t                                                                                                                        s2 = peg$parsews();\n\t\t                                                                                                                        s3 = peg$parsestring();\n\t\t                                                                                                                        if (s3 !== peg$FAILED) {\n\t\t                                                                                                                            peg$savedPos = s0;\n\t\t                                                                                                                            s0 = peg$f34(s3);\n\t\t                                                                                                                        }\n\t\t                                                                                                                        else {\n\t\t                                                                                                                            peg$currPos = s0;\n\t\t                                                                                                                            s0 = peg$FAILED;\n\t\t                                                                                                                        }\n\t\t                                                                                                                    }\n\t\t                                                                                                                    else {\n\t\t                                                                                                                        peg$currPos = s0;\n\t\t                                                                                                                        s0 = peg$FAILED;\n\t\t                                                                                                                    }\n\t\t                                                                                                                    if (s0 === peg$FAILED) {\n\t\t                                                                                                                        s0 = peg$currPos;\n\t\t                                                                                                                        s1 = peg$parsetimeKey();\n\t\t                                                                                                                        if (s1 !== peg$FAILED) {\n\t\t                                                                                                                            s2 = peg$parsews();\n\t\t                                                                                                                            s3 = peg$parsetimeString();\n\t\t                                                                                                                            if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                peg$savedPos = s0;\n\t\t                                                                                                                                s0 = peg$f35(s3);\n\t\t                                                                                                                            }\n\t\t                                                                                                                            else {\n\t\t                                                                                                                                peg$currPos = s0;\n\t\t                                                                                                                                s0 = peg$FAILED;\n\t\t                                                                                                                            }\n\t\t                                                                                                                        }\n\t\t                                                                                                                        else {\n\t\t                                                                                                                            peg$currPos = s0;\n\t\t                                                                                                                            s0 = peg$FAILED;\n\t\t                                                                                                                        }\n\t\t                                                                                                                        if (s0 === peg$FAILED) {\n\t\t                                                                                                                            s0 = peg$currPos;\n\t\t                                                                                                                            s1 = peg$parseutcTimeKey();\n\t\t                                                                                                                            if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                s2 = peg$parsews();\n\t\t                                                                                                                                s3 = peg$parsetimeString();\n\t\t                                                                                                                                if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                    peg$savedPos = s0;\n\t\t                                                                                                                                    s0 = peg$f36(s3);\n\t\t                                                                                                                                }\n\t\t                                                                                                                                else {\n\t\t                                                                                                                                    peg$currPos = s0;\n\t\t                                                                                                                                    s0 = peg$FAILED;\n\t\t                                                                                                                                }\n\t\t                                                                                                                            }\n\t\t                                                                                                                            else {\n\t\t                                                                                                                                peg$currPos = s0;\n\t\t                                                                                                                                s0 = peg$FAILED;\n\t\t                                                                                                                            }\n\t\t                                                                                                                            if (s0 === peg$FAILED) {\n\t\t                                                                                                                                s0 = peg$currPos;\n\t\t                                                                                                                                s1 = peg$parseutcDateKey();\n\t\t                                                                                                                                if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                    s2 = peg$parsews();\n\t\t                                                                                                                                    s3 = peg$parsedateString();\n\t\t                                                                                                                                    if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                        peg$savedPos = s0;\n\t\t                                                                                                                                        s0 = peg$f37(s3);\n\t\t                                                                                                                                    }\n\t\t                                                                                                                                    else {\n\t\t                                                                                                                                        peg$currPos = s0;\n\t\t                                                                                                                                        s0 = peg$FAILED;\n\t\t                                                                                                                                    }\n\t\t                                                                                                                                }\n\t\t                                                                                                                                else {\n\t\t                                                                                                                                    peg$currPos = s0;\n\t\t                                                                                                                                    s0 = peg$FAILED;\n\t\t                                                                                                                                }\n\t\t                                                                                                                                if (s0 === peg$FAILED) {\n\t\t                                                                                                                                    s0 = peg$currPos;\n\t\t                                                                                                                                    s1 = peg$parsetimeControlKey();\n\t\t                                                                                                                                    if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                        s2 = peg$parsews();\n\t\t                                                                                                                                        s3 = peg$parsetimeControl();\n\t\t                                                                                                                                        if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                            peg$savedPos = s0;\n\t\t                                                                                                                                            s0 = peg$f38(s3);\n\t\t                                                                                                                                        }\n\t\t                                                                                                                                        else {\n\t\t                                                                                                                                            peg$currPos = s0;\n\t\t                                                                                                                                            s0 = peg$FAILED;\n\t\t                                                                                                                                        }\n\t\t                                                                                                                                    }\n\t\t                                                                                                                                    else {\n\t\t                                                                                                                                        peg$currPos = s0;\n\t\t                                                                                                                                        s0 = peg$FAILED;\n\t\t                                                                                                                                    }\n\t\t                                                                                                                                    if (s0 === peg$FAILED) {\n\t\t                                                                                                                                        s0 = peg$currPos;\n\t\t                                                                                                                                        s1 = peg$parsesetUpKey();\n\t\t                                                                                                                                        if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                            s2 = peg$parsews();\n\t\t                                                                                                                                            s3 = peg$parsestring();\n\t\t                                                                                                                                            if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                                peg$savedPos = s0;\n\t\t                                                                                                                                                s0 = peg$f39(s3);\n\t\t                                                                                                                                            }\n\t\t                                                                                                                                            else {\n\t\t                                                                                                                                                peg$currPos = s0;\n\t\t                                                                                                                                                s0 = peg$FAILED;\n\t\t                                                                                                                                            }\n\t\t                                                                                                                                        }\n\t\t                                                                                                                                        else {\n\t\t                                                                                                                                            peg$currPos = s0;\n\t\t                                                                                                                                            s0 = peg$FAILED;\n\t\t                                                                                                                                        }\n\t\t                                                                                                                                        if (s0 === peg$FAILED) {\n\t\t                                                                                                                                            s0 = peg$currPos;\n\t\t                                                                                                                                            s1 = peg$parsefenKey();\n\t\t                                                                                                                                            if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                s2 = peg$parsews();\n\t\t                                                                                                                                                s3 = peg$parsestring();\n\t\t                                                                                                                                                if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                                    peg$savedPos = s0;\n\t\t                                                                                                                                                    s0 = peg$f40(s3);\n\t\t                                                                                                                                                }\n\t\t                                                                                                                                                else {\n\t\t                                                                                                                                                    peg$currPos = s0;\n\t\t                                                                                                                                                    s0 = peg$FAILED;\n\t\t                                                                                                                                                }\n\t\t                                                                                                                                            }\n\t\t                                                                                                                                            else {\n\t\t                                                                                                                                                peg$currPos = s0;\n\t\t                                                                                                                                                s0 = peg$FAILED;\n\t\t                                                                                                                                            }\n\t\t                                                                                                                                            if (s0 === peg$FAILED) {\n\t\t                                                                                                                                                s0 = peg$currPos;\n\t\t                                                                                                                                                s1 = peg$parseterminationKey();\n\t\t                                                                                                                                                if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                    s2 = peg$parsews();\n\t\t                                                                                                                                                    s3 = peg$parsestring();\n\t\t                                                                                                                                                    if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                                        peg$savedPos = s0;\n\t\t                                                                                                                                                        s0 = peg$f41(s3);\n\t\t                                                                                                                                                    }\n\t\t                                                                                                                                                    else {\n\t\t                                                                                                                                                        peg$currPos = s0;\n\t\t                                                                                                                                                        s0 = peg$FAILED;\n\t\t                                                                                                                                                    }\n\t\t                                                                                                                                                }\n\t\t                                                                                                                                                else {\n\t\t                                                                                                                                                    peg$currPos = s0;\n\t\t                                                                                                                                                    s0 = peg$FAILED;\n\t\t                                                                                                                                                }\n\t\t                                                                                                                                                if (s0 === peg$FAILED) {\n\t\t                                                                                                                                                    s0 = peg$currPos;\n\t\t                                                                                                                                                    s1 = peg$parseannotatorKey();\n\t\t                                                                                                                                                    if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                        s2 = peg$parsews();\n\t\t                                                                                                                                                        s3 = peg$parsestring();\n\t\t                                                                                                                                                        if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                                            peg$savedPos = s0;\n\t\t                                                                                                                                                            s0 = peg$f42(s3);\n\t\t                                                                                                                                                        }\n\t\t                                                                                                                                                        else {\n\t\t                                                                                                                                                            peg$currPos = s0;\n\t\t                                                                                                                                                            s0 = peg$FAILED;\n\t\t                                                                                                                                                        }\n\t\t                                                                                                                                                    }\n\t\t                                                                                                                                                    else {\n\t\t                                                                                                                                                        peg$currPos = s0;\n\t\t                                                                                                                                                        s0 = peg$FAILED;\n\t\t                                                                                                                                                    }\n\t\t                                                                                                                                                    if (s0 === peg$FAILED) {\n\t\t                                                                                                                                                        s0 = peg$currPos;\n\t\t                                                                                                                                                        s1 = peg$parsemodeKey();\n\t\t                                                                                                                                                        if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                            s2 = peg$parsews();\n\t\t                                                                                                                                                            s3 = peg$parsestring();\n\t\t                                                                                                                                                            if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                                                peg$savedPos = s0;\n\t\t                                                                                                                                                                s0 = peg$f43(s3);\n\t\t                                                                                                                                                            }\n\t\t                                                                                                                                                            else {\n\t\t                                                                                                                                                                peg$currPos = s0;\n\t\t                                                                                                                                                                s0 = peg$FAILED;\n\t\t                                                                                                                                                            }\n\t\t                                                                                                                                                        }\n\t\t                                                                                                                                                        else {\n\t\t                                                                                                                                                            peg$currPos = s0;\n\t\t                                                                                                                                                            s0 = peg$FAILED;\n\t\t                                                                                                                                                        }\n\t\t                                                                                                                                                        if (s0 === peg$FAILED) {\n\t\t                                                                                                                                                            s0 = peg$currPos;\n\t\t                                                                                                                                                            s1 = peg$parseplyCountKey();\n\t\t                                                                                                                                                            if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                                s2 = peg$parsews();\n\t\t                                                                                                                                                                s3 = peg$parseintegerString();\n\t\t                                                                                                                                                                if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                                                    peg$savedPos = s0;\n\t\t                                                                                                                                                                    s0 = peg$f44(s3);\n\t\t                                                                                                                                                                }\n\t\t                                                                                                                                                                else {\n\t\t                                                                                                                                                                    peg$currPos = s0;\n\t\t                                                                                                                                                                    s0 = peg$FAILED;\n\t\t                                                                                                                                                                }\n\t\t                                                                                                                                                            }\n\t\t                                                                                                                                                            else {\n\t\t                                                                                                                                                                peg$currPos = s0;\n\t\t                                                                                                                                                                s0 = peg$FAILED;\n\t\t                                                                                                                                                            }\n\t\t                                                                                                                                                            if (s0 === peg$FAILED) {\n\t\t                                                                                                                                                                s0 = peg$currPos;\n\t\t                                                                                                                                                                s1 = peg$parsevariantKey();\n\t\t                                                                                                                                                                if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                                    s2 = peg$parsews();\n\t\t                                                                                                                                                                    s3 = peg$parsestring();\n\t\t                                                                                                                                                                    if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                                                        peg$savedPos = s0;\n\t\t                                                                                                                                                                        s0 = peg$f45(s3);\n\t\t                                                                                                                                                                    }\n\t\t                                                                                                                                                                    else {\n\t\t                                                                                                                                                                        peg$currPos = s0;\n\t\t                                                                                                                                                                        s0 = peg$FAILED;\n\t\t                                                                                                                                                                    }\n\t\t                                                                                                                                                                }\n\t\t                                                                                                                                                                else {\n\t\t                                                                                                                                                                    peg$currPos = s0;\n\t\t                                                                                                                                                                    s0 = peg$FAILED;\n\t\t                                                                                                                                                                }\n\t\t                                                                                                                                                                if (s0 === peg$FAILED) {\n\t\t                                                                                                                                                                    s0 = peg$currPos;\n\t\t                                                                                                                                                                    s1 = peg$parsewhiteRatingDiffKey();\n\t\t                                                                                                                                                                    if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                                        s2 = peg$parsews();\n\t\t                                                                                                                                                                        s3 = peg$parsestring();\n\t\t                                                                                                                                                                        if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                                                            peg$savedPos = s0;\n\t\t                                                                                                                                                                            s0 = peg$f46(s3);\n\t\t                                                                                                                                                                        }\n\t\t                                                                                                                                                                        else {\n\t\t                                                                                                                                                                            peg$currPos = s0;\n\t\t                                                                                                                                                                            s0 = peg$FAILED;\n\t\t                                                                                                                                                                        }\n\t\t                                                                                                                                                                    }\n\t\t                                                                                                                                                                    else {\n\t\t                                                                                                                                                                        peg$currPos = s0;\n\t\t                                                                                                                                                                        s0 = peg$FAILED;\n\t\t                                                                                                                                                                    }\n\t\t                                                                                                                                                                    if (s0 === peg$FAILED) {\n\t\t                                                                                                                                                                        s0 = peg$currPos;\n\t\t                                                                                                                                                                        s1 = peg$parseblackRatingDiffKey();\n\t\t                                                                                                                                                                        if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                                            s2 = peg$parsews();\n\t\t                                                                                                                                                                            s3 = peg$parsestring();\n\t\t                                                                                                                                                                            if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                                                                peg$savedPos = s0;\n\t\t                                                                                                                                                                                s0 = peg$f47(s3);\n\t\t                                                                                                                                                                            }\n\t\t                                                                                                                                                                            else {\n\t\t                                                                                                                                                                                peg$currPos = s0;\n\t\t                                                                                                                                                                                s0 = peg$FAILED;\n\t\t                                                                                                                                                                            }\n\t\t                                                                                                                                                                        }\n\t\t                                                                                                                                                                        else {\n\t\t                                                                                                                                                                            peg$currPos = s0;\n\t\t                                                                                                                                                                            s0 = peg$FAILED;\n\t\t                                                                                                                                                                        }\n\t\t                                                                                                                                                                        if (s0 === peg$FAILED) {\n\t\t                                                                                                                                                                            s0 = peg$currPos;\n\t\t                                                                                                                                                                            s1 = peg$parsewhiteFideIdKey();\n\t\t                                                                                                                                                                            if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                                                s2 = peg$parsews();\n\t\t                                                                                                                                                                                s3 = peg$parsestring();\n\t\t                                                                                                                                                                                if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                                                                    peg$savedPos = s0;\n\t\t                                                                                                                                                                                    s0 = peg$f48(s3);\n\t\t                                                                                                                                                                                }\n\t\t                                                                                                                                                                                else {\n\t\t                                                                                                                                                                                    peg$currPos = s0;\n\t\t                                                                                                                                                                                    s0 = peg$FAILED;\n\t\t                                                                                                                                                                                }\n\t\t                                                                                                                                                                            }\n\t\t                                                                                                                                                                            else {\n\t\t                                                                                                                                                                                peg$currPos = s0;\n\t\t                                                                                                                                                                                s0 = peg$FAILED;\n\t\t                                                                                                                                                                            }\n\t\t                                                                                                                                                                            if (s0 === peg$FAILED) {\n\t\t                                                                                                                                                                                s0 = peg$currPos;\n\t\t                                                                                                                                                                                s1 = peg$parseblackFideIdKey();\n\t\t                                                                                                                                                                                if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                                                    s2 = peg$parsews();\n\t\t                                                                                                                                                                                    s3 = peg$parsestring();\n\t\t                                                                                                                                                                                    if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                                                                        peg$savedPos = s0;\n\t\t                                                                                                                                                                                        s0 = peg$f49(s3);\n\t\t                                                                                                                                                                                    }\n\t\t                                                                                                                                                                                    else {\n\t\t                                                                                                                                                                                        peg$currPos = s0;\n\t\t                                                                                                                                                                                        s0 = peg$FAILED;\n\t\t                                                                                                                                                                                    }\n\t\t                                                                                                                                                                                }\n\t\t                                                                                                                                                                                else {\n\t\t                                                                                                                                                                                    peg$currPos = s0;\n\t\t                                                                                                                                                                                    s0 = peg$FAILED;\n\t\t                                                                                                                                                                                }\n\t\t                                                                                                                                                                                if (s0 === peg$FAILED) {\n\t\t                                                                                                                                                                                    s0 = peg$currPos;\n\t\t                                                                                                                                                                                    s1 = peg$parsewhiteTeamKey();\n\t\t                                                                                                                                                                                    if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                                                        s2 = peg$parsews();\n\t\t                                                                                                                                                                                        s3 = peg$parsestring();\n\t\t                                                                                                                                                                                        if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                                                                            peg$savedPos = s0;\n\t\t                                                                                                                                                                                            s0 = peg$f50(s3);\n\t\t                                                                                                                                                                                        }\n\t\t                                                                                                                                                                                        else {\n\t\t                                                                                                                                                                                            peg$currPos = s0;\n\t\t                                                                                                                                                                                            s0 = peg$FAILED;\n\t\t                                                                                                                                                                                        }\n\t\t                                                                                                                                                                                    }\n\t\t                                                                                                                                                                                    else {\n\t\t                                                                                                                                                                                        peg$currPos = s0;\n\t\t                                                                                                                                                                                        s0 = peg$FAILED;\n\t\t                                                                                                                                                                                    }\n\t\t                                                                                                                                                                                    if (s0 === peg$FAILED) {\n\t\t                                                                                                                                                                                        s0 = peg$currPos;\n\t\t                                                                                                                                                                                        s1 = peg$parseblackTeamKey();\n\t\t                                                                                                                                                                                        if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                                                            s2 = peg$parsews();\n\t\t                                                                                                                                                                                            s3 = peg$parsestring();\n\t\t                                                                                                                                                                                            if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                                                                                peg$savedPos = s0;\n\t\t                                                                                                                                                                                                s0 = peg$f51(s3);\n\t\t                                                                                                                                                                                            }\n\t\t                                                                                                                                                                                            else {\n\t\t                                                                                                                                                                                                peg$currPos = s0;\n\t\t                                                                                                                                                                                                s0 = peg$FAILED;\n\t\t                                                                                                                                                                                            }\n\t\t                                                                                                                                                                                        }\n\t\t                                                                                                                                                                                        else {\n\t\t                                                                                                                                                                                            peg$currPos = s0;\n\t\t                                                                                                                                                                                            s0 = peg$FAILED;\n\t\t                                                                                                                                                                                        }\n\t\t                                                                                                                                                                                        if (s0 === peg$FAILED) {\n\t\t                                                                                                                                                                                            s0 = peg$currPos;\n\t\t                                                                                                                                                                                            s1 = peg$parseclockKey();\n\t\t                                                                                                                                                                                            if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                                                                s2 = peg$parsews();\n\t\t                                                                                                                                                                                                s3 = peg$parsecolorClockTimeQ();\n\t\t                                                                                                                                                                                                if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                                                                                    peg$savedPos = s0;\n\t\t                                                                                                                                                                                                    s0 = peg$f52(s3);\n\t\t                                                                                                                                                                                                }\n\t\t                                                                                                                                                                                                else {\n\t\t                                                                                                                                                                                                    peg$currPos = s0;\n\t\t                                                                                                                                                                                                    s0 = peg$FAILED;\n\t\t                                                                                                                                                                                                }\n\t\t                                                                                                                                                                                            }\n\t\t                                                                                                                                                                                            else {\n\t\t                                                                                                                                                                                                peg$currPos = s0;\n\t\t                                                                                                                                                                                                s0 = peg$FAILED;\n\t\t                                                                                                                                                                                            }\n\t\t                                                                                                                                                                                            if (s0 === peg$FAILED) {\n\t\t                                                                                                                                                                                                s0 = peg$currPos;\n\t\t                                                                                                                                                                                                s1 = peg$parsewhiteClockKey();\n\t\t                                                                                                                                                                                                if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                                                                    s2 = peg$parsews();\n\t\t                                                                                                                                                                                                    s3 = peg$parseclockTimeQ();\n\t\t                                                                                                                                                                                                    if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                                                                                        peg$savedPos = s0;\n\t\t                                                                                                                                                                                                        s0 = peg$f53(s3);\n\t\t                                                                                                                                                                                                    }\n\t\t                                                                                                                                                                                                    else {\n\t\t                                                                                                                                                                                                        peg$currPos = s0;\n\t\t                                                                                                                                                                                                        s0 = peg$FAILED;\n\t\t                                                                                                                                                                                                    }\n\t\t                                                                                                                                                                                                }\n\t\t                                                                                                                                                                                                else {\n\t\t                                                                                                                                                                                                    peg$currPos = s0;\n\t\t                                                                                                                                                                                                    s0 = peg$FAILED;\n\t\t                                                                                                                                                                                                }\n\t\t                                                                                                                                                                                                if (s0 === peg$FAILED) {\n\t\t                                                                                                                                                                                                    s0 = peg$currPos;\n\t\t                                                                                                                                                                                                    s1 = peg$parseblackClockKey();\n\t\t                                                                                                                                                                                                    if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                                                                        s2 = peg$parsews();\n\t\t                                                                                                                                                                                                        s3 = peg$parseclockTimeQ();\n\t\t                                                                                                                                                                                                        if (s3 !== peg$FAILED) {\n\t\t                                                                                                                                                                                                            peg$savedPos = s0;\n\t\t                                                                                                                                                                                                            s0 = peg$f54(s3);\n\t\t                                                                                                                                                                                                        }\n\t\t                                                                                                                                                                                                        else {\n\t\t                                                                                                                                                                                                            peg$currPos = s0;\n\t\t                                                                                                                                                                                                            s0 = peg$FAILED;\n\t\t                                                                                                                                                                                                        }\n\t\t                                                                                                                                                                                                    }\n\t\t                                                                                                                                                                                                    else {\n\t\t                                                                                                                                                                                                        peg$currPos = s0;\n\t\t                                                                                                                                                                                                        s0 = peg$FAILED;\n\t\t                                                                                                                                                                                                    }\n\t\t                                                                                                                                                                                                    if (s0 === peg$FAILED) {\n\t\t                                                                                                                                                                                                        s0 = peg$currPos;\n\t\t                                                                                                                                                                                                        s1 = peg$currPos;\n\t\t                                                                                                                                                                                                        peg$silentFails++;\n\t\t                                                                                                                                                                                                        s2 = peg$parsevalidatedKey();\n\t\t                                                                                                                                                                                                        peg$silentFails--;\n\t\t                                                                                                                                                                                                        if (s2 !== peg$FAILED) {\n\t\t                                                                                                                                                                                                            peg$currPos = s1;\n\t\t                                                                                                                                                                                                            s1 = undefined;\n\t\t                                                                                                                                                                                                        }\n\t\t                                                                                                                                                                                                        else {\n\t\t                                                                                                                                                                                                            s1 = peg$FAILED;\n\t\t                                                                                                                                                                                                        }\n\t\t                                                                                                                                                                                                        if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                                                                            s2 = peg$parsestringNoQuot();\n\t\t                                                                                                                                                                                                            s3 = peg$parsews();\n\t\t                                                                                                                                                                                                            s4 = peg$parsestring();\n\t\t                                                                                                                                                                                                            if (s4 !== peg$FAILED) {\n\t\t                                                                                                                                                                                                                peg$savedPos = s0;\n\t\t                                                                                                                                                                                                                s0 = peg$f55(s2, s4);\n\t\t                                                                                                                                                                                                            }\n\t\t                                                                                                                                                                                                            else {\n\t\t                                                                                                                                                                                                                peg$currPos = s0;\n\t\t                                                                                                                                                                                                                s0 = peg$FAILED;\n\t\t                                                                                                                                                                                                            }\n\t\t                                                                                                                                                                                                        }\n\t\t                                                                                                                                                                                                        else {\n\t\t                                                                                                                                                                                                            peg$currPos = s0;\n\t\t                                                                                                                                                                                                            s0 = peg$FAILED;\n\t\t                                                                                                                                                                                                        }\n\t\t                                                                                                                                                                                                        if (s0 === peg$FAILED) {\n\t\t                                                                                                                                                                                                            s0 = peg$currPos;\n\t\t                                                                                                                                                                                                            s1 = peg$currPos;\n\t\t                                                                                                                                                                                                            peg$silentFails++;\n\t\t                                                                                                                                                                                                            s2 = peg$parsevalidatedKey();\n\t\t                                                                                                                                                                                                            peg$silentFails--;\n\t\t                                                                                                                                                                                                            if (s2 === peg$FAILED) {\n\t\t                                                                                                                                                                                                                s1 = undefined;\n\t\t                                                                                                                                                                                                            }\n\t\t                                                                                                                                                                                                            else {\n\t\t                                                                                                                                                                                                                peg$currPos = s1;\n\t\t                                                                                                                                                                                                                s1 = peg$FAILED;\n\t\t                                                                                                                                                                                                            }\n\t\t                                                                                                                                                                                                            if (s1 !== peg$FAILED) {\n\t\t                                                                                                                                                                                                                s2 = peg$parsestringNoQuot();\n\t\t                                                                                                                                                                                                                s3 = peg$parsews();\n\t\t                                                                                                                                                                                                                s4 = peg$parsestring();\n\t\t                                                                                                                                                                                                                if (s4 !== peg$FAILED) {\n\t\t                                                                                                                                                                                                                    peg$savedPos = s0;\n\t\t                                                                                                                                                                                                                    s0 = peg$f56(s2, s4);\n\t\t                                                                                                                                                                                                                }\n\t\t                                                                                                                                                                                                                else {\n\t\t                                                                                                                                                                                                                    peg$currPos = s0;\n\t\t                                                                                                                                                                                                                    s0 = peg$FAILED;\n\t\t                                                                                                                                                                                                                }\n\t\t                                                                                                                                                                                                            }\n\t\t                                                                                                                                                                                                            else {\n\t\t                                                                                                                                                                                                                peg$currPos = s0;\n\t\t                                                                                                                                                                                                                s0 = peg$FAILED;\n\t\t                                                                                                                                                                                                            }\n\t\t                                                                                                                                                                                                        }\n\t\t                                                                                                                                                                                                    }\n\t\t                                                                                                                                                                                                }\n\t\t                                                                                                                                                                                            }\n\t\t                                                                                                                                                                                        }\n\t\t                                                                                                                                                                                    }\n\t\t                                                                                                                                                                                }\n\t\t                                                                                                                                                                            }\n\t\t                                                                                                                                                                        }\n\t\t                                                                                                                                                                    }\n\t\t                                                                                                                                                                }\n\t\t                                                                                                                                                            }\n\t\t                                                                                                                                                        }\n\t\t                                                                                                                                                    }\n\t\t                                                                                                                                                }\n\t\t                                                                                                                                            }\n\t\t                                                                                                                                        }\n\t\t                                                                                                                                    }\n\t\t                                                                                                                                }\n\t\t                                                                                                                            }\n\t\t                                                                                                                        }\n\t\t                                                                                                                    }\n\t\t                                                                                                                }\n\t\t                                                                                                            }\n\t\t                                                                                                        }\n\t\t                                                                                                    }\n\t\t                                                                                                }\n\t\t                                                                                            }\n\t\t                                                                                        }\n\t\t                                                                                    }\n\t\t                                                                                }\n\t\t                                                                            }\n\t\t                                                                        }\n\t\t                                                                    }\n\t\t                                                                }\n\t\t                                                            }\n\t\t                                                        }\n\t\t                                                    }\n\t\t                                                }\n\t\t                                            }\n\t\t                                        }\n\t\t                                    }\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsevalidatedKey() {\n\t\t            var s0;\n\t\t            s0 = peg$parsedateKey();\n\t\t            if (s0 === peg$FAILED) {\n\t\t                s0 = peg$parsewhiteEloKey();\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    s0 = peg$parseblackEloKey();\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        s0 = peg$parsewhiteUSCFKey();\n\t\t                        if (s0 === peg$FAILED) {\n\t\t                            s0 = peg$parseblackUSCFKey();\n\t\t                            if (s0 === peg$FAILED) {\n\t\t                                s0 = peg$parseresultKey();\n\t\t                                if (s0 === peg$FAILED) {\n\t\t                                    s0 = peg$parseeventDateKey();\n\t\t                                    if (s0 === peg$FAILED) {\n\t\t                                        s0 = peg$parseboardKey();\n\t\t                                        if (s0 === peg$FAILED) {\n\t\t                                            s0 = peg$parsetimeKey();\n\t\t                                            if (s0 === peg$FAILED) {\n\t\t                                                s0 = peg$parseutcTimeKey();\n\t\t                                                if (s0 === peg$FAILED) {\n\t\t                                                    s0 = peg$parseutcDateKey();\n\t\t                                                    if (s0 === peg$FAILED) {\n\t\t                                                        s0 = peg$parsetimeControlKey();\n\t\t                                                        if (s0 === peg$FAILED) {\n\t\t                                                            s0 = peg$parseplyCountKey();\n\t\t                                                            if (s0 === peg$FAILED) {\n\t\t                                                                s0 = peg$parseclockKey();\n\t\t                                                                if (s0 === peg$FAILED) {\n\t\t                                                                    s0 = peg$parsewhiteClockKey();\n\t\t                                                                    if (s0 === peg$FAILED) {\n\t\t                                                                        s0 = peg$parseblackClockKey();\n\t\t                                                                    }\n\t\t                                                                }\n\t\t                                                            }\n\t\t                                                        }\n\t\t                                                    }\n\t\t                                                }\n\t\t                                            }\n\t\t                                        }\n\t\t                                    }\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseeventKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 5) === peg$c0) {\n\t\t                s0 = peg$c0;\n\t\t                peg$currPos += 5;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e0);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 5) === peg$c1) {\n\t\t                    s0 = peg$c1;\n\t\t                    peg$currPos += 5;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e1);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsesiteKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 4) === peg$c2) {\n\t\t                s0 = peg$c2;\n\t\t                peg$currPos += 4;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e2);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 4) === peg$c3) {\n\t\t                    s0 = peg$c3;\n\t\t                    peg$currPos += 4;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e3);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsedateKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 4) === peg$c4) {\n\t\t                s0 = peg$c4;\n\t\t                peg$currPos += 4;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e4);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 4) === peg$c5) {\n\t\t                    s0 = peg$c5;\n\t\t                    peg$currPos += 4;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e5);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseroundKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 5) === peg$c6) {\n\t\t                s0 = peg$c6;\n\t\t                peg$currPos += 5;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e6);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 5) === peg$c7) {\n\t\t                    s0 = peg$c7;\n\t\t                    peg$currPos += 5;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e7);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsewhiteKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 5) === peg$c8) {\n\t\t                s0 = peg$c8;\n\t\t                peg$currPos += 5;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e8);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 5) === peg$c9) {\n\t\t                    s0 = peg$c9;\n\t\t                    peg$currPos += 5;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e9);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseblackKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 5) === peg$c10) {\n\t\t                s0 = peg$c10;\n\t\t                peg$currPos += 5;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e10);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 5) === peg$c11) {\n\t\t                    s0 = peg$c11;\n\t\t                    peg$currPos += 5;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e11);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseresultKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 6) === peg$c12) {\n\t\t                s0 = peg$c12;\n\t\t                peg$currPos += 6;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e12);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 6) === peg$c13) {\n\t\t                    s0 = peg$c13;\n\t\t                    peg$currPos += 6;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e13);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsewhiteTitleKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 10) === peg$c14) {\n\t\t                s0 = peg$c14;\n\t\t                peg$currPos += 10;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e14);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 10) === peg$c15) {\n\t\t                    s0 = peg$c15;\n\t\t                    peg$currPos += 10;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e15);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 10) === peg$c16) {\n\t\t                        s0 = peg$c16;\n\t\t                        peg$currPos += 10;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e16);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 10) === peg$c17) {\n\t\t                            s0 = peg$c17;\n\t\t                            peg$currPos += 10;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e17);\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseblackTitleKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 10) === peg$c18) {\n\t\t                s0 = peg$c18;\n\t\t                peg$currPos += 10;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e18);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 10) === peg$c19) {\n\t\t                    s0 = peg$c19;\n\t\t                    peg$currPos += 10;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e19);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 10) === peg$c20) {\n\t\t                        s0 = peg$c20;\n\t\t                        peg$currPos += 10;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e20);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 10) === peg$c21) {\n\t\t                            s0 = peg$c21;\n\t\t                            peg$currPos += 10;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e21);\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsewhiteEloKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 8) === peg$c22) {\n\t\t                s0 = peg$c22;\n\t\t                peg$currPos += 8;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e22);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 8) === peg$c23) {\n\t\t                    s0 = peg$c23;\n\t\t                    peg$currPos += 8;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e23);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 8) === peg$c24) {\n\t\t                        s0 = peg$c24;\n\t\t                        peg$currPos += 8;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e24);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 8) === peg$c25) {\n\t\t                            s0 = peg$c25;\n\t\t                            peg$currPos += 8;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e25);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s0 === peg$FAILED) {\n\t\t                            if (input.substr(peg$currPos, 8) === peg$c26) {\n\t\t                                s0 = peg$c26;\n\t\t                                peg$currPos += 8;\n\t\t                            }\n\t\t                            else {\n\t\t                                s0 = peg$FAILED;\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e26);\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseblackEloKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 8) === peg$c27) {\n\t\t                s0 = peg$c27;\n\t\t                peg$currPos += 8;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e27);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 8) === peg$c28) {\n\t\t                    s0 = peg$c28;\n\t\t                    peg$currPos += 8;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e28);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 8) === peg$c29) {\n\t\t                        s0 = peg$c29;\n\t\t                        peg$currPos += 8;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e29);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 8) === peg$c30) {\n\t\t                            s0 = peg$c30;\n\t\t                            peg$currPos += 8;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e30);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s0 === peg$FAILED) {\n\t\t                            if (input.substr(peg$currPos, 8) === peg$c31) {\n\t\t                                s0 = peg$c31;\n\t\t                                peg$currPos += 8;\n\t\t                            }\n\t\t                            else {\n\t\t                                s0 = peg$FAILED;\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e31);\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsewhiteUSCFKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 9) === peg$c32) {\n\t\t                s0 = peg$c32;\n\t\t                peg$currPos += 9;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e32);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 9) === peg$c33) {\n\t\t                    s0 = peg$c33;\n\t\t                    peg$currPos += 9;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e33);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 9) === peg$c34) {\n\t\t                        s0 = peg$c34;\n\t\t                        peg$currPos += 9;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e34);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 9) === peg$c35) {\n\t\t                            s0 = peg$c35;\n\t\t                            peg$currPos += 9;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e35);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s0 === peg$FAILED) {\n\t\t                            if (input.substr(peg$currPos, 9) === peg$c36) {\n\t\t                                s0 = peg$c36;\n\t\t                                peg$currPos += 9;\n\t\t                            }\n\t\t                            else {\n\t\t                                s0 = peg$FAILED;\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e36);\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseblackUSCFKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 9) === peg$c37) {\n\t\t                s0 = peg$c37;\n\t\t                peg$currPos += 9;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e37);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 9) === peg$c38) {\n\t\t                    s0 = peg$c38;\n\t\t                    peg$currPos += 9;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e38);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 9) === peg$c39) {\n\t\t                        s0 = peg$c39;\n\t\t                        peg$currPos += 9;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e39);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 9) === peg$c40) {\n\t\t                            s0 = peg$c40;\n\t\t                            peg$currPos += 9;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e40);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s0 === peg$FAILED) {\n\t\t                            if (input.substr(peg$currPos, 9) === peg$c41) {\n\t\t                                s0 = peg$c41;\n\t\t                                peg$currPos += 9;\n\t\t                            }\n\t\t                            else {\n\t\t                                s0 = peg$FAILED;\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e41);\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsewhiteNAKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 7) === peg$c42) {\n\t\t                s0 = peg$c42;\n\t\t                peg$currPos += 7;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e42);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 7) === peg$c43) {\n\t\t                    s0 = peg$c43;\n\t\t                    peg$currPos += 7;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e43);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 7) === peg$c44) {\n\t\t                        s0 = peg$c44;\n\t\t                        peg$currPos += 7;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e44);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 7) === peg$c45) {\n\t\t                            s0 = peg$c45;\n\t\t                            peg$currPos += 7;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e45);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s0 === peg$FAILED) {\n\t\t                            if (input.substr(peg$currPos, 7) === peg$c46) {\n\t\t                                s0 = peg$c46;\n\t\t                                peg$currPos += 7;\n\t\t                            }\n\t\t                            else {\n\t\t                                s0 = peg$FAILED;\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e46);\n\t\t                                }\n\t\t                            }\n\t\t                            if (s0 === peg$FAILED) {\n\t\t                                if (input.substr(peg$currPos, 7) === peg$c47) {\n\t\t                                    s0 = peg$c47;\n\t\t                                    peg$currPos += 7;\n\t\t                                }\n\t\t                                else {\n\t\t                                    s0 = peg$FAILED;\n\t\t                                    if (peg$silentFails === 0) {\n\t\t                                        peg$fail(peg$e47);\n\t\t                                    }\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseblackNAKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 7) === peg$c48) {\n\t\t                s0 = peg$c48;\n\t\t                peg$currPos += 7;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e48);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 7) === peg$c49) {\n\t\t                    s0 = peg$c49;\n\t\t                    peg$currPos += 7;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e49);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 7) === peg$c50) {\n\t\t                        s0 = peg$c50;\n\t\t                        peg$currPos += 7;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e50);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 7) === peg$c51) {\n\t\t                            s0 = peg$c51;\n\t\t                            peg$currPos += 7;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e51);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s0 === peg$FAILED) {\n\t\t                            if (input.substr(peg$currPos, 7) === peg$c52) {\n\t\t                                s0 = peg$c52;\n\t\t                                peg$currPos += 7;\n\t\t                            }\n\t\t                            else {\n\t\t                                s0 = peg$FAILED;\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e52);\n\t\t                                }\n\t\t                            }\n\t\t                            if (s0 === peg$FAILED) {\n\t\t                                if (input.substr(peg$currPos, 7) === peg$c53) {\n\t\t                                    s0 = peg$c53;\n\t\t                                    peg$currPos += 7;\n\t\t                                }\n\t\t                                else {\n\t\t                                    s0 = peg$FAILED;\n\t\t                                    if (peg$silentFails === 0) {\n\t\t                                        peg$fail(peg$e53);\n\t\t                                    }\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsewhiteTypeKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 9) === peg$c54) {\n\t\t                s0 = peg$c54;\n\t\t                peg$currPos += 9;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e54);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 9) === peg$c55) {\n\t\t                    s0 = peg$c55;\n\t\t                    peg$currPos += 9;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e55);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 9) === peg$c56) {\n\t\t                        s0 = peg$c56;\n\t\t                        peg$currPos += 9;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e56);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 9) === peg$c57) {\n\t\t                            s0 = peg$c57;\n\t\t                            peg$currPos += 9;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e57);\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseblackTypeKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 9) === peg$c58) {\n\t\t                s0 = peg$c58;\n\t\t                peg$currPos += 9;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e58);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 9) === peg$c59) {\n\t\t                    s0 = peg$c59;\n\t\t                    peg$currPos += 9;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e59);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 9) === peg$c60) {\n\t\t                        s0 = peg$c60;\n\t\t                        peg$currPos += 9;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e60);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 9) === peg$c61) {\n\t\t                            s0 = peg$c61;\n\t\t                            peg$currPos += 9;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e61);\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseeventDateKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 9) === peg$c62) {\n\t\t                s0 = peg$c62;\n\t\t                peg$currPos += 9;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e62);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 9) === peg$c63) {\n\t\t                    s0 = peg$c63;\n\t\t                    peg$currPos += 9;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e63);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 9) === peg$c64) {\n\t\t                        s0 = peg$c64;\n\t\t                        peg$currPos += 9;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e64);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 9) === peg$c65) {\n\t\t                            s0 = peg$c65;\n\t\t                            peg$currPos += 9;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e65);\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseeventSponsorKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 12) === peg$c66) {\n\t\t                s0 = peg$c66;\n\t\t                peg$currPos += 12;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e66);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 12) === peg$c67) {\n\t\t                    s0 = peg$c67;\n\t\t                    peg$currPos += 12;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e67);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 12) === peg$c68) {\n\t\t                        s0 = peg$c68;\n\t\t                        peg$currPos += 12;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e68);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 12) === peg$c69) {\n\t\t                            s0 = peg$c69;\n\t\t                            peg$currPos += 12;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e69);\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsesectionKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 7) === peg$c70) {\n\t\t                s0 = peg$c70;\n\t\t                peg$currPos += 7;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e70);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 7) === peg$c71) {\n\t\t                    s0 = peg$c71;\n\t\t                    peg$currPos += 7;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e71);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsestageKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 5) === peg$c72) {\n\t\t                s0 = peg$c72;\n\t\t                peg$currPos += 5;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e72);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 5) === peg$c73) {\n\t\t                    s0 = peg$c73;\n\t\t                    peg$currPos += 5;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e73);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseboardKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 5) === peg$c74) {\n\t\t                s0 = peg$c74;\n\t\t                peg$currPos += 5;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e74);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 5) === peg$c75) {\n\t\t                    s0 = peg$c75;\n\t\t                    peg$currPos += 5;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e75);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseopeningKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 7) === peg$c76) {\n\t\t                s0 = peg$c76;\n\t\t                peg$currPos += 7;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e76);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 7) === peg$c77) {\n\t\t                    s0 = peg$c77;\n\t\t                    peg$currPos += 7;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e77);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsevariationKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 9) === peg$c78) {\n\t\t                s0 = peg$c78;\n\t\t                peg$currPos += 9;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e78);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 9) === peg$c79) {\n\t\t                    s0 = peg$c79;\n\t\t                    peg$currPos += 9;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e79);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsesubVariationKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 12) === peg$c80) {\n\t\t                s0 = peg$c80;\n\t\t                peg$currPos += 12;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e80);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 12) === peg$c81) {\n\t\t                    s0 = peg$c81;\n\t\t                    peg$currPos += 12;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e81);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 12) === peg$c82) {\n\t\t                        s0 = peg$c82;\n\t\t                        peg$currPos += 12;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e82);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 12) === peg$c83) {\n\t\t                            s0 = peg$c83;\n\t\t                            peg$currPos += 12;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e83);\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseecoKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 3) === peg$c84) {\n\t\t                s0 = peg$c84;\n\t\t                peg$currPos += 3;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e84);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 3) === peg$c85) {\n\t\t                    s0 = peg$c85;\n\t\t                    peg$currPos += 3;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e85);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 3) === peg$c86) {\n\t\t                        s0 = peg$c86;\n\t\t                        peg$currPos += 3;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e86);\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsenicKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 3) === peg$c87) {\n\t\t                s0 = peg$c87;\n\t\t                peg$currPos += 3;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e87);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 3) === peg$c88) {\n\t\t                    s0 = peg$c88;\n\t\t                    peg$currPos += 3;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e88);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 3) === peg$c89) {\n\t\t                        s0 = peg$c89;\n\t\t                        peg$currPos += 3;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e89);\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsetimeKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 4) === peg$c90) {\n\t\t                s0 = peg$c90;\n\t\t                peg$currPos += 4;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e90);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 4) === peg$c91) {\n\t\t                    s0 = peg$c91;\n\t\t                    peg$currPos += 4;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e91);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseutcTimeKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 7) === peg$c92) {\n\t\t                s0 = peg$c92;\n\t\t                peg$currPos += 7;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e92);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 7) === peg$c93) {\n\t\t                    s0 = peg$c93;\n\t\t                    peg$currPos += 7;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e93);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 7) === peg$c94) {\n\t\t                        s0 = peg$c94;\n\t\t                        peg$currPos += 7;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e94);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 7) === peg$c95) {\n\t\t                            s0 = peg$c95;\n\t\t                            peg$currPos += 7;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e95);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s0 === peg$FAILED) {\n\t\t                            if (input.substr(peg$currPos, 7) === peg$c96) {\n\t\t                                s0 = peg$c96;\n\t\t                                peg$currPos += 7;\n\t\t                            }\n\t\t                            else {\n\t\t                                s0 = peg$FAILED;\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e96);\n\t\t                                }\n\t\t                            }\n\t\t                            if (s0 === peg$FAILED) {\n\t\t                                if (input.substr(peg$currPos, 7) === peg$c97) {\n\t\t                                    s0 = peg$c97;\n\t\t                                    peg$currPos += 7;\n\t\t                                }\n\t\t                                else {\n\t\t                                    s0 = peg$FAILED;\n\t\t                                    if (peg$silentFails === 0) {\n\t\t                                        peg$fail(peg$e97);\n\t\t                                    }\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseutcDateKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 7) === peg$c98) {\n\t\t                s0 = peg$c98;\n\t\t                peg$currPos += 7;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e98);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 7) === peg$c99) {\n\t\t                    s0 = peg$c99;\n\t\t                    peg$currPos += 7;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e99);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 7) === peg$c100) {\n\t\t                        s0 = peg$c100;\n\t\t                        peg$currPos += 7;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e100);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 7) === peg$c101) {\n\t\t                            s0 = peg$c101;\n\t\t                            peg$currPos += 7;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e101);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s0 === peg$FAILED) {\n\t\t                            if (input.substr(peg$currPos, 7) === peg$c102) {\n\t\t                                s0 = peg$c102;\n\t\t                                peg$currPos += 7;\n\t\t                            }\n\t\t                            else {\n\t\t                                s0 = peg$FAILED;\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e102);\n\t\t                                }\n\t\t                            }\n\t\t                            if (s0 === peg$FAILED) {\n\t\t                                if (input.substr(peg$currPos, 7) === peg$c103) {\n\t\t                                    s0 = peg$c103;\n\t\t                                    peg$currPos += 7;\n\t\t                                }\n\t\t                                else {\n\t\t                                    s0 = peg$FAILED;\n\t\t                                    if (peg$silentFails === 0) {\n\t\t                                        peg$fail(peg$e103);\n\t\t                                    }\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsetimeControlKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 11) === peg$c104) {\n\t\t                s0 = peg$c104;\n\t\t                peg$currPos += 11;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e104);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 11) === peg$c105) {\n\t\t                    s0 = peg$c105;\n\t\t                    peg$currPos += 11;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e105);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 11) === peg$c106) {\n\t\t                        s0 = peg$c106;\n\t\t                        peg$currPos += 11;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e106);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 11) === peg$c107) {\n\t\t                            s0 = peg$c107;\n\t\t                            peg$currPos += 11;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e107);\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsesetUpKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 5) === peg$c108) {\n\t\t                s0 = peg$c108;\n\t\t                peg$currPos += 5;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e108);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 5) === peg$c109) {\n\t\t                    s0 = peg$c109;\n\t\t                    peg$currPos += 5;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e109);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 5) === peg$c110) {\n\t\t                        s0 = peg$c110;\n\t\t                        peg$currPos += 5;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e110);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 5) === peg$c111) {\n\t\t                            s0 = peg$c111;\n\t\t                            peg$currPos += 5;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e111);\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsefenKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 3) === peg$c112) {\n\t\t                s0 = peg$c112;\n\t\t                peg$currPos += 3;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e112);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 3) === peg$c113) {\n\t\t                    s0 = peg$c113;\n\t\t                    peg$currPos += 3;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e113);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 3) === peg$c114) {\n\t\t                        s0 = peg$c114;\n\t\t                        peg$currPos += 3;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e114);\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseterminationKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 11) === peg$c115) {\n\t\t                s0 = peg$c115;\n\t\t                peg$currPos += 11;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e115);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 11) === peg$c116) {\n\t\t                    s0 = peg$c116;\n\t\t                    peg$currPos += 11;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e116);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseannotatorKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 9) === peg$c117) {\n\t\t                s0 = peg$c117;\n\t\t                peg$currPos += 9;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e117);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 9) === peg$c118) {\n\t\t                    s0 = peg$c118;\n\t\t                    peg$currPos += 9;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e118);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsemodeKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 4) === peg$c119) {\n\t\t                s0 = peg$c119;\n\t\t                peg$currPos += 4;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e119);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 4) === peg$c120) {\n\t\t                    s0 = peg$c120;\n\t\t                    peg$currPos += 4;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e120);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseplyCountKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 8) === peg$c121) {\n\t\t                s0 = peg$c121;\n\t\t                peg$currPos += 8;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e121);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 8) === peg$c122) {\n\t\t                    s0 = peg$c122;\n\t\t                    peg$currPos += 8;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e122);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 8) === peg$c123) {\n\t\t                        s0 = peg$c123;\n\t\t                        peg$currPos += 8;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e123);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        if (input.substr(peg$currPos, 8) === peg$c124) {\n\t\t                            s0 = peg$c124;\n\t\t                            peg$currPos += 8;\n\t\t                        }\n\t\t                        else {\n\t\t                            s0 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e124);\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsevariantKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 7) === peg$c125) {\n\t\t                s0 = peg$c125;\n\t\t                peg$currPos += 7;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e125);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 7) === peg$c126) {\n\t\t                    s0 = peg$c126;\n\t\t                    peg$currPos += 7;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e126);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsewhiteRatingDiffKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 15) === peg$c127) {\n\t\t                s0 = peg$c127;\n\t\t                peg$currPos += 15;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e127);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseblackRatingDiffKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 15) === peg$c128) {\n\t\t                s0 = peg$c128;\n\t\t                peg$currPos += 15;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e128);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsewhiteFideIdKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 11) === peg$c129) {\n\t\t                s0 = peg$c129;\n\t\t                peg$currPos += 11;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e129);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseblackFideIdKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 11) === peg$c130) {\n\t\t                s0 = peg$c130;\n\t\t                peg$currPos += 11;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e130);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsewhiteTeamKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 9) === peg$c131) {\n\t\t                s0 = peg$c131;\n\t\t                peg$currPos += 9;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e131);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseblackTeamKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 9) === peg$c132) {\n\t\t                s0 = peg$c132;\n\t\t                peg$currPos += 9;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e132);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseclockKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 5) === peg$c133) {\n\t\t                s0 = peg$c133;\n\t\t                peg$currPos += 5;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e133);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsewhiteClockKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 10) === peg$c134) {\n\t\t                s0 = peg$c134;\n\t\t                peg$currPos += 10;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e134);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseblackClockKey() {\n\t\t            var s0;\n\t\t            if (input.substr(peg$currPos, 10) === peg$c135) {\n\t\t                s0 = peg$c135;\n\t\t                peg$currPos += 10;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e135);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsews() {\n\t\t            var s0, s1;\n\t\t            peg$silentFails++;\n\t\t            s0 = [];\n\t\t            if (peg$r0.test(input.charAt(peg$currPos))) {\n\t\t                s1 = input.charAt(peg$currPos);\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s1 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e137);\n\t\t                }\n\t\t            }\n\t\t            while (s1 !== peg$FAILED) {\n\t\t                s0.push(s1);\n\t\t                if (peg$r0.test(input.charAt(peg$currPos))) {\n\t\t                    s1 = input.charAt(peg$currPos);\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s1 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e137);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            peg$silentFails--;\n\t\t            s1 = peg$FAILED;\n\t\t            if (peg$silentFails === 0) {\n\t\t                peg$fail(peg$e136);\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsewsp() {\n\t\t            var s0, s1;\n\t\t            s0 = [];\n\t\t            if (peg$r0.test(input.charAt(peg$currPos))) {\n\t\t                s1 = input.charAt(peg$currPos);\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s1 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e137);\n\t\t                }\n\t\t            }\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                while (s1 !== peg$FAILED) {\n\t\t                    s0.push(s1);\n\t\t                    if (peg$r0.test(input.charAt(peg$currPos))) {\n\t\t                        s1 = input.charAt(peg$currPos);\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s1 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e137);\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseeol() {\n\t\t            var s0, s1;\n\t\t            s0 = [];\n\t\t            if (peg$r1.test(input.charAt(peg$currPos))) {\n\t\t                s1 = input.charAt(peg$currPos);\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s1 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e138);\n\t\t                }\n\t\t            }\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                while (s1 !== peg$FAILED) {\n\t\t                    s0.push(s1);\n\t\t                    if (peg$r1.test(input.charAt(peg$currPos))) {\n\t\t                        s1 = input.charAt(peg$currPos);\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s1 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e138);\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsestringNoQuot() {\n\t\t            var s0, s1, s2;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = [];\n\t\t            if (peg$r2.test(input.charAt(peg$currPos))) {\n\t\t                s2 = input.charAt(peg$currPos);\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s2 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e140);\n\t\t                }\n\t\t            }\n\t\t            while (s2 !== peg$FAILED) {\n\t\t                s1.push(s2);\n\t\t                if (peg$r2.test(input.charAt(peg$currPos))) {\n\t\t                    s2 = input.charAt(peg$currPos);\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s2 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e140);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            peg$savedPos = s0;\n\t\t            s1 = peg$f58(s1);\n\t\t            s0 = s1;\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsequotation_mark() {\n\t\t            var s0;\n\t\t            if (input.charCodeAt(peg$currPos) === 34) {\n\t\t                s0 = peg$c137;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e141);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsestring() {\n\t\t            var s0, s1, s3, s4, s5;\n\t\t            s0 = peg$currPos;\n\t\t            if (input.charCodeAt(peg$currPos) === 34) {\n\t\t                s1 = peg$c137;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s1 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e141);\n\t\t                }\n\t\t            }\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$parse_();\n\t\t                s3 = [];\n\t\t                s4 = peg$parsestringChar();\n\t\t                while (s4 !== peg$FAILED) {\n\t\t                    s3.push(s4);\n\t\t                    s4 = peg$parsestringChar();\n\t\t                }\n\t\t                s4 = peg$parse_();\n\t\t                if (input.charCodeAt(peg$currPos) === 34) {\n\t\t                    s5 = peg$c137;\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s5 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e141);\n\t\t                    }\n\t\t                }\n\t\t                if (s5 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s0 = peg$f59(s3);\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsestringChar() {\n\t\t            var s0, s1, s2, s3;\n\t\t            if (peg$r3.test(input.charAt(peg$currPos))) {\n\t\t                s0 = input.charAt(peg$currPos);\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e142);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                s0 = peg$currPos;\n\t\t                s1 = peg$parseEscape();\n\t\t                if (s1 !== peg$FAILED) {\n\t\t                    s2 = peg$currPos;\n\t\t                    if (input.charCodeAt(peg$currPos) === 92) {\n\t\t                        s3 = peg$c138;\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s3 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e143);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        peg$savedPos = s2;\n\t\t                        s3 = peg$f60();\n\t\t                    }\n\t\t                    s2 = s3;\n\t\t                    if (s2 === peg$FAILED) {\n\t\t                        s2 = peg$currPos;\n\t\t                        if (input.charCodeAt(peg$currPos) === 34) {\n\t\t                            s3 = peg$c137;\n\t\t                            peg$currPos++;\n\t\t                        }\n\t\t                        else {\n\t\t                            s3 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e141);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s3 !== peg$FAILED) {\n\t\t                            peg$savedPos = s2;\n\t\t                            s3 = peg$f61();\n\t\t                        }\n\t\t                        s2 = s3;\n\t\t                    }\n\t\t                    if (s2 !== peg$FAILED) {\n\t\t                        peg$savedPos = s0;\n\t\t                        s0 = peg$f62(s2);\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parse_() {\n\t\t            var s0, s1;\n\t\t            peg$silentFails++;\n\t\t            s0 = [];\n\t\t            if (peg$r0.test(input.charAt(peg$currPos))) {\n\t\t                s1 = input.charAt(peg$currPos);\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s1 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e137);\n\t\t                }\n\t\t            }\n\t\t            while (s1 !== peg$FAILED) {\n\t\t                s0.push(s1);\n\t\t                if (peg$r0.test(input.charAt(peg$currPos))) {\n\t\t                    s1 = input.charAt(peg$currPos);\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s1 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e137);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            peg$silentFails--;\n\t\t            s1 = peg$FAILED;\n\t\t            if (peg$silentFails === 0) {\n\t\t                peg$fail(peg$e136);\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseEscape() {\n\t\t            var s0;\n\t\t            if (input.charCodeAt(peg$currPos) === 92) {\n\t\t                s0 = peg$c138;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e143);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsedateString() {\n\t\t            var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsequotation_mark();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$currPos;\n\t\t                if (peg$r4.test(input.charAt(peg$currPos))) {\n\t\t                    s3 = input.charAt(peg$currPos);\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s3 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e144);\n\t\t                    }\n\t\t                }\n\t\t                if (s3 !== peg$FAILED) {\n\t\t                    if (peg$r4.test(input.charAt(peg$currPos))) {\n\t\t                        s4 = input.charAt(peg$currPos);\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s4 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e144);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s4 !== peg$FAILED) {\n\t\t                        if (peg$r4.test(input.charAt(peg$currPos))) {\n\t\t                            s5 = input.charAt(peg$currPos);\n\t\t                            peg$currPos++;\n\t\t                        }\n\t\t                        else {\n\t\t                            s5 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e144);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s5 !== peg$FAILED) {\n\t\t                            if (peg$r4.test(input.charAt(peg$currPos))) {\n\t\t                                s6 = input.charAt(peg$currPos);\n\t\t                                peg$currPos++;\n\t\t                            }\n\t\t                            else {\n\t\t                                s6 = peg$FAILED;\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e144);\n\t\t                                }\n\t\t                            }\n\t\t                            if (s6 !== peg$FAILED) {\n\t\t                                s3 = [s3, s4, s5, s6];\n\t\t                                s2 = s3;\n\t\t                            }\n\t\t                            else {\n\t\t                                peg$currPos = s2;\n\t\t                                s2 = peg$FAILED;\n\t\t                            }\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s2;\n\t\t                            s2 = peg$FAILED;\n\t\t                        }\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s2;\n\t\t                        s2 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s2;\n\t\t                    s2 = peg$FAILED;\n\t\t                }\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    if (input.charCodeAt(peg$currPos) === 46) {\n\t\t                        s3 = peg$c139;\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s3 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e145);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        s4 = peg$currPos;\n\t\t                        if (peg$r4.test(input.charAt(peg$currPos))) {\n\t\t                            s5 = input.charAt(peg$currPos);\n\t\t                            peg$currPos++;\n\t\t                        }\n\t\t                        else {\n\t\t                            s5 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e144);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s5 !== peg$FAILED) {\n\t\t                            if (peg$r4.test(input.charAt(peg$currPos))) {\n\t\t                                s6 = input.charAt(peg$currPos);\n\t\t                                peg$currPos++;\n\t\t                            }\n\t\t                            else {\n\t\t                                s6 = peg$FAILED;\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e144);\n\t\t                                }\n\t\t                            }\n\t\t                            if (s6 !== peg$FAILED) {\n\t\t                                s5 = [s5, s6];\n\t\t                                s4 = s5;\n\t\t                            }\n\t\t                            else {\n\t\t                                peg$currPos = s4;\n\t\t                                s4 = peg$FAILED;\n\t\t                            }\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s4;\n\t\t                            s4 = peg$FAILED;\n\t\t                        }\n\t\t                        if (s4 !== peg$FAILED) {\n\t\t                            if (input.charCodeAt(peg$currPos) === 46) {\n\t\t                                s5 = peg$c139;\n\t\t                                peg$currPos++;\n\t\t                            }\n\t\t                            else {\n\t\t                                s5 = peg$FAILED;\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e145);\n\t\t                                }\n\t\t                            }\n\t\t                            if (s5 !== peg$FAILED) {\n\t\t                                s6 = peg$currPos;\n\t\t                                if (peg$r4.test(input.charAt(peg$currPos))) {\n\t\t                                    s7 = input.charAt(peg$currPos);\n\t\t                                    peg$currPos++;\n\t\t                                }\n\t\t                                else {\n\t\t                                    s7 = peg$FAILED;\n\t\t                                    if (peg$silentFails === 0) {\n\t\t                                        peg$fail(peg$e144);\n\t\t                                    }\n\t\t                                }\n\t\t                                if (s7 !== peg$FAILED) {\n\t\t                                    if (peg$r4.test(input.charAt(peg$currPos))) {\n\t\t                                        s8 = input.charAt(peg$currPos);\n\t\t                                        peg$currPos++;\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        s8 = peg$FAILED;\n\t\t                                        if (peg$silentFails === 0) {\n\t\t                                            peg$fail(peg$e144);\n\t\t                                        }\n\t\t                                    }\n\t\t                                    if (s8 !== peg$FAILED) {\n\t\t                                        s7 = [s7, s8];\n\t\t                                        s6 = s7;\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        peg$currPos = s6;\n\t\t                                        s6 = peg$FAILED;\n\t\t                                    }\n\t\t                                }\n\t\t                                else {\n\t\t                                    peg$currPos = s6;\n\t\t                                    s6 = peg$FAILED;\n\t\t                                }\n\t\t                                if (s6 !== peg$FAILED) {\n\t\t                                    s7 = peg$parsequotation_mark();\n\t\t                                    if (s7 !== peg$FAILED) {\n\t\t                                        peg$savedPos = s0;\n\t\t                                        s0 = peg$f63(s2, s4, s6);\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        peg$currPos = s0;\n\t\t                                        s0 = peg$FAILED;\n\t\t                                    }\n\t\t                                }\n\t\t                                else {\n\t\t                                    peg$currPos = s0;\n\t\t                                    s0 = peg$FAILED;\n\t\t                                }\n\t\t                            }\n\t\t                            else {\n\t\t                                peg$currPos = s0;\n\t\t                                s0 = peg$FAILED;\n\t\t                            }\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s0;\n\t\t                            s0 = peg$FAILED;\n\t\t                        }\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsetimeString() {\n\t\t            var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsequotation_mark();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = [];\n\t\t                if (peg$r5.test(input.charAt(peg$currPos))) {\n\t\t                    s3 = input.charAt(peg$currPos);\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s3 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e146);\n\t\t                    }\n\t\t                }\n\t\t                if (s3 !== peg$FAILED) {\n\t\t                    while (s3 !== peg$FAILED) {\n\t\t                        s2.push(s3);\n\t\t                        if (peg$r5.test(input.charAt(peg$currPos))) {\n\t\t                            s3 = input.charAt(peg$currPos);\n\t\t                            peg$currPos++;\n\t\t                        }\n\t\t                        else {\n\t\t                            s3 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e146);\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    s2 = peg$FAILED;\n\t\t                }\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    if (input.charCodeAt(peg$currPos) === 58) {\n\t\t                        s3 = peg$c140;\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s3 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e147);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        s4 = [];\n\t\t                        if (peg$r5.test(input.charAt(peg$currPos))) {\n\t\t                            s5 = input.charAt(peg$currPos);\n\t\t                            peg$currPos++;\n\t\t                        }\n\t\t                        else {\n\t\t                            s5 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e146);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s5 !== peg$FAILED) {\n\t\t                            while (s5 !== peg$FAILED) {\n\t\t                                s4.push(s5);\n\t\t                                if (peg$r5.test(input.charAt(peg$currPos))) {\n\t\t                                    s5 = input.charAt(peg$currPos);\n\t\t                                    peg$currPos++;\n\t\t                                }\n\t\t                                else {\n\t\t                                    s5 = peg$FAILED;\n\t\t                                    if (peg$silentFails === 0) {\n\t\t                                        peg$fail(peg$e146);\n\t\t                                    }\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                        else {\n\t\t                            s4 = peg$FAILED;\n\t\t                        }\n\t\t                        if (s4 !== peg$FAILED) {\n\t\t                            if (input.charCodeAt(peg$currPos) === 58) {\n\t\t                                s5 = peg$c140;\n\t\t                                peg$currPos++;\n\t\t                            }\n\t\t                            else {\n\t\t                                s5 = peg$FAILED;\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e147);\n\t\t                                }\n\t\t                            }\n\t\t                            if (s5 !== peg$FAILED) {\n\t\t                                s6 = [];\n\t\t                                if (peg$r5.test(input.charAt(peg$currPos))) {\n\t\t                                    s7 = input.charAt(peg$currPos);\n\t\t                                    peg$currPos++;\n\t\t                                }\n\t\t                                else {\n\t\t                                    s7 = peg$FAILED;\n\t\t                                    if (peg$silentFails === 0) {\n\t\t                                        peg$fail(peg$e146);\n\t\t                                    }\n\t\t                                }\n\t\t                                if (s7 !== peg$FAILED) {\n\t\t                                    while (s7 !== peg$FAILED) {\n\t\t                                        s6.push(s7);\n\t\t                                        if (peg$r5.test(input.charAt(peg$currPos))) {\n\t\t                                            s7 = input.charAt(peg$currPos);\n\t\t                                            peg$currPos++;\n\t\t                                        }\n\t\t                                        else {\n\t\t                                            s7 = peg$FAILED;\n\t\t                                            if (peg$silentFails === 0) {\n\t\t                                                peg$fail(peg$e146);\n\t\t                                            }\n\t\t                                        }\n\t\t                                    }\n\t\t                                }\n\t\t                                else {\n\t\t                                    s6 = peg$FAILED;\n\t\t                                }\n\t\t                                if (s6 !== peg$FAILED) {\n\t\t                                    s7 = peg$parsemillis();\n\t\t                                    if (s7 === peg$FAILED) {\n\t\t                                        s7 = null;\n\t\t                                    }\n\t\t                                    s8 = peg$parsequotation_mark();\n\t\t                                    if (s8 !== peg$FAILED) {\n\t\t                                        peg$savedPos = s0;\n\t\t                                        s0 = peg$f64(s2, s4, s6, s7);\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        peg$currPos = s0;\n\t\t                                        s0 = peg$FAILED;\n\t\t                                    }\n\t\t                                }\n\t\t                                else {\n\t\t                                    peg$currPos = s0;\n\t\t                                    s0 = peg$FAILED;\n\t\t                                }\n\t\t                            }\n\t\t                            else {\n\t\t                                peg$currPos = s0;\n\t\t                                s0 = peg$FAILED;\n\t\t                            }\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s0;\n\t\t                            s0 = peg$FAILED;\n\t\t                        }\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsemillis() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            if (input.charCodeAt(peg$currPos) === 46) {\n\t\t                s1 = peg$c139;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s1 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e145);\n\t\t                }\n\t\t            }\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = [];\n\t\t                if (peg$r5.test(input.charAt(peg$currPos))) {\n\t\t                    s3 = input.charAt(peg$currPos);\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s3 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e146);\n\t\t                    }\n\t\t                }\n\t\t                if (s3 !== peg$FAILED) {\n\t\t                    while (s3 !== peg$FAILED) {\n\t\t                        s2.push(s3);\n\t\t                        if (peg$r5.test(input.charAt(peg$currPos))) {\n\t\t                            s3 = input.charAt(peg$currPos);\n\t\t                            peg$currPos++;\n\t\t                        }\n\t\t                        else {\n\t\t                            s3 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e146);\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    s2 = peg$FAILED;\n\t\t                }\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s0 = peg$f65(s2);\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsecolorClockTimeQ() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsequotation_mark();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$parsecolorClockTime();\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    s3 = peg$parsequotation_mark();\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        peg$savedPos = s0;\n\t\t                        s0 = peg$f66(s2);\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsecolorClockTime() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parseclockColor();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                if (input.charCodeAt(peg$currPos) === 47) {\n\t\t                    s2 = peg$c141;\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s2 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e148);\n\t\t                    }\n\t\t                }\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    s3 = peg$parseclockTime();\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        peg$savedPos = s0;\n\t\t                        s0 = peg$f67(s1, s3);\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseclockColor() {\n\t\t            var s0;\n\t\t            if (input.charCodeAt(peg$currPos) === 66) {\n\t\t                s0 = peg$c142;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e149);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.charCodeAt(peg$currPos) === 87) {\n\t\t                    s0 = peg$c143;\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e150);\n\t\t                    }\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    if (input.charCodeAt(peg$currPos) === 78) {\n\t\t                        s0 = peg$c144;\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s0 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e151);\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseclockTimeQ() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsequotation_mark();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$parseclockTime();\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    s3 = peg$parsequotation_mark();\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        peg$savedPos = s0;\n\t\t                        s0 = peg$f68(s2);\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseclockTime() {\n\t\t            var s0, s1;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parseclockValue1D();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$savedPos = s0;\n\t\t                s1 = peg$f69(s1);\n\t\t            }\n\t\t            s0 = s1;\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsetimeControl() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsequotation_mark();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$parsetcnqs();\n\t\t                s3 = peg$parsequotation_mark();\n\t\t                if (s3 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s0 = peg$f70(s2);\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsetcnqs() {\n\t\t            var s0, s1, s2, s3, s4, s5, s6;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$currPos;\n\t\t            s2 = peg$parsetcnq();\n\t\t            if (s2 !== peg$FAILED) {\n\t\t                s3 = [];\n\t\t                s4 = peg$currPos;\n\t\t                if (input.charCodeAt(peg$currPos) === 58) {\n\t\t                    s5 = peg$c140;\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s5 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e147);\n\t\t                    }\n\t\t                }\n\t\t                if (s5 !== peg$FAILED) {\n\t\t                    s6 = peg$parsetcnq();\n\t\t                    if (s6 !== peg$FAILED) {\n\t\t                        peg$savedPos = s4;\n\t\t                        s4 = peg$f71(s2, s6);\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s4;\n\t\t                        s4 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s4;\n\t\t                    s4 = peg$FAILED;\n\t\t                }\n\t\t                while (s4 !== peg$FAILED) {\n\t\t                    s3.push(s4);\n\t\t                    s4 = peg$currPos;\n\t\t                    if (input.charCodeAt(peg$currPos) === 58) {\n\t\t                        s5 = peg$c140;\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s5 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e147);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s5 !== peg$FAILED) {\n\t\t                        s6 = peg$parsetcnq();\n\t\t                        if (s6 !== peg$FAILED) {\n\t\t                            peg$savedPos = s4;\n\t\t                            s4 = peg$f71(s2, s6);\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s4;\n\t\t                            s4 = peg$FAILED;\n\t\t                        }\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s4;\n\t\t                        s4 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                peg$savedPos = s1;\n\t\t                s1 = peg$f72(s2, s3);\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s1;\n\t\t                s1 = peg$FAILED;\n\t\t            }\n\t\t            if (s1 === peg$FAILED) {\n\t\t                s1 = null;\n\t\t            }\n\t\t            peg$savedPos = s0;\n\t\t            s1 = peg$f73(s1);\n\t\t            s0 = s1;\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsetcnq() {\n\t\t            var s0, s1, s2, s3, s4, s5;\n\t\t            s0 = peg$currPos;\n\t\t            if (input.charCodeAt(peg$currPos) === 63) {\n\t\t                s1 = peg$c145;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s1 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e152);\n\t\t                }\n\t\t            }\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$savedPos = s0;\n\t\t                s1 = peg$f74();\n\t\t            }\n\t\t            s0 = s1;\n\t\t            if (s0 === peg$FAILED) {\n\t\t                s0 = peg$currPos;\n\t\t                if (input.charCodeAt(peg$currPos) === 45) {\n\t\t                    s1 = peg$c146;\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s1 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e153);\n\t\t                    }\n\t\t                }\n\t\t                if (s1 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s1 = peg$f75();\n\t\t                }\n\t\t                s0 = s1;\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    s0 = peg$currPos;\n\t\t                    s1 = peg$parseinteger();\n\t\t                    if (s1 !== peg$FAILED) {\n\t\t                        if (input.charCodeAt(peg$currPos) === 47) {\n\t\t                            s2 = peg$c141;\n\t\t                            peg$currPos++;\n\t\t                        }\n\t\t                        else {\n\t\t                            s2 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e148);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s2 !== peg$FAILED) {\n\t\t                            s3 = peg$parseinteger();\n\t\t                            if (s3 !== peg$FAILED) {\n\t\t                                if (input.charCodeAt(peg$currPos) === 43) {\n\t\t                                    s4 = peg$c147;\n\t\t                                    peg$currPos++;\n\t\t                                }\n\t\t                                else {\n\t\t                                    s4 = peg$FAILED;\n\t\t                                    if (peg$silentFails === 0) {\n\t\t                                        peg$fail(peg$e154);\n\t\t                                    }\n\t\t                                }\n\t\t                                if (s4 !== peg$FAILED) {\n\t\t                                    s5 = peg$parseinteger();\n\t\t                                    if (s5 !== peg$FAILED) {\n\t\t                                        peg$savedPos = s0;\n\t\t                                        s0 = peg$f76(s1, s3, s5);\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        peg$currPos = s0;\n\t\t                                        s0 = peg$FAILED;\n\t\t                                    }\n\t\t                                }\n\t\t                                else {\n\t\t                                    peg$currPos = s0;\n\t\t                                    s0 = peg$FAILED;\n\t\t                                }\n\t\t                            }\n\t\t                            else {\n\t\t                                peg$currPos = s0;\n\t\t                                s0 = peg$FAILED;\n\t\t                            }\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s0;\n\t\t                            s0 = peg$FAILED;\n\t\t                        }\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        s0 = peg$currPos;\n\t\t                        s1 = peg$parseinteger();\n\t\t                        if (s1 !== peg$FAILED) {\n\t\t                            if (input.charCodeAt(peg$currPos) === 47) {\n\t\t                                s2 = peg$c141;\n\t\t                                peg$currPos++;\n\t\t                            }\n\t\t                            else {\n\t\t                                s2 = peg$FAILED;\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e148);\n\t\t                                }\n\t\t                            }\n\t\t                            if (s2 !== peg$FAILED) {\n\t\t                                s3 = peg$parseinteger();\n\t\t                                if (s3 !== peg$FAILED) {\n\t\t                                    peg$savedPos = s0;\n\t\t                                    s0 = peg$f77(s1, s3);\n\t\t                                }\n\t\t                                else {\n\t\t                                    peg$currPos = s0;\n\t\t                                    s0 = peg$FAILED;\n\t\t                                }\n\t\t                            }\n\t\t                            else {\n\t\t                                peg$currPos = s0;\n\t\t                                s0 = peg$FAILED;\n\t\t                            }\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s0;\n\t\t                            s0 = peg$FAILED;\n\t\t                        }\n\t\t                        if (s0 === peg$FAILED) {\n\t\t                            s0 = peg$currPos;\n\t\t                            s1 = peg$parseinteger();\n\t\t                            if (s1 !== peg$FAILED) {\n\t\t                                if (input.charCodeAt(peg$currPos) === 43) {\n\t\t                                    s2 = peg$c147;\n\t\t                                    peg$currPos++;\n\t\t                                }\n\t\t                                else {\n\t\t                                    s2 = peg$FAILED;\n\t\t                                    if (peg$silentFails === 0) {\n\t\t                                        peg$fail(peg$e154);\n\t\t                                    }\n\t\t                                }\n\t\t                                if (s2 !== peg$FAILED) {\n\t\t                                    s3 = peg$parseinteger();\n\t\t                                    if (s3 !== peg$FAILED) {\n\t\t                                        peg$savedPos = s0;\n\t\t                                        s0 = peg$f78(s1, s3);\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        peg$currPos = s0;\n\t\t                                        s0 = peg$FAILED;\n\t\t                                    }\n\t\t                                }\n\t\t                                else {\n\t\t                                    peg$currPos = s0;\n\t\t                                    s0 = peg$FAILED;\n\t\t                                }\n\t\t                            }\n\t\t                            else {\n\t\t                                peg$currPos = s0;\n\t\t                                s0 = peg$FAILED;\n\t\t                            }\n\t\t                            if (s0 === peg$FAILED) {\n\t\t                                s0 = peg$currPos;\n\t\t                                s1 = peg$parseinteger();\n\t\t                                if (s1 !== peg$FAILED) {\n\t\t                                    peg$savedPos = s0;\n\t\t                                    s1 = peg$f79(s1);\n\t\t                                }\n\t\t                                s0 = s1;\n\t\t                                if (s0 === peg$FAILED) {\n\t\t                                    s0 = peg$currPos;\n\t\t                                    if (input.charCodeAt(peg$currPos) === 42) {\n\t\t                                        s1 = peg$c148;\n\t\t                                        peg$currPos++;\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        s1 = peg$FAILED;\n\t\t                                        if (peg$silentFails === 0) {\n\t\t                                            peg$fail(peg$e155);\n\t\t                                        }\n\t\t                                    }\n\t\t                                    if (s1 !== peg$FAILED) {\n\t\t                                        s2 = peg$parseinteger();\n\t\t                                        if (s2 !== peg$FAILED) {\n\t\t                                            peg$savedPos = s0;\n\t\t                                            s0 = peg$f80(s2);\n\t\t                                        }\n\t\t                                        else {\n\t\t                                            peg$currPos = s0;\n\t\t                                            s0 = peg$FAILED;\n\t\t                                        }\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        peg$currPos = s0;\n\t\t                                        s0 = peg$FAILED;\n\t\t                                    }\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseresult() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsequotation_mark();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$parseinnerResult();\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    s3 = peg$parsequotation_mark();\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        peg$savedPos = s0;\n\t\t                        s0 = peg$f81(s2);\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseinnerResult() {\n\t\t            var s0, s1;\n\t\t            s0 = peg$currPos;\n\t\t            if (input.substr(peg$currPos, 3) === peg$c149) {\n\t\t                s1 = peg$c149;\n\t\t                peg$currPos += 3;\n\t\t            }\n\t\t            else {\n\t\t                s1 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e156);\n\t\t                }\n\t\t            }\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$savedPos = s0;\n\t\t                s1 = peg$f82(s1);\n\t\t            }\n\t\t            s0 = s1;\n\t\t            if (s0 === peg$FAILED) {\n\t\t                s0 = peg$currPos;\n\t\t                if (input.substr(peg$currPos, 3) === peg$c150) {\n\t\t                    s1 = peg$c150;\n\t\t                    peg$currPos += 3;\n\t\t                }\n\t\t                else {\n\t\t                    s1 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e157);\n\t\t                    }\n\t\t                }\n\t\t                if (s1 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s1 = peg$f83(s1);\n\t\t                }\n\t\t                s0 = s1;\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    s0 = peg$currPos;\n\t\t                    if (input.substr(peg$currPos, 7) === peg$c151) {\n\t\t                        s1 = peg$c151;\n\t\t                        peg$currPos += 7;\n\t\t                    }\n\t\t                    else {\n\t\t                        s1 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e158);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s1 !== peg$FAILED) {\n\t\t                        peg$savedPos = s0;\n\t\t                        s1 = peg$f84(s1);\n\t\t                    }\n\t\t                    s0 = s1;\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        s0 = peg$currPos;\n\t\t                        if (input.charCodeAt(peg$currPos) === 42) {\n\t\t                            s1 = peg$c148;\n\t\t                            peg$currPos++;\n\t\t                        }\n\t\t                        else {\n\t\t                            s1 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e155);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s1 !== peg$FAILED) {\n\t\t                            peg$savedPos = s0;\n\t\t                            s1 = peg$f85(s1);\n\t\t                        }\n\t\t                        s0 = s1;\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseintegerOrDashString() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parseintegerString();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$savedPos = s0;\n\t\t                s1 = peg$f86(s1);\n\t\t            }\n\t\t            s0 = s1;\n\t\t            if (s0 === peg$FAILED) {\n\t\t                s0 = peg$currPos;\n\t\t                s1 = peg$parsequotation_mark();\n\t\t                if (s1 !== peg$FAILED) {\n\t\t                    if (input.charCodeAt(peg$currPos) === 45) {\n\t\t                        s2 = peg$c146;\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s2 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e153);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s2 !== peg$FAILED) {\n\t\t                        s3 = peg$parsequotation_mark();\n\t\t                        if (s3 !== peg$FAILED) {\n\t\t                            peg$savedPos = s0;\n\t\t                            s0 = peg$f87();\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s0;\n\t\t                            s0 = peg$FAILED;\n\t\t                        }\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    s0 = peg$currPos;\n\t\t                    s1 = peg$parsequotation_mark();\n\t\t                    if (s1 !== peg$FAILED) {\n\t\t                        s2 = peg$parsequotation_mark();\n\t\t                        if (s2 !== peg$FAILED) {\n\t\t                            peg$savedPos = s0;\n\t\t                            s0 = peg$f88();\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s0;\n\t\t                            s0 = peg$FAILED;\n\t\t                        }\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseintegerString() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsequotation_mark();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = [];\n\t\t                if (peg$r5.test(input.charAt(peg$currPos))) {\n\t\t                    s3 = input.charAt(peg$currPos);\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s3 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e146);\n\t\t                    }\n\t\t                }\n\t\t                if (s3 !== peg$FAILED) {\n\t\t                    while (s3 !== peg$FAILED) {\n\t\t                        s2.push(s3);\n\t\t                        if (peg$r5.test(input.charAt(peg$currPos))) {\n\t\t                            s3 = input.charAt(peg$currPos);\n\t\t                            peg$currPos++;\n\t\t                        }\n\t\t                        else {\n\t\t                            s3 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e146);\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    s2 = peg$FAILED;\n\t\t                }\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    s3 = peg$parsequotation_mark();\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        peg$savedPos = s0;\n\t\t                        s0 = peg$f89(s2);\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsepgn() {\n\t\t            var s0, s2, s4, s6, s8, s9, s11, s13, s14;\n\t\t            s0 = peg$currPos;\n\t\t            peg$parsews();\n\t\t            s2 = peg$parsecomments();\n\t\t            if (s2 === peg$FAILED) {\n\t\t                s2 = null;\n\t\t            }\n\t\t            peg$parsews();\n\t\t            s4 = peg$parsemoveNumber();\n\t\t            if (s4 === peg$FAILED) {\n\t\t                s4 = null;\n\t\t            }\n\t\t            peg$parsews();\n\t\t            s6 = peg$parsehalfMove();\n\t\t            if (s6 !== peg$FAILED) {\n\t\t                peg$parsews();\n\t\t                s8 = peg$parsenags();\n\t\t                if (s8 === peg$FAILED) {\n\t\t                    s8 = null;\n\t\t                }\n\t\t                s9 = peg$parsedrawOffer();\n\t\t                if (s9 === peg$FAILED) {\n\t\t                    s9 = null;\n\t\t                }\n\t\t                peg$parsews();\n\t\t                s11 = peg$parsecomments();\n\t\t                if (s11 === peg$FAILED) {\n\t\t                    s11 = null;\n\t\t                }\n\t\t                peg$parsews();\n\t\t                s13 = peg$parsevariation();\n\t\t                if (s13 === peg$FAILED) {\n\t\t                    s13 = null;\n\t\t                }\n\t\t                s14 = peg$parsepgn();\n\t\t                if (s14 === peg$FAILED) {\n\t\t                    s14 = null;\n\t\t                }\n\t\t                peg$savedPos = s0;\n\t\t                s0 = peg$f90(s2, s4, s6, s8, s9, s11, s13, s14);\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                s0 = peg$currPos;\n\t\t                peg$parsews();\n\t\t                s2 = peg$parseendGame();\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    peg$parsews();\n\t\t                    peg$savedPos = s0;\n\t\t                    s0 = peg$f91(s2);\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsedrawOffer() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsepl();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                if (input.charCodeAt(peg$currPos) === 61) {\n\t\t                    s2 = peg$c152;\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s2 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e159);\n\t\t                    }\n\t\t                }\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    s3 = peg$parsepr();\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        s1 = [s1, s2, s3];\n\t\t                        s0 = s1;\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseendGame() {\n\t\t            var s0, s1;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parseinnerResult();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$savedPos = s0;\n\t\t                s1 = peg$f92(s1);\n\t\t            }\n\t\t            s0 = s1;\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsecomments() {\n\t\t            var s0, s1, s2, s3, s5;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsecomment();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = [];\n\t\t                s3 = peg$currPos;\n\t\t                peg$parsews();\n\t\t                s5 = peg$parsecomment();\n\t\t                if (s5 !== peg$FAILED) {\n\t\t                    peg$savedPos = s3;\n\t\t                    s3 = peg$f93(s1, s5);\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s3;\n\t\t                    s3 = peg$FAILED;\n\t\t                }\n\t\t                while (s3 !== peg$FAILED) {\n\t\t                    s2.push(s3);\n\t\t                    s3 = peg$currPos;\n\t\t                    peg$parsews();\n\t\t                    s5 = peg$parsecomment();\n\t\t                    if (s5 !== peg$FAILED) {\n\t\t                        peg$savedPos = s3;\n\t\t                        s3 = peg$f93(s1, s5);\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s3;\n\t\t                        s3 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                peg$savedPos = s0;\n\t\t                s0 = peg$f94(s1, s2);\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsecomment() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsecl();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$parseinnerComment();\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    s3 = peg$parsecr();\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        peg$savedPos = s0;\n\t\t                        s0 = peg$f95(s2);\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                s0 = peg$currPos;\n\t\t                s1 = peg$parsecommentEndOfLine();\n\t\t                if (s1 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s1 = peg$f96(s1);\n\t\t                }\n\t\t                s0 = s1;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseinnerComment() {\n\t\t            var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsews();\n\t\t            s2 = peg$parsebl();\n\t\t            if (s2 !== peg$FAILED) {\n\t\t                if (input.substr(peg$currPos, 4) === peg$c153) {\n\t\t                    s3 = peg$c153;\n\t\t                    peg$currPos += 4;\n\t\t                }\n\t\t                else {\n\t\t                    s3 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e160);\n\t\t                    }\n\t\t                }\n\t\t                if (s3 !== peg$FAILED) {\n\t\t                    s4 = peg$parsewsp();\n\t\t                    if (s4 !== peg$FAILED) {\n\t\t                        s5 = peg$parsecolorFields();\n\t\t                        if (s5 !== peg$FAILED) {\n\t\t                            s6 = peg$parsews();\n\t\t                            s7 = peg$parsebr();\n\t\t                            if (s7 !== peg$FAILED) {\n\t\t                                s8 = peg$parsews();\n\t\t                                s9 = [];\n\t\t                                s10 = peg$currPos;\n\t\t                                s11 = peg$parseinnerComment();\n\t\t                                if (s11 !== peg$FAILED) {\n\t\t                                    peg$savedPos = s10;\n\t\t                                    s11 = peg$f97(s5, s11);\n\t\t                                }\n\t\t                                s10 = s11;\n\t\t                                while (s10 !== peg$FAILED) {\n\t\t                                    s9.push(s10);\n\t\t                                    s10 = peg$currPos;\n\t\t                                    s11 = peg$parseinnerComment();\n\t\t                                    if (s11 !== peg$FAILED) {\n\t\t                                        peg$savedPos = s10;\n\t\t                                        s11 = peg$f97(s5, s11);\n\t\t                                    }\n\t\t                                    s10 = s11;\n\t\t                                }\n\t\t                                peg$savedPos = s0;\n\t\t                                s0 = peg$f98(s5, s9);\n\t\t                            }\n\t\t                            else {\n\t\t                                peg$currPos = s0;\n\t\t                                s0 = peg$FAILED;\n\t\t                            }\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s0;\n\t\t                            s0 = peg$FAILED;\n\t\t                        }\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                s0 = peg$currPos;\n\t\t                s1 = peg$parsews();\n\t\t                s2 = peg$parsebl();\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    if (input.substr(peg$currPos, 4) === peg$c154) {\n\t\t                        s3 = peg$c154;\n\t\t                        peg$currPos += 4;\n\t\t                    }\n\t\t                    else {\n\t\t                        s3 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e161);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        s4 = peg$parsewsp();\n\t\t                        if (s4 !== peg$FAILED) {\n\t\t                            s5 = peg$parsecolorArrows();\n\t\t                            if (s5 !== peg$FAILED) {\n\t\t                                s6 = peg$parsews();\n\t\t                                s7 = peg$parsebr();\n\t\t                                if (s7 !== peg$FAILED) {\n\t\t                                    s8 = peg$parsews();\n\t\t                                    s9 = [];\n\t\t                                    s10 = peg$currPos;\n\t\t                                    s11 = peg$parseinnerComment();\n\t\t                                    if (s11 !== peg$FAILED) {\n\t\t                                        peg$savedPos = s10;\n\t\t                                        s11 = peg$f99(s5, s11);\n\t\t                                    }\n\t\t                                    s10 = s11;\n\t\t                                    while (s10 !== peg$FAILED) {\n\t\t                                        s9.push(s10);\n\t\t                                        s10 = peg$currPos;\n\t\t                                        s11 = peg$parseinnerComment();\n\t\t                                        if (s11 !== peg$FAILED) {\n\t\t                                            peg$savedPos = s10;\n\t\t                                            s11 = peg$f99(s5, s11);\n\t\t                                        }\n\t\t                                        s10 = s11;\n\t\t                                    }\n\t\t                                    peg$savedPos = s0;\n\t\t                                    s0 = peg$f100(s5, s9);\n\t\t                                }\n\t\t                                else {\n\t\t                                    peg$currPos = s0;\n\t\t                                    s0 = peg$FAILED;\n\t\t                                }\n\t\t                            }\n\t\t                            else {\n\t\t                                peg$currPos = s0;\n\t\t                                s0 = peg$FAILED;\n\t\t                            }\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s0;\n\t\t                            s0 = peg$FAILED;\n\t\t                        }\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    s0 = peg$currPos;\n\t\t                    s1 = peg$parsews();\n\t\t                    s2 = peg$parsebl();\n\t\t                    if (s2 !== peg$FAILED) {\n\t\t                        if (input.charCodeAt(peg$currPos) === 37) {\n\t\t                            s3 = peg$c155;\n\t\t                            peg$currPos++;\n\t\t                        }\n\t\t                        else {\n\t\t                            s3 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e162);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s3 !== peg$FAILED) {\n\t\t                            s4 = peg$parseclockCommand1D();\n\t\t                            if (s4 !== peg$FAILED) {\n\t\t                                s5 = peg$parsewsp();\n\t\t                                if (s5 !== peg$FAILED) {\n\t\t                                    s6 = peg$parseclockValue1D();\n\t\t                                    if (s6 !== peg$FAILED) {\n\t\t                                        s7 = peg$parsews();\n\t\t                                        s8 = peg$parsebr();\n\t\t                                        if (s8 !== peg$FAILED) {\n\t\t                                            s9 = peg$parsews();\n\t\t                                            s10 = [];\n\t\t                                            s11 = peg$currPos;\n\t\t                                            s12 = peg$parseinnerComment();\n\t\t                                            if (s12 !== peg$FAILED) {\n\t\t                                                peg$savedPos = s11;\n\t\t                                                s12 = peg$f101(s4, s6, s12);\n\t\t                                            }\n\t\t                                            s11 = s12;\n\t\t                                            while (s11 !== peg$FAILED) {\n\t\t                                                s10.push(s11);\n\t\t                                                s11 = peg$currPos;\n\t\t                                                s12 = peg$parseinnerComment();\n\t\t                                                if (s12 !== peg$FAILED) {\n\t\t                                                    peg$savedPos = s11;\n\t\t                                                    s12 = peg$f101(s4, s6, s12);\n\t\t                                                }\n\t\t                                                s11 = s12;\n\t\t                                            }\n\t\t                                            peg$savedPos = s0;\n\t\t                                            s0 = peg$f102(s4, s6, s10);\n\t\t                                        }\n\t\t                                        else {\n\t\t                                            peg$currPos = s0;\n\t\t                                            s0 = peg$FAILED;\n\t\t                                        }\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        peg$currPos = s0;\n\t\t                                        s0 = peg$FAILED;\n\t\t                                    }\n\t\t                                }\n\t\t                                else {\n\t\t                                    peg$currPos = s0;\n\t\t                                    s0 = peg$FAILED;\n\t\t                                }\n\t\t                            }\n\t\t                            else {\n\t\t                                peg$currPos = s0;\n\t\t                                s0 = peg$FAILED;\n\t\t                            }\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s0;\n\t\t                            s0 = peg$FAILED;\n\t\t                        }\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        s0 = peg$currPos;\n\t\t                        s1 = peg$parsews();\n\t\t                        s2 = peg$parsebl();\n\t\t                        if (s2 !== peg$FAILED) {\n\t\t                            if (input.charCodeAt(peg$currPos) === 37) {\n\t\t                                s3 = peg$c155;\n\t\t                                peg$currPos++;\n\t\t                            }\n\t\t                            else {\n\t\t                                s3 = peg$FAILED;\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e162);\n\t\t                                }\n\t\t                            }\n\t\t                            if (s3 !== peg$FAILED) {\n\t\t                                s4 = peg$parseclockCommand2D();\n\t\t                                if (s4 !== peg$FAILED) {\n\t\t                                    s5 = peg$parsewsp();\n\t\t                                    if (s5 !== peg$FAILED) {\n\t\t                                        s6 = peg$parseclockValue2D();\n\t\t                                        if (s6 !== peg$FAILED) {\n\t\t                                            s7 = peg$parsews();\n\t\t                                            s8 = peg$parsebr();\n\t\t                                            if (s8 !== peg$FAILED) {\n\t\t                                                s9 = peg$parsews();\n\t\t                                                s10 = [];\n\t\t                                                s11 = peg$currPos;\n\t\t                                                s12 = peg$parseinnerComment();\n\t\t                                                if (s12 !== peg$FAILED) {\n\t\t                                                    peg$savedPos = s11;\n\t\t                                                    s12 = peg$f103(s4, s6, s12);\n\t\t                                                }\n\t\t                                                s11 = s12;\n\t\t                                                while (s11 !== peg$FAILED) {\n\t\t                                                    s10.push(s11);\n\t\t                                                    s11 = peg$currPos;\n\t\t                                                    s12 = peg$parseinnerComment();\n\t\t                                                    if (s12 !== peg$FAILED) {\n\t\t                                                        peg$savedPos = s11;\n\t\t                                                        s12 = peg$f103(s4, s6, s12);\n\t\t                                                    }\n\t\t                                                    s11 = s12;\n\t\t                                                }\n\t\t                                                peg$savedPos = s0;\n\t\t                                                s0 = peg$f104(s4, s6, s10);\n\t\t                                            }\n\t\t                                            else {\n\t\t                                                peg$currPos = s0;\n\t\t                                                s0 = peg$FAILED;\n\t\t                                            }\n\t\t                                        }\n\t\t                                        else {\n\t\t                                            peg$currPos = s0;\n\t\t                                            s0 = peg$FAILED;\n\t\t                                        }\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        peg$currPos = s0;\n\t\t                                        s0 = peg$FAILED;\n\t\t                                    }\n\t\t                                }\n\t\t                                else {\n\t\t                                    peg$currPos = s0;\n\t\t                                    s0 = peg$FAILED;\n\t\t                                }\n\t\t                            }\n\t\t                            else {\n\t\t                                peg$currPos = s0;\n\t\t                                s0 = peg$FAILED;\n\t\t                            }\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s0;\n\t\t                            s0 = peg$FAILED;\n\t\t                        }\n\t\t                        if (s0 === peg$FAILED) {\n\t\t                            s0 = peg$currPos;\n\t\t                            s1 = peg$parsews();\n\t\t                            s2 = peg$parsebl();\n\t\t                            if (s2 !== peg$FAILED) {\n\t\t                                if (input.substr(peg$currPos, 5) === peg$c156) {\n\t\t                                    s3 = peg$c156;\n\t\t                                    peg$currPos += 5;\n\t\t                                }\n\t\t                                else {\n\t\t                                    s3 = peg$FAILED;\n\t\t                                    if (peg$silentFails === 0) {\n\t\t                                        peg$fail(peg$e163);\n\t\t                                    }\n\t\t                                }\n\t\t                                if (s3 !== peg$FAILED) {\n\t\t                                    s4 = peg$parsewsp();\n\t\t                                    if (s4 !== peg$FAILED) {\n\t\t                                        s5 = peg$parsestringNoQuot();\n\t\t                                        s6 = peg$parsews();\n\t\t                                        s7 = peg$parsebr();\n\t\t                                        if (s7 !== peg$FAILED) {\n\t\t                                            s8 = peg$parsews();\n\t\t                                            s9 = [];\n\t\t                                            s10 = peg$currPos;\n\t\t                                            s11 = peg$parseinnerComment();\n\t\t                                            if (s11 !== peg$FAILED) {\n\t\t                                                peg$savedPos = s10;\n\t\t                                                s11 = peg$f105(s5, s11);\n\t\t                                            }\n\t\t                                            s10 = s11;\n\t\t                                            while (s10 !== peg$FAILED) {\n\t\t                                                s9.push(s10);\n\t\t                                                s10 = peg$currPos;\n\t\t                                                s11 = peg$parseinnerComment();\n\t\t                                                if (s11 !== peg$FAILED) {\n\t\t                                                    peg$savedPos = s10;\n\t\t                                                    s11 = peg$f105(s5, s11);\n\t\t                                                }\n\t\t                                                s10 = s11;\n\t\t                                            }\n\t\t                                            peg$savedPos = s0;\n\t\t                                            s0 = peg$f106(s5, s9);\n\t\t                                        }\n\t\t                                        else {\n\t\t                                            peg$currPos = s0;\n\t\t                                            s0 = peg$FAILED;\n\t\t                                        }\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        peg$currPos = s0;\n\t\t                                        s0 = peg$FAILED;\n\t\t                                    }\n\t\t                                }\n\t\t                                else {\n\t\t                                    peg$currPos = s0;\n\t\t                                    s0 = peg$FAILED;\n\t\t                                }\n\t\t                            }\n\t\t                            else {\n\t\t                                peg$currPos = s0;\n\t\t                                s0 = peg$FAILED;\n\t\t                            }\n\t\t                            if (s0 === peg$FAILED) {\n\t\t                                s0 = peg$currPos;\n\t\t                                s1 = peg$parsews();\n\t\t                                s2 = peg$parsebl();\n\t\t                                if (s2 !== peg$FAILED) {\n\t\t                                    if (input.charCodeAt(peg$currPos) === 37) {\n\t\t                                        s3 = peg$c155;\n\t\t                                        peg$currPos++;\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        s3 = peg$FAILED;\n\t\t                                        if (peg$silentFails === 0) {\n\t\t                                            peg$fail(peg$e162);\n\t\t                                        }\n\t\t                                    }\n\t\t                                    if (s3 !== peg$FAILED) {\n\t\t                                        s4 = peg$parsestringNoQuot();\n\t\t                                        s5 = peg$parsewsp();\n\t\t                                        if (s5 !== peg$FAILED) {\n\t\t                                            s6 = [];\n\t\t                                            s7 = peg$parsenbr();\n\t\t                                            if (s7 !== peg$FAILED) {\n\t\t                                                while (s7 !== peg$FAILED) {\n\t\t                                                    s6.push(s7);\n\t\t                                                    s7 = peg$parsenbr();\n\t\t                                                }\n\t\t                                            }\n\t\t                                            else {\n\t\t                                                s6 = peg$FAILED;\n\t\t                                            }\n\t\t                                            if (s6 !== peg$FAILED) {\n\t\t                                                s7 = peg$parsebr();\n\t\t                                                if (s7 !== peg$FAILED) {\n\t\t                                                    s8 = peg$parsews();\n\t\t                                                    s9 = [];\n\t\t                                                    s10 = peg$currPos;\n\t\t                                                    s11 = peg$parseinnerComment();\n\t\t                                                    if (s11 !== peg$FAILED) {\n\t\t                                                        peg$savedPos = s10;\n\t\t                                                        s11 = peg$f107(s4, s6, s11);\n\t\t                                                    }\n\t\t                                                    s10 = s11;\n\t\t                                                    while (s10 !== peg$FAILED) {\n\t\t                                                        s9.push(s10);\n\t\t                                                        s10 = peg$currPos;\n\t\t                                                        s11 = peg$parseinnerComment();\n\t\t                                                        if (s11 !== peg$FAILED) {\n\t\t                                                            peg$savedPos = s10;\n\t\t                                                            s11 = peg$f107(s4, s6, s11);\n\t\t                                                        }\n\t\t                                                        s10 = s11;\n\t\t                                                    }\n\t\t                                                    peg$savedPos = s0;\n\t\t                                                    s0 = peg$f108(s4, s6, s9);\n\t\t                                                }\n\t\t                                                else {\n\t\t                                                    peg$currPos = s0;\n\t\t                                                    s0 = peg$FAILED;\n\t\t                                                }\n\t\t                                            }\n\t\t                                            else {\n\t\t                                                peg$currPos = s0;\n\t\t                                                s0 = peg$FAILED;\n\t\t                                            }\n\t\t                                        }\n\t\t                                        else {\n\t\t                                            peg$currPos = s0;\n\t\t                                            s0 = peg$FAILED;\n\t\t                                        }\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        peg$currPos = s0;\n\t\t                                        s0 = peg$FAILED;\n\t\t                                    }\n\t\t                                }\n\t\t                                else {\n\t\t                                    peg$currPos = s0;\n\t\t                                    s0 = peg$FAILED;\n\t\t                                }\n\t\t                                if (s0 === peg$FAILED) {\n\t\t                                    s0 = peg$currPos;\n\t\t                                    s1 = [];\n\t\t                                    s2 = peg$parsenonCommand();\n\t\t                                    if (s2 !== peg$FAILED) {\n\t\t                                        while (s2 !== peg$FAILED) {\n\t\t                                            s1.push(s2);\n\t\t                                            s2 = peg$parsenonCommand();\n\t\t                                        }\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        s1 = peg$FAILED;\n\t\t                                    }\n\t\t                                    if (s1 !== peg$FAILED) {\n\t\t                                        s2 = [];\n\t\t                                        s3 = peg$currPos;\n\t\t                                        s4 = peg$parsews();\n\t\t                                        s5 = peg$parseinnerComment();\n\t\t                                        if (s5 !== peg$FAILED) {\n\t\t                                            peg$savedPos = s3;\n\t\t                                            s3 = peg$f109(s1, s5);\n\t\t                                        }\n\t\t                                        else {\n\t\t                                            peg$currPos = s3;\n\t\t                                            s3 = peg$FAILED;\n\t\t                                        }\n\t\t                                        while (s3 !== peg$FAILED) {\n\t\t                                            s2.push(s3);\n\t\t                                            s3 = peg$currPos;\n\t\t                                            s4 = peg$parsews();\n\t\t                                            s5 = peg$parseinnerComment();\n\t\t                                            if (s5 !== peg$FAILED) {\n\t\t                                                peg$savedPos = s3;\n\t\t                                                s3 = peg$f109(s1, s5);\n\t\t                                            }\n\t\t                                            else {\n\t\t                                                peg$currPos = s3;\n\t\t                                                s3 = peg$FAILED;\n\t\t                                            }\n\t\t                                        }\n\t\t                                        peg$savedPos = s0;\n\t\t                                        s0 = peg$f110(s1, s2);\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        peg$currPos = s0;\n\t\t                                        s0 = peg$FAILED;\n\t\t                                    }\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsenonCommand() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$currPos;\n\t\t            peg$silentFails++;\n\t\t            if (input.substr(peg$currPos, 2) === peg$c157) {\n\t\t                s2 = peg$c157;\n\t\t                peg$currPos += 2;\n\t\t            }\n\t\t            else {\n\t\t                s2 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e164);\n\t\t                }\n\t\t            }\n\t\t            peg$silentFails--;\n\t\t            if (s2 === peg$FAILED) {\n\t\t                s1 = undefined;\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s1;\n\t\t                s1 = peg$FAILED;\n\t\t            }\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$currPos;\n\t\t                peg$silentFails++;\n\t\t                if (input.charCodeAt(peg$currPos) === 125) {\n\t\t                    s3 = peg$c158;\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s3 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e165);\n\t\t                    }\n\t\t                }\n\t\t                peg$silentFails--;\n\t\t                if (s3 === peg$FAILED) {\n\t\t                    s2 = undefined;\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s2;\n\t\t                    s2 = peg$FAILED;\n\t\t                }\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    if (input.length > peg$currPos) {\n\t\t                        s3 = input.charAt(peg$currPos);\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s3 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e166);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        peg$savedPos = s0;\n\t\t                        s0 = peg$f111(s3);\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsenbr() {\n\t\t            var s0, s1, s2;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$currPos;\n\t\t            peg$silentFails++;\n\t\t            s2 = peg$parsebr();\n\t\t            peg$silentFails--;\n\t\t            if (s2 === peg$FAILED) {\n\t\t                s1 = undefined;\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s1;\n\t\t                s1 = peg$FAILED;\n\t\t            }\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                if (input.length > peg$currPos) {\n\t\t                    s2 = input.charAt(peg$currPos);\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s2 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e166);\n\t\t                    }\n\t\t                }\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s0 = peg$f112(s2);\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsecommentEndOfLine() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsesemicolon();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = [];\n\t\t                if (peg$r6.test(input.charAt(peg$currPos))) {\n\t\t                    s3 = input.charAt(peg$currPos);\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s3 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e167);\n\t\t                    }\n\t\t                }\n\t\t                while (s3 !== peg$FAILED) {\n\t\t                    s2.push(s3);\n\t\t                    if (peg$r6.test(input.charAt(peg$currPos))) {\n\t\t                        s3 = input.charAt(peg$currPos);\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s3 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e167);\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t                s3 = peg$parseeol();\n\t\t                if (s3 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s0 = peg$f113(s2);\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsecolorFields() {\n\t\t            var s0, s1, s3, s4, s5, s6, s7;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsecolorField();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$parsews();\n\t\t                s3 = [];\n\t\t                s4 = peg$currPos;\n\t\t                if (input.charCodeAt(peg$currPos) === 44) {\n\t\t                    s5 = peg$c159;\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s5 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e168);\n\t\t                    }\n\t\t                }\n\t\t                if (s5 !== peg$FAILED) {\n\t\t                    s6 = peg$parsews();\n\t\t                    s7 = peg$parsecolorField();\n\t\t                    if (s7 !== peg$FAILED) {\n\t\t                        s5 = [s5, s6, s7];\n\t\t                        s4 = s5;\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s4;\n\t\t                        s4 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s4;\n\t\t                    s4 = peg$FAILED;\n\t\t                }\n\t\t                while (s4 !== peg$FAILED) {\n\t\t                    s3.push(s4);\n\t\t                    s4 = peg$currPos;\n\t\t                    if (input.charCodeAt(peg$currPos) === 44) {\n\t\t                        s5 = peg$c159;\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s5 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e168);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s5 !== peg$FAILED) {\n\t\t                        s6 = peg$parsews();\n\t\t                        s7 = peg$parsecolorField();\n\t\t                        if (s7 !== peg$FAILED) {\n\t\t                            s5 = [s5, s6, s7];\n\t\t                            s4 = s5;\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s4;\n\t\t                            s4 = peg$FAILED;\n\t\t                        }\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s4;\n\t\t                        s4 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                peg$savedPos = s0;\n\t\t                s0 = peg$f114(s1, s3);\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsecolorField() {\n\t\t            var s0, s1, s2;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsecolor();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$parsefield();\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s0 = peg$f115(s1, s2);\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsecolorArrows() {\n\t\t            var s0, s1, s3, s4, s5, s6, s7;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsecolorArrow();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$parsews();\n\t\t                s3 = [];\n\t\t                s4 = peg$currPos;\n\t\t                if (input.charCodeAt(peg$currPos) === 44) {\n\t\t                    s5 = peg$c159;\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s5 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e168);\n\t\t                    }\n\t\t                }\n\t\t                if (s5 !== peg$FAILED) {\n\t\t                    s6 = peg$parsews();\n\t\t                    s7 = peg$parsecolorArrow();\n\t\t                    if (s7 !== peg$FAILED) {\n\t\t                        s5 = [s5, s6, s7];\n\t\t                        s4 = s5;\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s4;\n\t\t                        s4 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s4;\n\t\t                    s4 = peg$FAILED;\n\t\t                }\n\t\t                while (s4 !== peg$FAILED) {\n\t\t                    s3.push(s4);\n\t\t                    s4 = peg$currPos;\n\t\t                    if (input.charCodeAt(peg$currPos) === 44) {\n\t\t                        s5 = peg$c159;\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s5 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e168);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s5 !== peg$FAILED) {\n\t\t                        s6 = peg$parsews();\n\t\t                        s7 = peg$parsecolorArrow();\n\t\t                        if (s7 !== peg$FAILED) {\n\t\t                            s5 = [s5, s6, s7];\n\t\t                            s4 = s5;\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s4;\n\t\t                            s4 = peg$FAILED;\n\t\t                        }\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s4;\n\t\t                        s4 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                peg$savedPos = s0;\n\t\t                s0 = peg$f116(s1, s3);\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsecolorArrow() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsecolor();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$parsefield();\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    s3 = peg$parsefield();\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        peg$savedPos = s0;\n\t\t                        s0 = peg$f117(s1, s2, s3);\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsecolor() {\n\t\t            var s0, s1;\n\t\t            s0 = peg$currPos;\n\t\t            if (input.charCodeAt(peg$currPos) === 89) {\n\t\t                s1 = peg$c160;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s1 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e169);\n\t\t                }\n\t\t            }\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$savedPos = s0;\n\t\t                s1 = peg$f118();\n\t\t            }\n\t\t            s0 = s1;\n\t\t            if (s0 === peg$FAILED) {\n\t\t                s0 = peg$currPos;\n\t\t                if (input.charCodeAt(peg$currPos) === 71) {\n\t\t                    s1 = peg$c161;\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s1 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e170);\n\t\t                    }\n\t\t                }\n\t\t                if (s1 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s1 = peg$f119();\n\t\t                }\n\t\t                s0 = s1;\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    s0 = peg$currPos;\n\t\t                    if (input.charCodeAt(peg$currPos) === 82) {\n\t\t                        s1 = peg$c162;\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s1 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e171);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s1 !== peg$FAILED) {\n\t\t                        peg$savedPos = s0;\n\t\t                        s1 = peg$f120();\n\t\t                    }\n\t\t                    s0 = s1;\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        s0 = peg$currPos;\n\t\t                        if (input.charCodeAt(peg$currPos) === 66) {\n\t\t                            s1 = peg$c142;\n\t\t                            peg$currPos++;\n\t\t                        }\n\t\t                        else {\n\t\t                            s1 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e149);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s1 !== peg$FAILED) {\n\t\t                            peg$savedPos = s0;\n\t\t                            s1 = peg$f121();\n\t\t                        }\n\t\t                        s0 = s1;\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsefield() {\n\t\t            var s0, s1, s2;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsecolumn();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$parserow();\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s0 = peg$f122(s1, s2);\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsecl() {\n\t\t            var s0;\n\t\t            if (input.charCodeAt(peg$currPos) === 123) {\n\t\t                s0 = peg$c163;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e172);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsecr() {\n\t\t            var s0;\n\t\t            if (input.charCodeAt(peg$currPos) === 125) {\n\t\t                s0 = peg$c158;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e165);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsebl() {\n\t\t            var s0;\n\t\t            if (input.charCodeAt(peg$currPos) === 91) {\n\t\t                s0 = peg$c164;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e173);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsebr() {\n\t\t            var s0;\n\t\t            if (input.charCodeAt(peg$currPos) === 93) {\n\t\t                s0 = peg$c165;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e174);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsesemicolon() {\n\t\t            var s0;\n\t\t            if (input.charCodeAt(peg$currPos) === 59) {\n\t\t                s0 = peg$c166;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e175);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseclockCommand1D() {\n\t\t            var s0, s1;\n\t\t            s0 = peg$currPos;\n\t\t            if (input.substr(peg$currPos, 3) === peg$c167) {\n\t\t                s1 = peg$c167;\n\t\t                peg$currPos += 3;\n\t\t            }\n\t\t            else {\n\t\t                s1 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e176);\n\t\t                }\n\t\t            }\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$savedPos = s0;\n\t\t                s1 = peg$f127();\n\t\t            }\n\t\t            s0 = s1;\n\t\t            if (s0 === peg$FAILED) {\n\t\t                s0 = peg$currPos;\n\t\t                if (input.substr(peg$currPos, 3) === peg$c168) {\n\t\t                    s1 = peg$c168;\n\t\t                    peg$currPos += 3;\n\t\t                }\n\t\t                else {\n\t\t                    s1 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e177);\n\t\t                    }\n\t\t                }\n\t\t                if (s1 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s1 = peg$f128();\n\t\t                }\n\t\t                s0 = s1;\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    s0 = peg$currPos;\n\t\t                    if (input.substr(peg$currPos, 3) === peg$c169) {\n\t\t                        s1 = peg$c169;\n\t\t                        peg$currPos += 3;\n\t\t                    }\n\t\t                    else {\n\t\t                        s1 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e178);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s1 !== peg$FAILED) {\n\t\t                        peg$savedPos = s0;\n\t\t                        s1 = peg$f129();\n\t\t                    }\n\t\t                    s0 = s1;\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseclockCommand2D() {\n\t\t            var s0, s1;\n\t\t            s0 = peg$currPos;\n\t\t            if (input.substr(peg$currPos, 3) === peg$c170) {\n\t\t                s1 = peg$c170;\n\t\t                peg$currPos += 3;\n\t\t            }\n\t\t            else {\n\t\t                s1 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e179);\n\t\t                }\n\t\t            }\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$savedPos = s0;\n\t\t                s1 = peg$f130();\n\t\t            }\n\t\t            s0 = s1;\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseclockValue1D() {\n\t\t            var s0, s1, s2, s3, s4;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsehoursMinutes();\n\t\t            if (s1 === peg$FAILED) {\n\t\t                s1 = null;\n\t\t            }\n\t\t            s2 = peg$parsedigit();\n\t\t            if (s2 !== peg$FAILED) {\n\t\t                s3 = peg$parsedigit();\n\t\t                if (s3 === peg$FAILED) {\n\t\t                    s3 = null;\n\t\t                }\n\t\t                s4 = peg$parsemillis();\n\t\t                if (s4 === peg$FAILED) {\n\t\t                    s4 = null;\n\t\t                }\n\t\t                peg$savedPos = s0;\n\t\t                s0 = peg$f131(s1, s2, s3, s4);\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseclockValue2D() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsehoursMinutes();\n\t\t            if (s1 === peg$FAILED) {\n\t\t                s1 = null;\n\t\t            }\n\t\t            s2 = peg$parsedigit();\n\t\t            if (s2 !== peg$FAILED) {\n\t\t                s3 = peg$parsedigit();\n\t\t                if (s3 === peg$FAILED) {\n\t\t                    s3 = null;\n\t\t                }\n\t\t                peg$savedPos = s0;\n\t\t                s0 = peg$f132(s1, s2, s3);\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsehoursMinutes() {\n\t\t            var s0, s1, s2;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsehoursClock();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$parseminutesClock();\n\t\t                if (s2 === peg$FAILED) {\n\t\t                    s2 = null;\n\t\t                }\n\t\t                peg$savedPos = s0;\n\t\t                s0 = peg$f133(s1, s2);\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsehoursClock() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsedigit();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$parsedigit();\n\t\t                if (s2 === peg$FAILED) {\n\t\t                    s2 = null;\n\t\t                }\n\t\t                if (input.charCodeAt(peg$currPos) === 58) {\n\t\t                    s3 = peg$c140;\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s3 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e147);\n\t\t                    }\n\t\t                }\n\t\t                if (s3 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s0 = peg$f134(s1, s2);\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseminutesClock() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsedigit();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$parsedigit();\n\t\t                if (s2 === peg$FAILED) {\n\t\t                    s2 = null;\n\t\t                }\n\t\t                if (input.charCodeAt(peg$currPos) === 58) {\n\t\t                    s3 = peg$c140;\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s3 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e147);\n\t\t                    }\n\t\t                }\n\t\t                if (s3 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s0 = peg$f135(s1, s2);\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsedigit() {\n\t\t            var s0, s1;\n\t\t            s0 = peg$currPos;\n\t\t            if (peg$r5.test(input.charAt(peg$currPos))) {\n\t\t                s1 = input.charAt(peg$currPos);\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s1 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e146);\n\t\t                }\n\t\t            }\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$savedPos = s0;\n\t\t                s1 = peg$f136(s1);\n\t\t            }\n\t\t            s0 = s1;\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsevariation() {\n\t\t            var s0, s1, s2, s3, s5;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsepl();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$parsepgn();\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    s3 = peg$parsepr();\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        peg$parsews();\n\t\t                        s5 = peg$parsevariation();\n\t\t                        if (s5 === peg$FAILED) {\n\t\t                            s5 = null;\n\t\t                        }\n\t\t                        peg$savedPos = s0;\n\t\t                        s0 = peg$f137(s2, s5);\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsepl() {\n\t\t            var s0;\n\t\t            if (input.charCodeAt(peg$currPos) === 40) {\n\t\t                s0 = peg$c171;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e180);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsepr() {\n\t\t            var s0;\n\t\t            if (input.charCodeAt(peg$currPos) === 41) {\n\t\t                s0 = peg$c172;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e181);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsemoveNumber() {\n\t\t            var s0, s1, s2, s3, s4;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parseinteger();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = [];\n\t\t                s3 = peg$parsewhiteSpace();\n\t\t                while (s3 !== peg$FAILED) {\n\t\t                    s2.push(s3);\n\t\t                    s3 = peg$parsewhiteSpace();\n\t\t                }\n\t\t                s3 = [];\n\t\t                s4 = peg$parsedot();\n\t\t                while (s4 !== peg$FAILED) {\n\t\t                    s3.push(s4);\n\t\t                    s4 = peg$parsedot();\n\t\t                }\n\t\t                peg$savedPos = s0;\n\t\t                s0 = peg$f138(s1);\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsedot() {\n\t\t            var s0;\n\t\t            if (input.charCodeAt(peg$currPos) === 46) {\n\t\t                s0 = peg$c139;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e145);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parseinteger() {\n\t\t            var s0, s1, s2;\n\t\t            peg$silentFails++;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = [];\n\t\t            if (peg$r5.test(input.charAt(peg$currPos))) {\n\t\t                s2 = input.charAt(peg$currPos);\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s2 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e146);\n\t\t                }\n\t\t            }\n\t\t            if (s2 !== peg$FAILED) {\n\t\t                while (s2 !== peg$FAILED) {\n\t\t                    s1.push(s2);\n\t\t                    if (peg$r5.test(input.charAt(peg$currPos))) {\n\t\t                        s2 = input.charAt(peg$currPos);\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s2 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e146);\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                s1 = peg$FAILED;\n\t\t            }\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$savedPos = s0;\n\t\t                s1 = peg$f139(s1);\n\t\t            }\n\t\t            s0 = s1;\n\t\t            peg$silentFails--;\n\t\t            if (s0 === peg$FAILED) {\n\t\t                s1 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e182);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsewhiteSpace() {\n\t\t            var s0, s1, s2;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = [];\n\t\t            if (input.charCodeAt(peg$currPos) === 32) {\n\t\t                s2 = peg$c173;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s2 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e183);\n\t\t                }\n\t\t            }\n\t\t            if (s2 !== peg$FAILED) {\n\t\t                while (s2 !== peg$FAILED) {\n\t\t                    s1.push(s2);\n\t\t                    if (input.charCodeAt(peg$currPos) === 32) {\n\t\t                        s2 = peg$c173;\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s2 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e183);\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                s1 = peg$FAILED;\n\t\t            }\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$savedPos = s0;\n\t\t                s1 = peg$f140();\n\t\t            }\n\t\t            s0 = s1;\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsehalfMove() {\n\t\t            var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsefigure();\n\t\t            if (s1 === peg$FAILED) {\n\t\t                s1 = null;\n\t\t            }\n\t\t            s2 = peg$currPos;\n\t\t            peg$silentFails++;\n\t\t            s3 = peg$parsecheckdisc();\n\t\t            peg$silentFails--;\n\t\t            if (s3 !== peg$FAILED) {\n\t\t                peg$currPos = s2;\n\t\t                s2 = undefined;\n\t\t            }\n\t\t            else {\n\t\t                s2 = peg$FAILED;\n\t\t            }\n\t\t            if (s2 !== peg$FAILED) {\n\t\t                s3 = peg$parsediscriminator();\n\t\t                if (s3 !== peg$FAILED) {\n\t\t                    s4 = peg$parsestrike();\n\t\t                    if (s4 === peg$FAILED) {\n\t\t                        s4 = null;\n\t\t                    }\n\t\t                    s5 = peg$parsecolumn();\n\t\t                    if (s5 !== peg$FAILED) {\n\t\t                        s6 = peg$parserow();\n\t\t                        if (s6 !== peg$FAILED) {\n\t\t                            s7 = peg$parsepromotion();\n\t\t                            if (s7 === peg$FAILED) {\n\t\t                                s7 = null;\n\t\t                            }\n\t\t                            s8 = peg$parsecheck();\n\t\t                            if (s8 === peg$FAILED) {\n\t\t                                s8 = null;\n\t\t                            }\n\t\t                            peg$parsews();\n\t\t                            if (input.substr(peg$currPos, 4) === peg$c174) {\n\t\t                                peg$currPos += 4;\n\t\t                            }\n\t\t                            else {\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e184);\n\t\t                                }\n\t\t                            }\n\t\t                            peg$savedPos = s0;\n\t\t                            s0 = peg$f141(s1, s3, s4, s5, s6, s7, s8);\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s0;\n\t\t                            s0 = peg$FAILED;\n\t\t                        }\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                s0 = peg$currPos;\n\t\t                s1 = peg$parsefigure();\n\t\t                if (s1 === peg$FAILED) {\n\t\t                    s1 = null;\n\t\t                }\n\t\t                s2 = peg$parsecolumn();\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    s3 = peg$parserow();\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        s4 = peg$parsestrikeOrDash();\n\t\t                        if (s4 === peg$FAILED) {\n\t\t                            s4 = null;\n\t\t                        }\n\t\t                        s5 = peg$parsecolumn();\n\t\t                        if (s5 !== peg$FAILED) {\n\t\t                            s6 = peg$parserow();\n\t\t                            if (s6 !== peg$FAILED) {\n\t\t                                s7 = peg$parsepromotion();\n\t\t                                if (s7 === peg$FAILED) {\n\t\t                                    s7 = null;\n\t\t                                }\n\t\t                                s8 = peg$parsecheck();\n\t\t                                if (s8 === peg$FAILED) {\n\t\t                                    s8 = null;\n\t\t                                }\n\t\t                                peg$savedPos = s0;\n\t\t                                s0 = peg$f142(s1, s2, s3, s4, s5, s6, s7, s8);\n\t\t                            }\n\t\t                            else {\n\t\t                                peg$currPos = s0;\n\t\t                                s0 = peg$FAILED;\n\t\t                            }\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s0;\n\t\t                            s0 = peg$FAILED;\n\t\t                        }\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    s0 = peg$currPos;\n\t\t                    s1 = peg$parsefigure();\n\t\t                    if (s1 === peg$FAILED) {\n\t\t                        s1 = null;\n\t\t                    }\n\t\t                    s2 = peg$parsestrike();\n\t\t                    if (s2 === peg$FAILED) {\n\t\t                        s2 = null;\n\t\t                    }\n\t\t                    s3 = peg$parsecolumn();\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        s4 = peg$parserow();\n\t\t                        if (s4 !== peg$FAILED) {\n\t\t                            s5 = peg$parsepromotion();\n\t\t                            if (s5 === peg$FAILED) {\n\t\t                                s5 = null;\n\t\t                            }\n\t\t                            s6 = peg$parsecheck();\n\t\t                            if (s6 === peg$FAILED) {\n\t\t                                s6 = null;\n\t\t                            }\n\t\t                            peg$savedPos = s0;\n\t\t                            s0 = peg$f143(s1, s2, s3, s4, s5, s6);\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s0;\n\t\t                            s0 = peg$FAILED;\n\t\t                        }\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        s0 = peg$currPos;\n\t\t                        if (input.substr(peg$currPos, 5) === peg$c175) {\n\t\t                            s1 = peg$c175;\n\t\t                            peg$currPos += 5;\n\t\t                        }\n\t\t                        else {\n\t\t                            s1 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e185);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s1 !== peg$FAILED) {\n\t\t                            s2 = peg$parsecheck();\n\t\t                            if (s2 === peg$FAILED) {\n\t\t                                s2 = null;\n\t\t                            }\n\t\t                            peg$savedPos = s0;\n\t\t                            s0 = peg$f144(s2);\n\t\t                        }\n\t\t                        else {\n\t\t                            peg$currPos = s0;\n\t\t                            s0 = peg$FAILED;\n\t\t                        }\n\t\t                        if (s0 === peg$FAILED) {\n\t\t                            s0 = peg$currPos;\n\t\t                            if (input.substr(peg$currPos, 3) === peg$c176) {\n\t\t                                s1 = peg$c176;\n\t\t                                peg$currPos += 3;\n\t\t                            }\n\t\t                            else {\n\t\t                                s1 = peg$FAILED;\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e186);\n\t\t                                }\n\t\t                            }\n\t\t                            if (s1 !== peg$FAILED) {\n\t\t                                s2 = peg$parsecheck();\n\t\t                                if (s2 === peg$FAILED) {\n\t\t                                    s2 = null;\n\t\t                                }\n\t\t                                peg$savedPos = s0;\n\t\t                                s0 = peg$f145(s2);\n\t\t                            }\n\t\t                            else {\n\t\t                                peg$currPos = s0;\n\t\t                                s0 = peg$FAILED;\n\t\t                            }\n\t\t                            if (s0 === peg$FAILED) {\n\t\t                                s0 = peg$currPos;\n\t\t                                s1 = peg$parsefigure();\n\t\t                                if (s1 !== peg$FAILED) {\n\t\t                                    if (input.charCodeAt(peg$currPos) === 64) {\n\t\t                                        s2 = peg$c177;\n\t\t                                        peg$currPos++;\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        s2 = peg$FAILED;\n\t\t                                        if (peg$silentFails === 0) {\n\t\t                                            peg$fail(peg$e187);\n\t\t                                        }\n\t\t                                    }\n\t\t                                    if (s2 !== peg$FAILED) {\n\t\t                                        s3 = peg$parsecolumn();\n\t\t                                        if (s3 !== peg$FAILED) {\n\t\t                                            s4 = peg$parserow();\n\t\t                                            if (s4 !== peg$FAILED) {\n\t\t                                                peg$savedPos = s0;\n\t\t                                                s0 = peg$f146(s1, s3, s4);\n\t\t                                            }\n\t\t                                            else {\n\t\t                                                peg$currPos = s0;\n\t\t                                                s0 = peg$FAILED;\n\t\t                                            }\n\t\t                                        }\n\t\t                                        else {\n\t\t                                            peg$currPos = s0;\n\t\t                                            s0 = peg$FAILED;\n\t\t                                        }\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        peg$currPos = s0;\n\t\t                                        s0 = peg$FAILED;\n\t\t                                    }\n\t\t                                }\n\t\t                                else {\n\t\t                                    peg$currPos = s0;\n\t\t                                    s0 = peg$FAILED;\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsecheck() {\n\t\t            var s0, s1, s2, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$currPos;\n\t\t            s2 = peg$currPos;\n\t\t            peg$silentFails++;\n\t\t            if (input.substr(peg$currPos, 2) === peg$c178) {\n\t\t                s3 = peg$c178;\n\t\t                peg$currPos += 2;\n\t\t            }\n\t\t            else {\n\t\t                s3 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e188);\n\t\t                }\n\t\t            }\n\t\t            peg$silentFails--;\n\t\t            if (s3 === peg$FAILED) {\n\t\t                s2 = undefined;\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s2;\n\t\t                s2 = peg$FAILED;\n\t\t            }\n\t\t            if (s2 !== peg$FAILED) {\n\t\t                if (input.charCodeAt(peg$currPos) === 43) {\n\t\t                    s3 = peg$c147;\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s3 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e154);\n\t\t                    }\n\t\t                }\n\t\t                if (s3 !== peg$FAILED) {\n\t\t                    s2 = [s2, s3];\n\t\t                    s1 = s2;\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s1;\n\t\t                    s1 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s1;\n\t\t                s1 = peg$FAILED;\n\t\t            }\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$savedPos = s0;\n\t\t                s1 = peg$f147(s1);\n\t\t            }\n\t\t            s0 = s1;\n\t\t            if (s0 === peg$FAILED) {\n\t\t                s0 = peg$currPos;\n\t\t                s1 = peg$currPos;\n\t\t                s2 = peg$currPos;\n\t\t                peg$silentFails++;\n\t\t                if (input.substr(peg$currPos, 3) === peg$c179) {\n\t\t                    s3 = peg$c179;\n\t\t                    peg$currPos += 3;\n\t\t                }\n\t\t                else {\n\t\t                    s3 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e189);\n\t\t                    }\n\t\t                }\n\t\t                peg$silentFails--;\n\t\t                if (s3 === peg$FAILED) {\n\t\t                    s2 = undefined;\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s2;\n\t\t                    s2 = peg$FAILED;\n\t\t                }\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    if (input.charCodeAt(peg$currPos) === 35) {\n\t\t                        s3 = peg$c180;\n\t\t                        peg$currPos++;\n\t\t                    }\n\t\t                    else {\n\t\t                        s3 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e190);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s3 !== peg$FAILED) {\n\t\t                        s2 = [s2, s3];\n\t\t                        s1 = s2;\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s1;\n\t\t                        s1 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s1;\n\t\t                    s1 = peg$FAILED;\n\t\t                }\n\t\t                if (s1 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s1 = peg$f148(s1);\n\t\t                }\n\t\t                s0 = s1;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsepromotion() {\n\t\t            var s0, s2;\n\t\t            s0 = peg$currPos;\n\t\t            if (input.charCodeAt(peg$currPos) === 61) {\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e159);\n\t\t                }\n\t\t            }\n\t\t            s2 = peg$parsepromFigure();\n\t\t            if (s2 !== peg$FAILED) {\n\t\t                peg$savedPos = s0;\n\t\t                s0 = peg$f149(s2);\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsenags() {\n\t\t            var s0, s1, s3;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsenag();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                peg$parsews();\n\t\t                s3 = peg$parsenags();\n\t\t                if (s3 === peg$FAILED) {\n\t\t                    s3 = null;\n\t\t                }\n\t\t                peg$savedPos = s0;\n\t\t                s0 = peg$f150(s1, s3);\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsenag() {\n\t\t            var s0, s1, s2;\n\t\t            s0 = peg$currPos;\n\t\t            if (input.charCodeAt(peg$currPos) === 36) {\n\t\t                s1 = peg$c181;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s1 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e191);\n\t\t                }\n\t\t            }\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$parseinteger();\n\t\t                if (s2 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s0 = peg$f151(s2);\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                s0 = peg$currPos;\n\t\t                if (input.substr(peg$currPos, 2) === peg$c182) {\n\t\t                    s1 = peg$c182;\n\t\t                    peg$currPos += 2;\n\t\t                }\n\t\t                else {\n\t\t                    s1 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e192);\n\t\t                    }\n\t\t                }\n\t\t                if (s1 !== peg$FAILED) {\n\t\t                    peg$savedPos = s0;\n\t\t                    s1 = peg$f152();\n\t\t                }\n\t\t                s0 = s1;\n\t\t                if (s0 === peg$FAILED) {\n\t\t                    s0 = peg$currPos;\n\t\t                    if (input.substr(peg$currPos, 2) === peg$c183) {\n\t\t                        s1 = peg$c183;\n\t\t                        peg$currPos += 2;\n\t\t                    }\n\t\t                    else {\n\t\t                        s1 = peg$FAILED;\n\t\t                        if (peg$silentFails === 0) {\n\t\t                            peg$fail(peg$e193);\n\t\t                        }\n\t\t                    }\n\t\t                    if (s1 !== peg$FAILED) {\n\t\t                        peg$savedPos = s0;\n\t\t                        s1 = peg$f153();\n\t\t                    }\n\t\t                    s0 = s1;\n\t\t                    if (s0 === peg$FAILED) {\n\t\t                        s0 = peg$currPos;\n\t\t                        if (input.substr(peg$currPos, 2) === peg$c184) {\n\t\t                            s1 = peg$c184;\n\t\t                            peg$currPos += 2;\n\t\t                        }\n\t\t                        else {\n\t\t                            s1 = peg$FAILED;\n\t\t                            if (peg$silentFails === 0) {\n\t\t                                peg$fail(peg$e194);\n\t\t                            }\n\t\t                        }\n\t\t                        if (s1 !== peg$FAILED) {\n\t\t                            peg$savedPos = s0;\n\t\t                            s1 = peg$f154();\n\t\t                        }\n\t\t                        s0 = s1;\n\t\t                        if (s0 === peg$FAILED) {\n\t\t                            s0 = peg$currPos;\n\t\t                            if (input.substr(peg$currPos, 2) === peg$c185) {\n\t\t                                s1 = peg$c185;\n\t\t                                peg$currPos += 2;\n\t\t                            }\n\t\t                            else {\n\t\t                                s1 = peg$FAILED;\n\t\t                                if (peg$silentFails === 0) {\n\t\t                                    peg$fail(peg$e195);\n\t\t                                }\n\t\t                            }\n\t\t                            if (s1 !== peg$FAILED) {\n\t\t                                peg$savedPos = s0;\n\t\t                                s1 = peg$f155();\n\t\t                            }\n\t\t                            s0 = s1;\n\t\t                            if (s0 === peg$FAILED) {\n\t\t                                s0 = peg$currPos;\n\t\t                                if (input.charCodeAt(peg$currPos) === 33) {\n\t\t                                    s1 = peg$c186;\n\t\t                                    peg$currPos++;\n\t\t                                }\n\t\t                                else {\n\t\t                                    s1 = peg$FAILED;\n\t\t                                    if (peg$silentFails === 0) {\n\t\t                                        peg$fail(peg$e196);\n\t\t                                    }\n\t\t                                }\n\t\t                                if (s1 !== peg$FAILED) {\n\t\t                                    peg$savedPos = s0;\n\t\t                                    s1 = peg$f156();\n\t\t                                }\n\t\t                                s0 = s1;\n\t\t                                if (s0 === peg$FAILED) {\n\t\t                                    s0 = peg$currPos;\n\t\t                                    if (input.charCodeAt(peg$currPos) === 63) {\n\t\t                                        s1 = peg$c145;\n\t\t                                        peg$currPos++;\n\t\t                                    }\n\t\t                                    else {\n\t\t                                        s1 = peg$FAILED;\n\t\t                                        if (peg$silentFails === 0) {\n\t\t                                            peg$fail(peg$e152);\n\t\t                                        }\n\t\t                                    }\n\t\t                                    if (s1 !== peg$FAILED) {\n\t\t                                        peg$savedPos = s0;\n\t\t                                        s1 = peg$f157();\n\t\t                                    }\n\t\t                                    s0 = s1;\n\t\t                                    if (s0 === peg$FAILED) {\n\t\t                                        s0 = peg$currPos;\n\t\t                                        if (input.charCodeAt(peg$currPos) === 8252) {\n\t\t                                            s1 = peg$c187;\n\t\t                                            peg$currPos++;\n\t\t                                        }\n\t\t                                        else {\n\t\t                                            s1 = peg$FAILED;\n\t\t                                            if (peg$silentFails === 0) {\n\t\t                                                peg$fail(peg$e197);\n\t\t                                            }\n\t\t                                        }\n\t\t                                        if (s1 !== peg$FAILED) {\n\t\t                                            peg$savedPos = s0;\n\t\t                                            s1 = peg$f158();\n\t\t                                        }\n\t\t                                        s0 = s1;\n\t\t                                        if (s0 === peg$FAILED) {\n\t\t                                            s0 = peg$currPos;\n\t\t                                            if (input.charCodeAt(peg$currPos) === 8263) {\n\t\t                                                s1 = peg$c188;\n\t\t                                                peg$currPos++;\n\t\t                                            }\n\t\t                                            else {\n\t\t                                                s1 = peg$FAILED;\n\t\t                                                if (peg$silentFails === 0) {\n\t\t                                                    peg$fail(peg$e198);\n\t\t                                                }\n\t\t                                            }\n\t\t                                            if (s1 !== peg$FAILED) {\n\t\t                                                peg$savedPos = s0;\n\t\t                                                s1 = peg$f159();\n\t\t                                            }\n\t\t                                            s0 = s1;\n\t\t                                            if (s0 === peg$FAILED) {\n\t\t                                                s0 = peg$currPos;\n\t\t                                                if (input.charCodeAt(peg$currPos) === 8265) {\n\t\t                                                    s1 = peg$c189;\n\t\t                                                    peg$currPos++;\n\t\t                                                }\n\t\t                                                else {\n\t\t                                                    s1 = peg$FAILED;\n\t\t                                                    if (peg$silentFails === 0) {\n\t\t                                                        peg$fail(peg$e199);\n\t\t                                                    }\n\t\t                                                }\n\t\t                                                if (s1 !== peg$FAILED) {\n\t\t                                                    peg$savedPos = s0;\n\t\t                                                    s1 = peg$f160();\n\t\t                                                }\n\t\t                                                s0 = s1;\n\t\t                                                if (s0 === peg$FAILED) {\n\t\t                                                    s0 = peg$currPos;\n\t\t                                                    if (input.charCodeAt(peg$currPos) === 8264) {\n\t\t                                                        s1 = peg$c190;\n\t\t                                                        peg$currPos++;\n\t\t                                                    }\n\t\t                                                    else {\n\t\t                                                        s1 = peg$FAILED;\n\t\t                                                        if (peg$silentFails === 0) {\n\t\t                                                            peg$fail(peg$e200);\n\t\t                                                        }\n\t\t                                                    }\n\t\t                                                    if (s1 !== peg$FAILED) {\n\t\t                                                        peg$savedPos = s0;\n\t\t                                                        s1 = peg$f161();\n\t\t                                                    }\n\t\t                                                    s0 = s1;\n\t\t                                                    if (s0 === peg$FAILED) {\n\t\t                                                        s0 = peg$currPos;\n\t\t                                                        if (input.charCodeAt(peg$currPos) === 9633) {\n\t\t                                                            s1 = peg$c191;\n\t\t                                                            peg$currPos++;\n\t\t                                                        }\n\t\t                                                        else {\n\t\t                                                            s1 = peg$FAILED;\n\t\t                                                            if (peg$silentFails === 0) {\n\t\t                                                                peg$fail(peg$e201);\n\t\t                                                            }\n\t\t                                                        }\n\t\t                                                        if (s1 !== peg$FAILED) {\n\t\t                                                            peg$savedPos = s0;\n\t\t                                                            s1 = peg$f162();\n\t\t                                                        }\n\t\t                                                        s0 = s1;\n\t\t                                                        if (s0 === peg$FAILED) {\n\t\t                                                            s0 = peg$currPos;\n\t\t                                                            if (input.charCodeAt(peg$currPos) === 61) {\n\t\t                                                                s1 = peg$c152;\n\t\t                                                                peg$currPos++;\n\t\t                                                            }\n\t\t                                                            else {\n\t\t                                                                s1 = peg$FAILED;\n\t\t                                                                if (peg$silentFails === 0) {\n\t\t                                                                    peg$fail(peg$e159);\n\t\t                                                                }\n\t\t                                                            }\n\t\t                                                            if (s1 !== peg$FAILED) {\n\t\t                                                                peg$savedPos = s0;\n\t\t                                                                s1 = peg$f163();\n\t\t                                                            }\n\t\t                                                            s0 = s1;\n\t\t                                                            if (s0 === peg$FAILED) {\n\t\t                                                                s0 = peg$currPos;\n\t\t                                                                if (input.charCodeAt(peg$currPos) === 8734) {\n\t\t                                                                    s1 = peg$c192;\n\t\t                                                                    peg$currPos++;\n\t\t                                                                }\n\t\t                                                                else {\n\t\t                                                                    s1 = peg$FAILED;\n\t\t                                                                    if (peg$silentFails === 0) {\n\t\t                                                                        peg$fail(peg$e202);\n\t\t                                                                    }\n\t\t                                                                }\n\t\t                                                                if (s1 !== peg$FAILED) {\n\t\t                                                                    peg$savedPos = s0;\n\t\t                                                                    s1 = peg$f164();\n\t\t                                                                }\n\t\t                                                                s0 = s1;\n\t\t                                                                if (s0 === peg$FAILED) {\n\t\t                                                                    s0 = peg$currPos;\n\t\t                                                                    if (input.charCodeAt(peg$currPos) === 10866) {\n\t\t                                                                        s1 = peg$c193;\n\t\t                                                                        peg$currPos++;\n\t\t                                                                    }\n\t\t                                                                    else {\n\t\t                                                                        s1 = peg$FAILED;\n\t\t                                                                        if (peg$silentFails === 0) {\n\t\t                                                                            peg$fail(peg$e203);\n\t\t                                                                        }\n\t\t                                                                    }\n\t\t                                                                    if (s1 !== peg$FAILED) {\n\t\t                                                                        peg$savedPos = s0;\n\t\t                                                                        s1 = peg$f165();\n\t\t                                                                    }\n\t\t                                                                    s0 = s1;\n\t\t                                                                    if (s0 === peg$FAILED) {\n\t\t                                                                        s0 = peg$currPos;\n\t\t                                                                        if (input.charCodeAt(peg$currPos) === 10865) {\n\t\t                                                                            s1 = peg$c194;\n\t\t                                                                            peg$currPos++;\n\t\t                                                                        }\n\t\t                                                                        else {\n\t\t                                                                            s1 = peg$FAILED;\n\t\t                                                                            if (peg$silentFails === 0) {\n\t\t                                                                                peg$fail(peg$e204);\n\t\t                                                                            }\n\t\t                                                                        }\n\t\t                                                                        if (s1 !== peg$FAILED) {\n\t\t                                                                            peg$savedPos = s0;\n\t\t                                                                            s1 = peg$f166();\n\t\t                                                                        }\n\t\t                                                                        s0 = s1;\n\t\t                                                                        if (s0 === peg$FAILED) {\n\t\t                                                                            s0 = peg$currPos;\n\t\t                                                                            if (input.charCodeAt(peg$currPos) === 177) {\n\t\t                                                                                s1 = peg$c195;\n\t\t                                                                                peg$currPos++;\n\t\t                                                                            }\n\t\t                                                                            else {\n\t\t                                                                                s1 = peg$FAILED;\n\t\t                                                                                if (peg$silentFails === 0) {\n\t\t                                                                                    peg$fail(peg$e205);\n\t\t                                                                                }\n\t\t                                                                            }\n\t\t                                                                            if (s1 !== peg$FAILED) {\n\t\t                                                                                peg$savedPos = s0;\n\t\t                                                                                s1 = peg$f167();\n\t\t                                                                            }\n\t\t                                                                            s0 = s1;\n\t\t                                                                            if (s0 === peg$FAILED) {\n\t\t                                                                                s0 = peg$currPos;\n\t\t                                                                                if (input.charCodeAt(peg$currPos) === 8723) {\n\t\t                                                                                    s1 = peg$c196;\n\t\t                                                                                    peg$currPos++;\n\t\t                                                                                }\n\t\t                                                                                else {\n\t\t                                                                                    s1 = peg$FAILED;\n\t\t                                                                                    if (peg$silentFails === 0) {\n\t\t                                                                                        peg$fail(peg$e206);\n\t\t                                                                                    }\n\t\t                                                                                }\n\t\t                                                                                if (s1 !== peg$FAILED) {\n\t\t                                                                                    peg$savedPos = s0;\n\t\t                                                                                    s1 = peg$f168();\n\t\t                                                                                }\n\t\t                                                                                s0 = s1;\n\t\t                                                                                if (s0 === peg$FAILED) {\n\t\t                                                                                    s0 = peg$currPos;\n\t\t                                                                                    if (input.substr(peg$currPos, 2) === peg$c178) {\n\t\t                                                                                        s1 = peg$c178;\n\t\t                                                                                        peg$currPos += 2;\n\t\t                                                                                    }\n\t\t                                                                                    else {\n\t\t                                                                                        s1 = peg$FAILED;\n\t\t                                                                                        if (peg$silentFails === 0) {\n\t\t                                                                                            peg$fail(peg$e188);\n\t\t                                                                                        }\n\t\t                                                                                    }\n\t\t                                                                                    if (s1 !== peg$FAILED) {\n\t\t                                                                                        peg$savedPos = s0;\n\t\t                                                                                        s1 = peg$f169();\n\t\t                                                                                    }\n\t\t                                                                                    s0 = s1;\n\t\t                                                                                    if (s0 === peg$FAILED) {\n\t\t                                                                                        s0 = peg$currPos;\n\t\t                                                                                        if (input.substr(peg$currPos, 2) === peg$c197) {\n\t\t                                                                                            s1 = peg$c197;\n\t\t                                                                                            peg$currPos += 2;\n\t\t                                                                                        }\n\t\t                                                                                        else {\n\t\t                                                                                            s1 = peg$FAILED;\n\t\t                                                                                            if (peg$silentFails === 0) {\n\t\t                                                                                                peg$fail(peg$e207);\n\t\t                                                                                            }\n\t\t                                                                                        }\n\t\t                                                                                        if (s1 !== peg$FAILED) {\n\t\t                                                                                            peg$savedPos = s0;\n\t\t                                                                                            s1 = peg$f170();\n\t\t                                                                                        }\n\t\t                                                                                        s0 = s1;\n\t\t                                                                                        if (s0 === peg$FAILED) {\n\t\t                                                                                            s0 = peg$currPos;\n\t\t                                                                                            if (input.charCodeAt(peg$currPos) === 10752) {\n\t\t                                                                                                s1 = peg$c198;\n\t\t                                                                                                peg$currPos++;\n\t\t                                                                                            }\n\t\t                                                                                            else {\n\t\t                                                                                                s1 = peg$FAILED;\n\t\t                                                                                                if (peg$silentFails === 0) {\n\t\t                                                                                                    peg$fail(peg$e208);\n\t\t                                                                                                }\n\t\t                                                                                            }\n\t\t                                                                                            if (s1 !== peg$FAILED) {\n\t\t                                                                                                peg$savedPos = s0;\n\t\t                                                                                                s1 = peg$f171();\n\t\t                                                                                            }\n\t\t                                                                                            s0 = s1;\n\t\t                                                                                            if (s0 === peg$FAILED) {\n\t\t                                                                                                s0 = peg$currPos;\n\t\t                                                                                                if (input.charCodeAt(peg$currPos) === 10227) {\n\t\t                                                                                                    s1 = peg$c199;\n\t\t                                                                                                    peg$currPos++;\n\t\t                                                                                                }\n\t\t                                                                                                else {\n\t\t                                                                                                    s1 = peg$FAILED;\n\t\t                                                                                                    if (peg$silentFails === 0) {\n\t\t                                                                                                        peg$fail(peg$e209);\n\t\t                                                                                                    }\n\t\t                                                                                                }\n\t\t                                                                                                if (s1 !== peg$FAILED) {\n\t\t                                                                                                    peg$savedPos = s0;\n\t\t                                                                                                    s1 = peg$f172();\n\t\t                                                                                                }\n\t\t                                                                                                s0 = s1;\n\t\t                                                                                                if (s0 === peg$FAILED) {\n\t\t                                                                                                    s0 = peg$currPos;\n\t\t                                                                                                    if (input.charCodeAt(peg$currPos) === 8594) {\n\t\t                                                                                                        s1 = peg$c200;\n\t\t                                                                                                        peg$currPos++;\n\t\t                                                                                                    }\n\t\t                                                                                                    else {\n\t\t                                                                                                        s1 = peg$FAILED;\n\t\t                                                                                                        if (peg$silentFails === 0) {\n\t\t                                                                                                            peg$fail(peg$e210);\n\t\t                                                                                                        }\n\t\t                                                                                                    }\n\t\t                                                                                                    if (s1 !== peg$FAILED) {\n\t\t                                                                                                        peg$savedPos = s0;\n\t\t                                                                                                        s1 = peg$f173();\n\t\t                                                                                                    }\n\t\t                                                                                                    s0 = s1;\n\t\t                                                                                                    if (s0 === peg$FAILED) {\n\t\t                                                                                                        s0 = peg$currPos;\n\t\t                                                                                                        if (input.charCodeAt(peg$currPos) === 8593) {\n\t\t                                                                                                            s1 = peg$c201;\n\t\t                                                                                                            peg$currPos++;\n\t\t                                                                                                        }\n\t\t                                                                                                        else {\n\t\t                                                                                                            s1 = peg$FAILED;\n\t\t                                                                                                            if (peg$silentFails === 0) {\n\t\t                                                                                                                peg$fail(peg$e211);\n\t\t                                                                                                            }\n\t\t                                                                                                        }\n\t\t                                                                                                        if (s1 !== peg$FAILED) {\n\t\t                                                                                                            peg$savedPos = s0;\n\t\t                                                                                                            s1 = peg$f174();\n\t\t                                                                                                        }\n\t\t                                                                                                        s0 = s1;\n\t\t                                                                                                        if (s0 === peg$FAILED) {\n\t\t                                                                                                            s0 = peg$currPos;\n\t\t                                                                                                            if (input.charCodeAt(peg$currPos) === 8646) {\n\t\t                                                                                                                s1 = peg$c202;\n\t\t                                                                                                                peg$currPos++;\n\t\t                                                                                                            }\n\t\t                                                                                                            else {\n\t\t                                                                                                                s1 = peg$FAILED;\n\t\t                                                                                                                if (peg$silentFails === 0) {\n\t\t                                                                                                                    peg$fail(peg$e212);\n\t\t                                                                                                                }\n\t\t                                                                                                            }\n\t\t                                                                                                            if (s1 !== peg$FAILED) {\n\t\t                                                                                                                peg$savedPos = s0;\n\t\t                                                                                                                s1 = peg$f175();\n\t\t                                                                                                            }\n\t\t                                                                                                            s0 = s1;\n\t\t                                                                                                            if (s0 === peg$FAILED) {\n\t\t                                                                                                                s0 = peg$currPos;\n\t\t                                                                                                                if (input.charCodeAt(peg$currPos) === 68) {\n\t\t                                                                                                                    s1 = peg$c203;\n\t\t                                                                                                                    peg$currPos++;\n\t\t                                                                                                                }\n\t\t                                                                                                                else {\n\t\t                                                                                                                    s1 = peg$FAILED;\n\t\t                                                                                                                    if (peg$silentFails === 0) {\n\t\t                                                                                                                        peg$fail(peg$e213);\n\t\t                                                                                                                    }\n\t\t                                                                                                                }\n\t\t                                                                                                                if (s1 !== peg$FAILED) {\n\t\t                                                                                                                    peg$savedPos = s0;\n\t\t                                                                                                                    s1 = peg$f176();\n\t\t                                                                                                                }\n\t\t                                                                                                                s0 = s1;\n\t\t                                                                                                            }\n\t\t                                                                                                        }\n\t\t                                                                                                    }\n\t\t                                                                                                }\n\t\t                                                                                            }\n\t\t                                                                                        }\n\t\t                                                                                    }\n\t\t                                                                                }\n\t\t                                                                            }\n\t\t                                                                        }\n\t\t                                                                    }\n\t\t                                                                }\n\t\t                                                            }\n\t\t                                                        }\n\t\t                                                    }\n\t\t                                                }\n\t\t                                            }\n\t\t                                        }\n\t\t                                    }\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsediscriminator() {\n\t\t            var s0;\n\t\t            s0 = peg$parsecolumn();\n\t\t            if (s0 === peg$FAILED) {\n\t\t                s0 = peg$parserow();\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsecheckdisc() {\n\t\t            var s0, s1, s2, s3, s4;\n\t\t            s0 = peg$currPos;\n\t\t            s1 = peg$parsediscriminator();\n\t\t            if (s1 !== peg$FAILED) {\n\t\t                s2 = peg$parsestrike();\n\t\t                if (s2 === peg$FAILED) {\n\t\t                    s2 = null;\n\t\t                }\n\t\t                s3 = peg$parsecolumn();\n\t\t                if (s3 !== peg$FAILED) {\n\t\t                    s4 = peg$parserow();\n\t\t                    if (s4 !== peg$FAILED) {\n\t\t                        s1 = [s1, s2, s3, s4];\n\t\t                        s0 = s1;\n\t\t                    }\n\t\t                    else {\n\t\t                        peg$currPos = s0;\n\t\t                        s0 = peg$FAILED;\n\t\t                    }\n\t\t                }\n\t\t                else {\n\t\t                    peg$currPos = s0;\n\t\t                    s0 = peg$FAILED;\n\t\t                }\n\t\t            }\n\t\t            else {\n\t\t                peg$currPos = s0;\n\t\t                s0 = peg$FAILED;\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsefigure() {\n\t\t            var s0;\n\t\t            if (peg$r7.test(input.charAt(peg$currPos))) {\n\t\t                s0 = input.charAt(peg$currPos);\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e214);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsepromFigure() {\n\t\t            var s0;\n\t\t            if (peg$r8.test(input.charAt(peg$currPos))) {\n\t\t                s0 = input.charAt(peg$currPos);\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e215);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsecolumn() {\n\t\t            var s0;\n\t\t            if (peg$r9.test(input.charAt(peg$currPos))) {\n\t\t                s0 = input.charAt(peg$currPos);\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e216);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parserow() {\n\t\t            var s0;\n\t\t            if (peg$r10.test(input.charAt(peg$currPos))) {\n\t\t                s0 = input.charAt(peg$currPos);\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e217);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsestrike() {\n\t\t            var s0;\n\t\t            if (input.charCodeAt(peg$currPos) === 120) {\n\t\t                s0 = peg$c204;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e218);\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        function peg$parsestrikeOrDash() {\n\t\t            var s0;\n\t\t            if (input.charCodeAt(peg$currPos) === 120) {\n\t\t                s0 = peg$c204;\n\t\t                peg$currPos++;\n\t\t            }\n\t\t            else {\n\t\t                s0 = peg$FAILED;\n\t\t                if (peg$silentFails === 0) {\n\t\t                    peg$fail(peg$e218);\n\t\t                }\n\t\t            }\n\t\t            if (s0 === peg$FAILED) {\n\t\t                if (input.charCodeAt(peg$currPos) === 45) {\n\t\t                    s0 = peg$c146;\n\t\t                    peg$currPos++;\n\t\t                }\n\t\t                else {\n\t\t                    s0 = peg$FAILED;\n\t\t                    if (peg$silentFails === 0) {\n\t\t                        peg$fail(peg$e153);\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return s0;\n\t\t        }\n\t\t        var messages = [];\n\t\t        function addMessage(json) {\n\t\t            var o = Object.assign(json, location());\n\t\t            messages.push(o);\n\t\t            return o;\n\t\t        }\n\t\t        function makeInteger(o) {\n\t\t            return parseInt(o.join(\"\"), 10);\n\t\t        }\n\t\t        function mi(o) {\n\t\t            return o.join(\"\").match(/\\?/) ? o.join(\"\") : makeInteger(o);\n\t\t        }\n\t\t        function merge(array) {\n\t\t            var ret = {};\n\t\t            // return array\n\t\t            array.forEach(function (json) {\n\t\t                for (var key in json) {\n\t\t                    if (Array.isArray(json[key])) {\n\t\t                        ret[key] = ret[key] ? ret[key].concat(json[key]) : json[key];\n\t\t                    }\n\t\t                    else {\n\t\t                        ret[key] = ret[key] ? trimEnd(ret[key]) + \" \" + trimStart(json[key]) : json[key];\n\t\t                    }\n\t\t                }\n\t\t            });\n\t\t            return ret;\n\t\t        }\n\t\t        function trimStart(st) {\n\t\t            if (typeof st !== \"string\")\n\t\t                return st;\n\t\t            var r = /^\\s+/;\n\t\t            return st.replace(r, '');\n\t\t        }\n\t\t        function trimEnd(st) {\n\t\t            if (typeof st !== \"string\")\n\t\t                return st;\n\t\t            var r = /\\s+$/;\n\t\t            return st.replace(r, '');\n\t\t        }\n\t\t        peg$result = peg$startRuleFunction();\n\t\t        if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n\t\t            return peg$result;\n\t\t        }\n\t\t        else {\n\t\t            if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n\t\t                peg$fail(peg$endExpectation());\n\t\t            }\n\t\t            throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\n\t\t                ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n\t\t                : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n\t\t        }\n\t\t    }\n\t\t    return {\n\t\t        SyntaxError: peg$SyntaxError,\n\t\t        parse: peg$parse\n\t\t    };\n\t\t});\n\t} (_pgnParser));\n\n\tvar PegParser = _pgnParser.exports;\n\n\t// import PegParser = require(\"./_pgn-parser\")\n\t/**\n\t * General parse function, that accepts all `startRule`s. Calls then the more specific ones, so that the\n\t * postParse processing can now rely on the same structure all the time.\n\t * @param input - the PGN string that will be parsed according to the `startRule` given\n\t * @param options - the parameters that have to include the `startRule`\n\t * @returns a ParseTree or an array of ParseTrees, depending on the startRule\n\t */\n\tfunction parse(input, options) {\n\t    if (!options || (options.startRule === 'games')) {\n\t        return parseGames(input, options);\n\t    }\n\t    else {\n\t        return parseGame(input, options);\n\t    }\n\t}\n\t/**\n\t * Special parse function to parse one game only, options may be omitted.\n\t * @param input - the PGN string that will be parsed\n\t * @param options - object with additional parameters (not used at the moment)\n\t * @returns a ParseTree with the defined structure\n\t */\n\tfunction parseGame(input, options = { startRule: \"game\" }) {\n\t    input = input.trim();\n\t    // Ensure that the correct structure exists: { tags: xxx, moves: ... }\n\t    let result = PegParser.parse(input, options);\n\t    let res2 = { moves: [], messages: [] };\n\t    if (options.startRule === \"pgn\") {\n\t        let moves = result;\n\t        res2.moves = moves;\n\t    }\n\t    else if (options.startRule === \"tags\") {\n\t        let tags = result;\n\t        res2.tags = tags;\n\t    }\n\t    else {\n\t        res2 = result;\n\t    }\n\t    return postParseGame(res2, input, options);\n\t}\n\tfunction postParseGame(_parseTree, _input, _options) {\n\t    /** Ensure that the result is kept as tag only, so no check of last move is necessary any more. */\n\t    function handleGameResult(parseTree) {\n\t        if (_options.startRule !== 'tags') {\n\t            let move = parseTree.moves[parseTree.moves.length - 1];\n\t            if (typeof move == 'string') {\n\t                parseTree.moves.pop();\n\t                if (parseTree.tags) {\n\t                    let tmp = parseTree.tags[\"Result\"];\n\t                    if (tmp) {\n\t                        if (move !== tmp) {\n\t                            parseTree.messages.push({ key: \"Result\", value: tmp, message: \"Result in tags is different to result in SAN\" });\n\t                        }\n\t                    }\n\t                    parseTree.tags[\"Result\"] = move;\n\t                }\n\t            }\n\t        }\n\t        return parseTree;\n\t    }\n\t    function handleTurn(parseResult) {\n\t        function handleTurnGame(_game) {\n\t            function getTurnFromFEN(fen) {\n\t                return fen.split(/\\s+/)[1];\n\t            }\n\t            function setTurn(_move, _currentTurn) {\n\t                function switchTurn(currentTurn) {\n\t                    return currentTurn === 'w' ? 'b' : 'w';\n\t                }\n\t                _move.turn = _currentTurn;\n\t                if (_move.variations) {\n\t                    _move.variations.forEach(function (variation) {\n\t                        let varTurn = _currentTurn;\n\t                        variation.forEach(varMove => varTurn = setTurn(varMove, varTurn));\n\t                    });\n\t                }\n\t                return switchTurn(_currentTurn);\n\t            }\n\t            const START = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n\t            let fen = _options.fen || (_game.tags && _game.tags['FEN']) || START;\n\t            let currentTurn = getTurnFromFEN(fen);\n\t            _game.moves.forEach(move => currentTurn = setTurn(move, currentTurn));\n\t            return _game;\n\t        }\n\t        if (!parseResult.moves) {\n\t            return parseResult;\n\t        }\n\t        return handleTurnGame(parseResult);\n\t    }\n\t    return handleTurn(handleGameResult(_parseTree));\n\t}\n\t/**\n\t * Parses possibly more than one game, therefore returns an array of ParseTree.\n\t * @param input the PGN string to parse\n\t * @param options the optional parameters (not used at the moment)\n\t * @returns an array of ParseTrees, one for each game included\n\t */\n\tfunction parseGames(input, options = { startRule: \"games\" }) {\n\t    function handleGamesAnomaly(parseTree) {\n\t        if (!Array.isArray(parseTree))\n\t            return [];\n\t        if (parseTree.length === 0)\n\t            return parseTree;\n\t        let last = parseTree.pop();\n\t        if ((last.tags !== undefined) || (last.moves.length > 0)) {\n\t            parseTree.push(last);\n\t        }\n\t        return parseTree;\n\t    }\n\t    function postParseGames(parseTrees, input, options = { startRule: \"games\" }) {\n\t        return handleGamesAnomaly(parseTrees);\n\t    }\n\t    const gamesOptions = Object.assign({ startRule: \"games\" }, options);\n\t    let result = PegParser.parse(input, gamesOptions);\n\t    if (!result) {\n\t        return [];\n\t    }\n\t    postParseGames(result, input, gamesOptions);\n\t    result.forEach((pt) => {\n\t        postParseGame(pt, input, gamesOptions);\n\t    });\n\t    return result;\n\t}\n\n\tconst normalizeLineEndings = (str, normalized = '\\n') => str.replace(/\\r?\\n/g, normalized);\n\t/**\n\t * Returns an array of SplitGames, which are objects that may contain tags and / or pgn strings.\n\t * @param input - the PGN string that may contain multiple games\n\t * @param options - not used at the moment\n\t * @returns an array of SplitGame to be parsed later\n\t */\n\tfunction split(input, options = { startRule: \"games\" }) {\n\t    // let result = parser.parse(input, options)\n\t    let result = normalizeLineEndings(input).split(\"\\n\\n\");\n\t    let res = [];\n\t    let g = { tags: '', pgn: '', all: '' };\n\t    result.forEach(function (part) {\n\t        if (part.startsWith('[')) {\n\t            g.tags = part;\n\t        }\n\t        else if (part) {\n\t            g.pgn = part;\n\t            let game = g.tags ? g.tags + \"\\n\\n\" + g.pgn : g.pgn;\n\t            g.all = game;\n\t            res.push(g);\n\t            g = { tags: '', pgn: '', all: '' };\n\t        }\n\t    });\n\t    return res;\n\t}\n\n\texports.parse = parse;\n\texports.parseGame = parseGame;\n\texports.parseGames = parseGames;\n\texports.split = split;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { parseGame } from '@mliebelt/pgn-parser';\nvar Index = /** @class */ (function () {\n    function Index(pgn, diagrams) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.pgn = pgn;\n        this.diagrams = diagrams;\n        this.game = parseGame(this.pgn);\n        this.moveStr = '';\n        this.header = this.game.tags;\n        this.texStart = \"\\\\documentclass{article}\\\\usepackage{xskak}\\\\usepackage{multicol}\\\\usepackage[a4paper]{geometry}\\\\usepackage{parskip}\\\\geometry{left=1.25cm,right=1.25cm,top=1.5cm,bottom=1.5cm,columnsep=1.2cm}\\\\setlength{\\\\parindent}{0pt}\\\\title{\".concat((_a = this.header) === null || _a === void 0 ? void 0 : _a.White, \" (\").concat((_b = this.header) === null || _b === void 0 ? void 0 : _b.WhiteElo, \") - \").concat((_c = this.header) === null || _c === void 0 ? void 0 : _c.Black, \" (\").concat((_d = this.header) === null || _d === void 0 ? void 0 : _d.BlackElo, \")}\\\\date{\").concat((_e = this.header) === null || _e === void 0 ? void 0 : _e.Date.value, \", \").concat((_f = this.header) === null || _f === void 0 ? void 0 : _f.Site, \"}\\\\author{\").concat((_g = this.header) === null || _g === void 0 ? void 0 : _g.Event, \"}\\\\begin{document}\\\\begin{multicols}{2}\\\\maketitle\\\\newchessgame\");\n        this.texEnd = '\\n\\\\end{multicols}\\\\end{document}';\n        this.moves = this.game.moves;\n    }\n    Index.prototype.addThreeDots = function (move) {\n        if (move.turn === 'w')\n            this.moveStr += \"\\\\textbf{\".concat(move.moveNumber, \"...}\");\n    };\n    Index.prototype.sideToMove = function (move) {\n        if (move.turn === 'w')\n            this.moveStr += \"\\\\textbf{\".concat(move.moveNumber, \".}\");\n        this.moveStr += \"\\\\textbf{\".concat(move.notation.notation, \"} \");\n    };\n    Index.prototype.commentsAfter = function (move) {\n        if (move.commentAfter) {\n            this.moveStr += \"\\\\newline \".concat(move.commentAfter.trim(), \" \\\\par \");\n            this.addThreeDots(move);\n        }\n    };\n    Index.prototype.diagram = function (move, index) {\n        var diagramExists = this.diagrams.find(function (x) { return x.ply === index + 1; });\n        if (diagramExists) {\n            this.moveStr += \"\\\\par\\\\chessboard[setfen=\".concat(diagramExists.fen, \"]\\\\par \");\n            this.addThreeDots(move);\n        }\n    };\n    Index.prototype.variations = function (move, depth) {\n        var _this = this;\n        if (depth === void 0) { depth = 1; }\n        var variationString = '';\n        if (move.variations.length > 0) {\n            move.variations.forEach(function (variation) {\n                variationString += '(';\n                variation.forEach(function (varMove, varIndex) {\n                    var dots = varMove.turn === 'b' && varIndex === 0 ? '...' : '';\n                    var moveNumber = varMove.turn === 'w' ? \"\".concat(varMove.moveNumber, \".\") : '';\n                    variationString += \"\".concat(dots).concat(moveNumber).concat(varMove.notation.notation, \" \");\n                    variationString += _this.variations(varMove, depth + 1);\n                });\n                variationString = \"\".concat(variationString.trim(), \") \");\n            });\n            if (depth === 1) {\n                this.moveStr += \"\".concat(variationString.trim(), \" \");\n                this.addThreeDots(move);\n            }\n        }\n        return variationString.trim();\n    };\n    Index.prototype.format = function () {\n        var _a;\n        this.moveStr += \"\\\\textbf{\".concat((_a = this.header) === null || _a === void 0 ? void 0 : _a.Result, \"}\");\n        this.moveStr.replaceAll(/#/g, '\\\\#');\n    };\n    Index.prototype.toTex = function () {\n        var _this = this;\n        this.moves.forEach(function (move, index) {\n            _this.sideToMove(move);\n            _this.commentsAfter(move);\n            _this.diagram(move, index);\n            _this.variations(move);\n        });\n        this.format();\n        return \"\".concat(this.texStart).concat(this.moveStr).concat(this.texEnd);\n    };\n    return Index;\n}());\nexport default Index;\n"],"names":["exports","globalThis","window","g","self","module","_pgnParser","peg$subclass","child","parent","C","this","constructor","prototype","peg$SyntaxError","message","expected","found","location","Error","call","Object","setPrototypeOf","name","peg$padEnd","str","targetLength","padString","length","repeat","slice","peg$parse","input","options","peg$result","peg$FAILED","peg$source","undefined","grammarSource","peg$startRuleFunctions","pgn","peg$parsepgn","tags","peg$parsetags","game","peg$parsegame","games","peg$parsegames","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","peg$c74","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$c98","peg$c99","peg$c100","peg$c101","peg$c102","peg$c103","peg$c104","peg$c105","peg$c106","peg$c107","peg$c108","peg$c109","peg$c110","peg$c111","peg$c112","peg$c113","peg$c114","peg$c115","peg$c116","peg$c117","peg$c118","peg$c119","peg$c120","peg$c121","peg$c122","peg$c123","peg$c124","peg$c125","peg$c126","peg$c127","peg$c128","peg$c129","peg$c130","peg$c131","peg$c132","peg$c133","peg$c134","peg$c135","peg$c137","peg$c138","peg$c139","peg$c140","peg$c141","peg$c142","peg$c143","peg$c144","peg$c145","peg$c146","peg$c147","peg$c148","peg$c149","peg$c150","peg$c151","peg$c152","peg$c153","peg$c154","peg$c155","peg$c156","peg$c157","peg$c158","peg$c159","peg$c160","peg$c161","peg$c162","peg$c163","peg$c164","peg$c165","peg$c166","peg$c167","peg$c168","peg$c169","peg$c170","peg$c171","peg$c172","peg$c173","peg$c174","peg$c175","peg$c176","peg$c177","peg$c178","peg$c179","peg$c180","peg$c181","peg$c182","peg$c183","peg$c184","peg$c185","peg$c186","peg$c187","peg$c188","peg$c189","peg$c190","peg$c191","peg$c192","peg$c193","peg$c194","peg$c195","peg$c196","peg$c197","peg$c198","peg$c199","peg$c200","peg$c201","peg$c202","peg$c203","peg$c204","peg$r0","peg$r1","peg$r2","peg$r3","peg$r4","peg$r5","peg$r6","peg$r7","peg$r8","peg$r9","peg$r10","peg$e0","peg$literalExpectation","peg$e1","peg$e2","peg$e3","peg$e4","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$e19","peg$e20","peg$e21","peg$e22","peg$e23","peg$e24","peg$e25","peg$e26","peg$e27","peg$e28","peg$e29","peg$e30","peg$e31","peg$e32","peg$e33","peg$e34","peg$e35","peg$e36","peg$e37","peg$e38","peg$e39","peg$e40","peg$e41","peg$e42","peg$e43","peg$e44","peg$e45","peg$e46","peg$e47","peg$e48","peg$e49","peg$e50","peg$e51","peg$e52","peg$e53","peg$e54","peg$e55","peg$e56","peg$e57","peg$e58","peg$e59","peg$e60","peg$e61","peg$e62","peg$e63","peg$e64","peg$e65","peg$e66","peg$e67","peg$e68","peg$e69","peg$e70","peg$e71","peg$e72","peg$e73","peg$e74","peg$e75","peg$e76","peg$e77","peg$e78","peg$e79","peg$e80","peg$e81","peg$e82","peg$e83","peg$e84","peg$e85","peg$e86","peg$e87","peg$e88","peg$e89","peg$e90","peg$e91","peg$e92","peg$e93","peg$e94","peg$e95","peg$e96","peg$e97","peg$e98","peg$e99","peg$e100","peg$e101","peg$e102","peg$e103","peg$e104","peg$e105","peg$e106","peg$e107","peg$e108","peg$e109","peg$e110","peg$e111","peg$e112","peg$e113","peg$e114","peg$e115","peg$e116","peg$e117","peg$e118","peg$e119","peg$e120","peg$e121","peg$e122","peg$e123","peg$e124","peg$e125","peg$e126","peg$e127","peg$e128","peg$e129","peg$e130","peg$e131","peg$e132","peg$e133","peg$e134","peg$e135","peg$e136","peg$otherExpectation","peg$e137","peg$classExpectation","peg$e138","peg$e140","peg$e141","peg$e142","peg$e143","peg$e144","peg$e145","peg$e146","peg$e147","peg$e148","peg$e149","peg$e150","peg$e151","peg$e152","peg$e153","peg$e154","peg$e155","peg$e156","peg$e157","peg$e158","peg$e159","peg$e160","peg$e161","peg$e162","peg$e163","peg$e164","peg$e165","peg$e166","peg$anyExpectation","peg$e167","peg$e168","peg$e169","peg$e170","peg$e171","peg$e172","peg$e173","peg$e174","peg$e175","peg$e176","peg$e177","peg$e178","peg$e179","peg$e180","peg$e181","peg$e182","peg$e183","peg$e184","peg$e185","peg$e186","peg$e187","peg$e188","peg$e189","peg$e190","peg$e191","peg$e192","peg$e193","peg$e194","peg$e195","peg$e196","peg$e197","peg$e198","peg$e199","peg$e200","peg$e201","peg$e202","peg$e203","peg$e204","peg$e205","peg$e206","peg$e207","peg$e208","peg$e209","peg$e210","peg$e211","peg$e212","peg$e213","peg$e214","peg$e215","peg$e216","peg$e217","peg$e218","peg$f0","head","m","peg$f1","tail","concat","peg$f2","peg$f3","t","c","p","mess","messages","gameComment","moves","peg$f4","peg$f5","result","forEach","element","value","peg$f6","members","peg$f7","tag","peg$f8","peg$f9","peg$f10","peg$f11","peg$f12","peg$f13","peg$f14","peg$f15","peg$f16","peg$f17","peg$f18","peg$f19","peg$f20","peg$f21","peg$f22","peg$f23","peg$f24","peg$f25","peg$f26","peg$f27","peg$f28","peg$f29","peg$f30","peg$f31","peg$f32","peg$f33","peg$f34","peg$f35","peg$f36","peg$f37","peg$f38","peg$f39","peg$f40","peg$f41","peg$f42","peg$f43","peg$f44","peg$f45","peg$f46","peg$f47","peg$f48","peg$f49","peg$f50","peg$f51","peg$f52","peg$f53","peg$f54","peg$f55","a","addMessage","key","peg$f56","peg$f58","chars","join","peg$f59","stringContent","map","char","peg$f60","type","peg$f61","peg$f62","sequence","peg$f63","year","month","day","mi","peg$f64","hour","minute","second","millis","val","ms","peg$f65","peg$f66","peg$f67","peg$f68","peg$f69","peg$f70","res","peg$f71","peg$f72","peg$f73","tcnqs","peg$f74","kind","peg$f75","peg$f76","seconds","incr","increment","peg$f77","peg$f78","peg$f79","peg$f80","peg$f81","peg$f82","peg$f83","peg$f84","peg$f85","peg$f86","v","peg$f87","peg$f88","peg$f89","digits","makeInteger","peg$f90","cm","mn","hm","nag","dr","ca","vari","all","arr","move","moveNumber","notation","commentAfter","comment","commentMove","drawOffer","variations","unshift","commentDiag","peg$f91","e","peg$f92","eg","peg$f93","cf","peg$f94","cfl","merge","peg$f95","peg$f96","peg$f97","ic","peg$f98","colorFields","peg$f99","peg$f100","colorArrows","peg$f101","cc","cv","peg$f102","ret","peg$f103","peg$f104","peg$f105","ev","peg$f106","parseFloat","peg$f107","ac","peg$f108","peg$f109","peg$f110","trimEnd","trimStart","peg$f111","peg$f112","peg$f113","peg$f114","push","i","peg$f115","col","f","peg$f116","peg$f117","ff","ft","peg$f118","peg$f119","peg$f120","peg$f121","peg$f122","row","peg$f127","peg$f128","peg$f129","peg$f130","peg$f131","s1","s2","match","search","peg$f132","peg$f133","hours","minutes","peg$f134","h1","h2","peg$f135","m1","m2","peg$f136","d","peg$f137","peg$f138","num","peg$f139","peg$f140","peg$f141","fig","disc","pr","ch","strike","check","promotion","peg$f142","cols","rows","peg$f143","peg$f144","peg$f145","peg$f146","drop","peg$f147","peg$f148","peg$f149","peg$f150","nags","peg$f151","peg$f152","peg$f153","peg$f154","peg$f155","peg$f156","peg$f157","peg$f158","peg$f159","peg$f160","peg$f161","peg$f162","peg$f163","peg$f164","peg$f165","peg$f166","peg$f167","peg$f168","peg$f169","peg$f170","peg$f171","peg$f172","peg$f173","peg$f174","peg$f175","peg$f176","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","peg$computeLocation","text","ignoreCase","parts","inverted","peg$endExpectation","description","peg$computePosDetails","pos","details","charCodeAt","startPos","endPos","startPosDetails","endPosDetails","source","start","offset","end","peg$fail","peg$buildStructuredError","buildMessage","s0","s3","s4","s5","s7","peg$parsews","peg$parsecomments","peg$parsetag","peg$parsebl","peg$parsetagKeyValue","peg$parsebr","peg$parseeventKey","peg$parsestring","peg$parsesiteKey","peg$parsedateKey","peg$parsedateString","peg$parseroundKey","peg$parsewhiteTitleKey","peg$parseblackTitleKey","peg$parsewhiteEloKey","peg$parseintegerOrDashString","peg$parseblackEloKey","peg$parsewhiteUSCFKey","peg$parseintegerString","peg$parseblackUSCFKey","peg$parsewhiteNAKey","peg$parseblackNAKey","peg$parsewhiteTypeKey","peg$parseblackTypeKey","peg$parsewhiteKey","peg$parseblackKey","peg$parseresultKey","peg$parseresult","peg$parseeventDateKey","peg$parseeventSponsorKey","peg$parsesectionKey","peg$parsestageKey","peg$parseboardKey","peg$parseopeningKey","peg$parsevariationKey","peg$parsesubVariationKey","peg$parseecoKey","peg$parsenicKey","peg$parsetimeKey","peg$parsetimeString","peg$parseutcTimeKey","peg$parseutcDateKey","peg$parsetimeControlKey","peg$parsetimeControl","peg$parsesetUpKey","peg$parsefenKey","peg$parseterminationKey","peg$parseannotatorKey","peg$parsemodeKey","peg$parseplyCountKey","peg$parsevariantKey","peg$parsewhiteRatingDiffKey","peg$parseblackRatingDiffKey","peg$parsewhiteFideIdKey","peg$parseblackFideIdKey","peg$parsewhiteTeamKey","peg$parseblackTeamKey","peg$parseclockKey","peg$parsecolorClockTimeQ","peg$parsewhiteClockKey","peg$parseclockTimeQ","peg$parseblackClockKey","peg$parsevalidatedKey","peg$parsestringNoQuot","substr","test","charAt","peg$parsewsp","peg$parseeol","peg$parsequotation_mark","peg$parse_","peg$parsestringChar","peg$parseEscape","s6","s8","peg$parsemillis","peg$parsecolorClockTime","peg$parseclockColor","peg$parseclockTime","peg$parseclockValue1D","peg$parsetcnqs","peg$parsetcnq","peg$parseinteger","peg$parseinnerResult","s9","s11","s13","s14","peg$parsemoveNumber","peg$parsehalfMove","peg$parsenags","peg$parsedrawOffer","peg$parsevariation","peg$parseendGame","peg$parsepl","peg$parsepr","peg$parsecomment","peg$parsecl","peg$parseinnerComment","peg$parsecr","peg$parsecommentEndOfLine","s10","s12","peg$parsecolorFields","peg$parsecolorArrows","peg$parseclockCommand1D","peg$parseclockCommand2D","peg$parseclockValue2D","peg$parsenbr","peg$parsenonCommand","peg$parsesemicolon","peg$parsecolorField","peg$parsecolor","peg$parsefield","peg$parsecolorArrow","peg$parsecolumn","peg$parserow","peg$parsehoursMinutes","peg$parsedigit","peg$parsehoursClock","peg$parseminutesClock","peg$parsewhiteSpace","peg$parsedot","peg$parsefigure","peg$parsecheckdisc","peg$parsediscriminator","peg$parsestrike","peg$parsepromotion","peg$parsecheck","peg$parsestrikeOrDash","peg$parsepromFigure","peg$parsenag","json","o","assign","parseInt","array","Array","isArray","st","r","replace","format","sources","k","src","split","s","loc","filler","toString","hatLen","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","part","classEscape","any","other","hex","toUpperCase","describeExpectation","describeExpected","j","descriptions","sort","describeFound","SyntaxError","parse","factory","PegParser","parseGame","trim","res2","postParseGame","_parseTree","_input","_options","parseResult","parseTree","pop","tmp","handleGameResult","_game","setTurn","_move","_currentTurn","turn","variation","varTurn","varMove","currentTurn","switchTurn","fen","handleTurnGame","parseGames","gamesOptions","last","handleGamesAnomaly","pt","normalized","normalizeLineEndings","startsWith","defineProperty","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","definition","enumerable","get","Function","obj","prop","hasOwnProperty","Index","diagrams","_a","_b","_c","_d","_e","_f","_g","moveStr","header","texStart","White","WhiteElo","Black","BlackElo","Date","Site","Event","texEnd","addThreeDots","sideToMove","commentsAfter","diagram","index","diagramExists","find","x","ply","depth","_this","variationString","varIndex","dots","Result","replaceAll","toTex"],"sourceRoot":""}